<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Cloudflare Tunnel访问加速|Saas回源</title>
      <link href="/2025/10/27/Network/01CFTunnelSass/"/>
      <url>/2025/10/27/Network/01CFTunnelSass/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>最近在折腾给Tunnel网站优选加速。</p><p>Cloudflare Tunnel（以前叫 <strong>Argo Tunnel</strong>）是 Cloudflare 提供的一种安全隧道服务，可以让你把本地或私有网络中的应用、安全地暴露到互联网，而 <strong>不需要直接开放服务器端口或暴露公网 IP</strong>。</p><p>关注到一个项目 <a href="https://github.com/xingpingcn/enhanced-FaaS-in-China">Enhanced-FaaS-in-China</a> 号称可以提升部署在 Cloudflare、Vercel 或 Netlify 网页在中国的访问速度和稳定性. 项目是很久前就分享了。</p><p>但是腾讯云<a href="https://edgeone.ai/zh"> Tencent EdgeOne</a>相较于<a href="https://vercel.com/">Vercel</a>在中国大陆区域访问更为迅速。</p><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul><li>主域名已绑定 Cloudflare Tunnel，并正常访问 （例：服务名.主域名.com）<code>nas.winward.com</code></li><li>已托管到 Cloudflare 的加速域名，作为优选域名使用。（例：.辅助域名.com）<code>speedupcf.123456.com</code></li><li>以连接到Tunnel的加速域名（例：加速名.辅助域名.com）<code>speedupnas.123456.com</code></li><li>P.S. 需要两条域名，主域名负责访问，辅助域名做域名优选。</li><li>P.S. Cloudflare免费版一般一个域名只能设置一个回退源</li><li>P.S. 即便加速了也只能保证访问加速和稳定性，并不能改变Tunnel小水管只有1MB&#x2F;S左右</li></ul><h2 id="实操步骤"><a href="#实操步骤" class="headerlink" title="实操步骤"></a>实操步骤</h2><h3 id="1-安装-Cloudflare-Tunnel"><a href="#1-安装-Cloudflare-Tunnel" class="headerlink" title="1.安装 Cloudflare Tunnel"></a>1.安装 Cloudflare Tunnel</h3><p>在服务器(如192.168.1.100)上，安装 Cloudflare Tunnel</p><ul><li><a href="https://developers.cloudflare.com/cloudflare-one/networks/connectors/cloudflare-tunnel/get-started/create-remote-tunnel/"><a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/remote/">隧道文档</a></a></li></ul><hr><h3 id="2-Tunnel隧道配置中添加自定义域名（作为访问）"><a href="#2-Tunnel隧道配置中添加自定义域名（作为访问）" class="headerlink" title="2.Tunnel隧道配置中添加自定义域名（作为访问）"></a>2.Tunnel隧道配置中添加自定义域名（作为访问）</h3><ol><li>登录到 <strong>Cloudflare Tunnel</strong> 控制台。</li><li>在 <strong>隧道配置</strong> 页面，找到并选择你的隧道配置。</li><li>在隧道配置中，手动添加一个自定义域名，例如：<code>nas.winward.com</code>。</li><li>配置完成后，确认 <code>nas.winward.com</code>可以正常解析并访问到站点。</li></ol><hr><h3 id="3-配置优选域名"><a href="#3-配置优选域名" class="headerlink" title="3. 配置优选域名"></a>3. 配置优选域名</h3><ol><li><p>登录到你的加速域名控制台（例如 <code>123456.com</code>）。</p></li><li><p>转到 <strong>DNS 配置</strong> 页面。</p></li><li><p>点击 <strong>添加记录</strong>（Add Record）。</p></li><li><p>在 <strong>Type</strong> 下拉菜单中选择 <strong>CNAME</strong>。</p></li><li><p>在Name </p><p>输入框中，填写你希望加速的子域名</p><ul><li>示例：<code>speedupcf.123456.com</code></li></ul></li><li><p>在 <strong>Target</strong> 输入框中，填写你需要加速的 <strong>优选域名</strong>，例如：<code>www.visa.cn</code> 。</p></li><li><p>确保 <strong>Proxy status</strong>（代理状态）选择 <strong>灰色云朵</strong>（表示关闭代理）。</p></li><li><p>点击 <strong>保存</strong>（Save）。</p></li></ol><hr><h3 id="4-Tunnel配置的加速域名（作为加速）"><a href="#4-Tunnel配置的加速域名（作为加速）" class="headerlink" title="4. Tunnel配置的加速域名（作为加速）"></a>4. Tunnel配置的加速域名（作为加速）</h3><ol><li>登录到 <strong>Cloudflare Tunnel</strong> 控制台。</li><li>在 <strong>隧道配置</strong> 页面，找到并选择你的隧道配置。</li><li>在隧道配置中，手动添加一个自定义域名，例如：<code>speedupnas.123456.com</code>。</li><li>配置完成后，确认 <code>speedupnas.123456.com</code>可以正常解析并访问到站点。</li></ol><hr><h3 id="5-配置回退源"><a href="#5-配置回退源" class="headerlink" title="5.配置回退源"></a>5.配置回退源</h3><ol><li>在加速域名（例如 <code>123456.com</code>）的控制台中，进入 <strong>SSL 配置</strong> 页面。</li><li>找到 <strong>自定义主机名</strong>（Custom Hostnames）设置。</li><li>在 <strong>回退源</strong>（Fallback Origin）中，设置为 <code>speedupnas.123456.com</code>（即刚才配置的隧道域名）。</li><li>刷新页面，确保 <strong>回源</strong> 状态显示为 <strong>有效</strong>（Active）。</li></ol><hr><h3 id="6-添加主机名-nas-winward-com"><a href="#6-添加主机名-nas-winward-com" class="headerlink" title="6. 添加主机名 nas.winward.com"></a>6. 添加主机名 <code>nas.winward.com</code></h3><ol><li>在 <strong>SSL 配置</strong> 页面，点击 <strong>添加主机名</strong>（Add Hostname）。</li><li>输入主机名<code>nas.winward.com</code>。</li><li>选择 <strong>默认配置</strong>（Default Settings）。</li><li>点击 <strong>添加</strong>（Add）。</li></ol><hr><h3 id="7-根据提示添加-TXT-记录"><a href="#7-根据提示添加-TXT-记录" class="headerlink" title="7. 根据提示添加 TXT 记录"></a>7. 根据提示添加 TXT 记录</h3><ol><li>添加主机名后，系统会提示你在主域名中添加一个 TXT 记录。</li><li>回到 <strong>Cloudflare 控制台</strong>，进入 <code>nbvil.com</code> 的 <strong>DNS</strong> 配置页面。</li><li>点击 <strong>添加记录</strong>（Add Record）。</li><li>在 <strong>Type</strong> 下拉菜单中选择 <strong>TXT</strong>。</li><li>在 <strong>Name</strong> 输入框中，输入系统提供的主机名验证记录值（例如：<code>_cf_custom_hostname</code>）。</li><li>在 <strong>Content</strong> 输入框中，填写系统提供的验证内容（例如：<code>&quot;abcdef12345&quot;</code>）。</li><li>确保 <strong>Proxy status</strong> 选择 <strong>灰色云朵</strong>（关闭代理）。</li><li>点击 <strong>保存</strong>（Save）。</li><li>返回 SSL 配置页面，点击 <strong>刷新</strong>（Refresh），确认状态为 <strong>有效</strong>。</li></ol><hr><h3 id="8-修改原主域名记录"><a href="#8-修改原主域名记录" class="headerlink" title="8. 修改原主域名记录"></a>8. 修改原主域名记录</h3><ol><li>回到 <strong>Cloudflare 控制台</strong>，进入 winward.com 的 <strong>SSL</strong> 配置页面。</li><li>找到原指向隧道域名（如 <code>nas.winward.com</code>）的 <strong>CNAME 记录</strong>。</li><li>修改 <strong>Target</strong> 地址为指向 <strong>优选域名</strong> 的记录，如：<code>speedupcf.123456.com</code>。</li><li>取消 <strong>Proxy status</strong>（代理状态），确保它选择 <strong>灰色云朵</strong>（关闭代理）。</li><li>点击 <strong>保存</strong>（Save）。</li></ol><hr><h3 id="9-添加DCV-委派（自动更新ssl证书）"><a href="#9-添加DCV-委派（自动更新ssl证书）" class="headerlink" title="9. 添加DCV 委派（自动更新ssl证书）"></a>9. 添加DCV 委派（自动更新ssl证书）</h3><ol><li>回到 <strong>Cloudflare 控制台</strong>，进入 <code>123456.com</code> 的 <strong>DNS</strong> 配置页面。</li><li>最下方找到 <strong>“自定义主机名的 DCV 委派”</strong>。</li><li><strong>复制</strong> 提供的 <strong>ACME DCV 质询 CNAME 记录</strong>。</li><li>回到 <strong>Cloudflare 控制台</strong>，进入 <code>nbvil.com</code> 的 <strong>DNS</strong> 配置页面。</li><li>添加新的 CNAME 记录：<ul><li><strong>Name（主机名）</strong>：<code>_acme-challenge.</code></li><li>例：<code>_acme-challenge.nas.winward.com</code></li><li><strong>Target（目标地址）</strong>：<code>.abcd.dcv.cfvalidation.com</code></li><li>例：<code>nas.winward.com.abcd.dcv.cfvalidation.</code></li><li><strong>Proxy status（代理状态）</strong>：选择 <strong>灰色云朵</strong>（关闭代理）。</li></ul></li></ol><hr><h2 id="完成配置"><a href="#完成配置" class="headerlink" title="完成配置"></a>完成配置</h2><p>到这里，整个配置就完成了。</p><p>你已经成功配置了 <strong>SaaS 回源</strong> + <strong>优选域名</strong> 来加速通过 Cloudflare Tunnel 解析的站点访问。</p><h2 id="一张图说清Cloudflare-Tunnel-配置及加速"><a href="#一张图说清Cloudflare-Tunnel-配置及加速" class="headerlink" title="一张图说清Cloudflare Tunnel 配置及加速"></a>一张图说清Cloudflare Tunnel 配置及加速</h2><p><img src="/images/Network/Cloudflare/IMG_0978.webp" alt="一图流"></p><p><strong>Step1</strong>: 在服务器(如192.168.1.100)上，安装 Cloudflare Tunnel（方法省略）</p><p><strong>Step2</strong>: 创建隧道  “Zero Trust” –”网络”–”Tunnels”–”创建隧道”（方法省略）</p><p><strong>Step3</strong>: 配置主机 “Zero Trust” –”网络”–”Tunnels”–”配置”–”公共主机名”</p><p>① 创建主机名 “lan.BBB.com” 指向 “192.168.1.100” (创建tunnel指向内网服务器地址后, Cloudflare自动配置dns)</p><p>② 创建主机名 “<a href="http://www.aaa.com/">www.AAA.com</a>“ 指向 “192.168.1.100:80” (内网服务器地址+端口，Cloudflare自动配置dns)</p><p><strong>Step4</strong>. DNS增加设置 “ip.BBB.com “ CNAME “visa.cn” (visa.cn 为优选IP, 可替代其他)</p><p><strong>Step5</strong>. DNS修改设置 “<a href="http://www.aaa.com/">www.AAA.com</a> “ CNAME “ip.BBB.com”</p><p><strong>Step6:</strong> 回退源设置，在备用域名下 “SSL&#x2F;TLS” – “自定义主机名”:</p><p>① “回退源” 修改为 “lan.BBB.com”注意空格</p><p>② “添加自自定义主机名” 增加 “<a href="http://www.aaa.com/">www.AAA.com</a>“</p><p><strong>Step7</strong>:  按Step6 - ② 页面提示的内容，在主力域名DNS设置 “主机验证”、”证书验证”、”DCV委派”（同服务器多个端口服务，重复Step3-② 、Step6-②、Step7）</p><p><strong>Setp8</strong>: 在”SSL&#x2F;TLS” – “自定义主机名”看各自定义主机配置是否生效，使用”<a href="https://www.itdog.cn/http/">https://www.itdog.cn/http/</a>“ 检查是否达到提速效果</p><h2 id="核心原理解析"><a href="#核心原理解析" class="headerlink" title="核心原理解析"></a>核心原理解析</h2><p>核心原理解析 我们通过一个巧妙的“验证与优选分离”的技巧，来达成目的：</p><h3 id="1-Tunnel-回退源-Fallback-Origin-："><a href="#1-Tunnel-回退源-Fallback-Origin-：" class="headerlink" title="1. Tunnel &amp; 回退源 (Fallback Origin)："></a>1. Tunnel &amp; 回退源 (Fallback Origin)：</h3><p>我们创建一个标准的 Tunnel，并为其设置一个官方的、用于配置和识别的域名，我们称之为“回退源”（例如 tunnel-origin.bbb.com）。这个回退源是整个配置的“锚点”。</p><h3 id="2-SaaS-自定义主机名："><a href="#2-SaaS-自定义主机名：" class="headerlink" title="2. SaaS 自定义主机名："></a>2. SaaS 自定义主机名：</h3><p>我们使用 Cloudflare for SaaS 功能，告诉 Cloudflare：“我希望用我的域名 xxx.aaa.com 来访问那个‘回退源’”。Cloudflare 为了确认你拥有 xxx.aaa.com 的控制权，会要求你将 xxx.aaa.com CNAME 到回退源。</p><h3 id="3-CNAME-验证与切换："><a href="#3-CNAME-验证与切换：" class="headerlink" title="3. CNAME 验证与切换："></a>3. CNAME 验证与切换：</h3><p>我们先按照要求完成 CNAME 配置，让 Cloudflare 验证通过，激活自定义主机名。</p><p>一旦激活，Cloudflare 就只关心流量的 Host 请求头是不是 xxx.aaa.com，而不再严格检查 CNAME 指向。</p><h3 id="4-优选域名-IP-介入："><a href="#4-优选域名-IP-介入：" class="headerlink" title="4. 优选域名&#x2F;IP 介入："></a>4. 优选域名&#x2F;IP 介入：</h3><p>验证通过后，我们立即将 xxx.aaa.com 的 CNAME 记录从“回退源”修改为速度更快的“优选域名&#x2F;IP”。</p><h3 id="5-最终流量路径："><a href="#5-最终流量路径：" class="headerlink" title="5. 最终流量路径："></a>5. 最终流量路径：</h3><p> 客户端 -&gt; DNS 解析 xxx.aaa.com -&gt; 得到优选 IP -&gt; 客户端访问优选 IP (请求头 Host: xxx.aaa.com) -&gt; Cloudflare 边缘节点收到请求 -&gt; 识别出这是一个 SaaS 主机名，查询其配置 -&gt; 内部路由到 ‘回退源’ 对应的 Tunnel -&gt; cloudflared 客户端 -&gt; 你的内网服务。</p><div style="display:none"><ul><li><a href="https://blog.nbvil.com/nat/tunnelsaas/">CloudflareTunnel访问加速 | 无需公网IP | SaaS 回源 | 优选域名 | 新手教程 | Newbie Village</a></li><li><a href="https://www.nickyam.com/article/cloudflare-tunnel-configuration-and-acceleration-explained-in-one-image">一张图说清Cloudflare Tunnel 配置及加速 | 涯木说</a></li><li><a href="https://www.bilibili.com/opus/1092400450431352839">Cloudflare Tunnel 实现优选 - 哔哩哔哩</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare介绍</title>
      <link href="/2024/10/01/Network/01Cloudflare/"/>
      <url>/2024/10/01/Network/01Cloudflare/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><ul><li>Cloudflare是一家提供CDN、网络安全、DDos防御和域名服务的美国公司。全世界有20%的互联网流量都经过了Cloudflare的网络代理。</li><li>为什么Cloudflare被成为大善人，赛博活佛？ Cloudflare都提供哪些服务，有多少免费业务能从它那里白嫖？本文做一个简单盘点。</li></ul><h1 id="免费服务"><a href="#免费服务" class="headerlink" title="免费服务"></a>免费服务</h1><h2 id="1-Turnstile-人机验证"><a href="#1-Turnstile-人机验证" class="headerlink" title="1. Turnstile 人机验证"></a>1. Turnstile 人机验证</h2><p> Cloudflare 提供无拼图验证的人机验证服务，提升用户体验的同时有效防止恶意爬虫。</p><p>我们访问一些网站的时候，经常可以看到这样一个人机验证页面，这就是Cloudflare提供的免费服务之一。</p><p><img src="/images/Network/Cloudflare/01/c9e891cd159b109248dbed24562cba7f316183842.png@1192w.webp"></p><p>这个人机验证大家应该都见过吧，它就是 cloudflare Turnstile ，俗称cloudflare五秒盾。只需要一段简单的免费代码片段，即可为网站添加一个强大的反爬虫人机验证功能。 不需要进行充满挫败感的拼图验证，就能确认访问者为是否为真实人类。有越来越多的网站开始使用turnstile进行人机验证。</p><p><img src="/images/Network/Cloudflare/01/d581bc4fd908a1899e6ee126fc3e5b4b316183842.png@1192w.webp"></p><h2 id="2-DNS服务"><a href="#2-DNS服务" class="headerlink" title="2. DNS服务"></a>2. DNS服务</h2><p>Cloudflare 提供免费的 DNS 解析服务，是全球最大的 DNS 服务商之一。用户可以将域名托管到 Cloudflare，享受快速、稳定的解析服务，同时支持隐藏真实 IP 地址以保护服务器安全。</p><p>DNS是一种域名转换为IP地址的服务，当用户在浏览器中输入一个网址时，浏览器会向DNS服务器发送请求，以获取该网址对应的IP地址。Cloudflare就是全球最大的DNS服务商，免费提供DNS解析服务。只需要将域名添托管到cloudflare，就可以任意添加任意类型的DNS记录。</p><p><img src="/images/Network/Cloudflare/01/40790ce0ed278731a3ae86f8f429eb2d316183842.png@1192w.webp"></p><p> 这里有一个小黄云的选项。打开以后，cloudflare会自动代理数据请求，来自浏览器的数据会先流经cloudflare，然后再到达源服务器。 开启代理以后cloudflare自动提供CDN，SSL证书，DDos防御等功能。也可以选择不开启，只保留DNS服务。</p><p><img src="/images/Network/Cloudflare/01/03b77271ec1e21984263612fa3fde86d316183842.png@458w_294h.webp"></p><h2 id="3-CDN（内容分发网络）"><a href="#3-CDN（内容分发网络）" class="headerlink" title="3. CDN（内容分发网络）"></a>3. CDN（内容分发网络）</h2><p>CDN即内容分发网络， Cloudflare的CDN服务通过遍布全球的数据中心缓存客户网站的静态资源，比如JavaScript 文件、css文件、图像和视频，</p><p><img src="/images/Network/Cloudflare/01/a785455d9a65b8e27ba1aa944813de28316183842.png@1192w.webp"></p><p>可以直接从CDN网络的缓存读取，加快网站加载速度并减少服务器压力。只要配置过Cloudflare DNS服务的网站，打开了这个小黄云，CDN加速就自动开启了。这时候有观众可能要说了，哈哈UP主，免费版本 Cloudflare 俗称 “减速器”，用上之后国内访问网站速度反而会更慢。 </p><p>其这里给大家推荐一个项目，可以尽可能规避国内使用CDN带来的副作用。</p><p><a href="https://github.com/ddgth/cf2dns">https://github.com/ddgth/cf2dns</a> </p><p>这个项目可以筛选出优质的Cloudflare的CDN节点，可以给联通、移动、电信、国外各自配置最优的CDN节点，然后根据用户的网络环境，自动选择最优的CDN节点进行服务。</p><h2 id="4-SSL-TLS-加密"><a href="#4-SSL-TLS-加密" class="headerlink" title="4. SSL&#x2F;TLS 加密"></a>4. SSL&#x2F;TLS 加密</h2><p>Cloudflare 自动为网站提供免费的 SSL 证书，支持 HTTPS 加密通信，提升数据传输的安全性，并可将 HTTP 请求自动重定向到 HTTPS。</p><h2 id="5-隐藏真实IP"><a href="#5-隐藏真实IP" class="headerlink" title="5. 隐藏真实IP"></a>5. <strong>隐藏真实IP</strong></h2><p>只要打开了这个小黄云，就隐藏了网站真实IP地址，攻击者最多只能追溯到CDN节点，可以有效防止网站真实IP泄露，保护原站安全。</p><p><img src="/images/Network/Cloudflare/01/92e60f6f6e4ed3c4f079e320a4da736f316183842.png@1192w.webp"></p><h2 id="6-DDOS防护"><a href="#6-DDOS防护" class="headerlink" title="6. DDOS防护"></a>6. <strong>DDOS防护</strong></h2><p>Cloudflare 提供强大的 DDoS 防护功能，隐藏真实的IP地址后，攻击者的DDoS攻击最多也只能攻击到CDN节点，从而保护源站免受大规模攻击。</p><p>我之前看过一个报导，Cloudflare曾经为客户免费阻止了有史以来最大的DDoS攻击，每秒2,600万次。如果客户用的其他网络服务商的付费防火墙，估计已经一夜破产了。</p><h2 id="7-Cloudflare-Pages"><a href="#7-Cloudflare-Pages" class="headerlink" title="7. Cloudflare Pages"></a>7. <strong>Cloudflare</strong> <strong>Pages</strong></h2><p>Cloudflare Pages是一个免费易用的静态网站托管服务。用户可以通过 GitHub 仓库快速部署网站，支持自动构建和分配域名。</p><p><img src="/images/Network/Cloudflare/01/d58a1b5bc52720cf1236b7517b46ae0b316183842.png@1192w.webp"></p><h2 id="8-Cloudflare-Workers"><a href="#8-Cloudflare-Workers" class="headerlink" title="8. Cloudflare Workers"></a>8. <strong>Cloudflare</strong> <strong>Workers</strong></h2><p>这是一个无服务器计算服务，允许开发者在全球 CDN 节点上运行代码（如 JavaScript 或 Python）。它可以实现数据处理、代理、缓存等功能，适用于构建高效的边缘计算应用。</p><p>我们编写一段代码，可以是Javascript，Typescript，甚至是Python。 把代码上传到worker上，用户编写的这个函数会被部署在 Cloudflare 全世界 CDN 服务器节点上。 每当有访客请求worker地址时，地理位置最近的CDN节点就会相应请求，执行这段代码的业务逻辑。worker可以干各种各样的事情，返回一段数据，做重定向，做过滤，做代理，内网穿透，做缓存等等等。</p><p>cloudflare为免费用户每天提供了10万次的最大请求次数。让我直呼用不完，根本用不完。</p><p><img src="/images/Network/Cloudflare/01/d6c3467ea351c770a55bb283e3e631d3316183842.png@1192w.webp"></p><p>当然，你也可以直接使用业务代码中调用cloudflare提供的非关系型R2数据库或SQL数据库D1，或者把请求转发到你自己的服务器上处理。在Github上能找到大量使用cloudflare workers的免费项目，awesome cloudflare</p><p><a href="https://github.com/zhuima/awesome-cloudflare">https://github.com/zhuima/awesome-cloudflare</a>  </p><p>对这些项目进行了收录了，比如图床，邮箱，博客, 短链等等</p><h2 id="9-Cloudflare-worker-AI"><a href="#9-Cloudflare-worker-AI" class="headerlink" title="9. Cloudflare worker AI"></a>9. <strong>Cloudflare</strong> <strong>worker AI</strong></h2><p>Cloudflare为worker添加了AI模型的能力，可以在worker中调用许多开源大模型，让worker也获得部分AI的能力，这项业务还刚刚起步，但是我很看好他。</p><p><img src="/images/Network/Cloudflare/01/b865bfd258b3b1bbd8c4a7ce864280e3316183842.png@1192w.webp"></p><h2 id="10-R2-对象存储"><a href="#10-R2-对象存储" class="headerlink" title="10. R2 对象存储"></a>10. <strong>R2 对象存储</strong></h2><p>Cloudflare R2 提供了对象存储服务。提供每月10GB的免费存储空间，1000万次的免费请求次数。且无需额外配置 CDN 或 DDoS 防护。</p><p>Cloudflare R2 是与 CDN二合一的。在传统的云数据库服务中，还需要操心额外的CDN配置，抗DDoS等等问题。但 Cloudflare完全不需要，只要勾选配置启用，你的 R2 数据可以直接被全世界读取。而且免费的套餐的数量比其他厂商多了一个数量级。</p><p><img src="/images/Network/Cloudflare/01/9fa3fb550ef840a9f930d28f67d009a3316183842.png@1192w.webp"></p><h2 id="11-Cloudflare-Tunnel"><a href="#11-Cloudflare-Tunnel" class="headerlink" title="11. Cloudflare Tunnel"></a>11. <strong>Cloudflare Tunnel</strong></h2><p>Cloudflare Tunnel 是一款隧道软件，可以快速安全地加密应用程序到任何设备的流量，让您能够隐藏你的 web 服务器 IP 地址，阻止直接攻击。</p><p><img src="/images/Network/Cloudflare/01/8df8b7629fb9642901f2e00fe493912c3749ba06.jpg@228w_128h_!web-dynamic.webp"></p><p> Tunnel还可以做免费的内网穿透，将家庭服务器的服务在公网上访问。</p><p><img src="/images/Network/Cloudflare/01/04dfd2be4a8b0c2fbfa88c87c7d5d7b9316183842.png@1192w.webp"></p><h2 id="12-无限邮箱"><a href="#12-无限邮箱" class="headerlink" title="12. 无限邮箱"></a>12. <strong>无限邮箱</strong></h2><p>将域名托管到cloudflare后，进入域名，点击电子邮件路由，这里可以创建最多200个临时邮箱。</p><p>如果需要批量注册一些账户的时候，这个功能会很非常有用。也可以开启这个catch-all功能，将所有发送到此域名的邮件都自动转发到你的一个指定邮箱，这样你就拥有了无限多个可以收信的邮箱。</p><p><img src="/images/Network/Cloudflare/01/6a1bc16cbbb0749dcc5f89fba613554a316183842.png@1192w.webp"></p><h2 id="13-Images"><a href="#13-Images" class="headerlink" title="13. Images"></a>13. <strong>Images</strong></h2><p>Images是一个可编程的图像处理和优化平台。开发者只需编写简单的URL规则,就可以对图像进行缩放、裁剪、格式转换、水印等处理,并自动优化图像以加快加载。</p><p><img src="/images/Network/Cloudflare/01/f6e920c93f358fbdb208ae5106595fdf316183842.png@1192w.webp"></p><div style="display:none">- [Cloudflare浑身都是宝，普通用户能白嫖多少服务？盘点cloudflare的免费功能 - 哔哩哔哩](https://www.bilibili.com/opus/942775034057850913)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git可视化工具</title>
      <link href="/2023/10/20/Git/05GitTortoiseGit/"/>
      <url>/2023/10/20/Git/05GitTortoiseGit/</url>
      
        <content type="html"><![CDATA[<h1 id="git可视化工具"><a href="#git可视化工具" class="headerlink" title="git可视化工具"></a>git可视化工具</h1><p><a href="https://blog.csdn.net/xwnxwn/article/details/108694863">git可视化工具小乌龟安装&amp;使用_git小乌龟图标-CSDN博客</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中ADB调试配置及VR设备处理</title>
      <link href="/2023/07/23/Unity_Job/01Unity_ADB/"/>
      <url>/2023/07/23/Unity_Job/01Unity_ADB/</url>
      
        <content type="html"><![CDATA[<h2 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h2><p> 在 Android、一体机、VR头显、开发环境中，出现无法覆盖安装新版APK，或文件冲突问题，文件签名异常覆盖。</p><h2 id="常用命令行"><a href="#常用命令行" class="headerlink" title="常用命令行"></a>常用命令行</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">adb <span class="built_in">help</span>                        # 查看adb的相关信息，包括版本号，常用命令</span><br><span class="line">adb version                     # 查看adb版本</span><br><span class="line">adb install abc.apk             # 安装apk</span><br><span class="line">adb install -r abc.apk          # 覆盖安装</span><br><span class="line">adb uninstall com.zhy.app       # 卸载APP</span><br><span class="line">adb uninstall -k com.zhy.app    # 保留数据卸载APP</span><br><span class="line">adb devices                     # 查看连接主机的设备，</span><br><span class="line">adb logcat                      # 捕获设备的日志信息</span><br><span class="line">adb logcat -s                   # Unity 专门获得Unity相关的日志（注意U要大写）</span><br><span class="line">adb push                        # 文件名 手机端SDCard路径 例如：adb push xx.jpg /sdcard/</span><br><span class="line">adb pull /sdcard/xx.txt         # 从手机下载文件</span><br><span class="line">adb shell pm list packages      # 查看手机端安装的所有APP包名</span><br><span class="line">adb shell screencap /sdcard/screen.png  # 截图</span><br><span class="line">adb shell screenrecord /sdcard/demo.mp4 # 录制视频</span><br></pre></td></tr></table></figure><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ol><li>打开环境变量配置path的环境</li><li>在<code>Path</code>下添加路径<br> <code>C:\Program Files\Unity\Hub\Editor\2020.3.41f1c1\Editor\Data\PlaybackEngines\AndroidPlayer\SDK\platform-tools</code></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWRT本地编译(Lede)</title>
      <link href="/2023/06/07/Hardware/06OpenWRTLocal/"/>
      <url>/2023/06/07/Hardware/06OpenWRTLocal/</url>
      
        <content type="html"><![CDATA[<h1 id="本地编译"><a href="#本地编译" class="headerlink" title="本地编译"></a>本地编译</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ol><li>一定要确保良好的网络环境</li><li>第一次编译成功1个小时47分钟，单线程编译。(网络原因失败好几次)</li><li>虚拟机配置<code>ubuntu22.04.2</code>,4GB,8核</li></ol><h2 id="lede配置"><a href="#lede配置" class="headerlink" title="lede配置"></a>lede配置</h2><h3 id="ubuntu-显示隐藏文件"><a href="#ubuntu-显示隐藏文件" class="headerlink" title="ubuntu 显示隐藏文件"></a>ubuntu 显示隐藏文件</h3><ul><li>在桌面化操作时，在文件夹下，按下ctrl+h，即可显示所有的文件。</li></ul><h3 id="选择配置时"><a href="#选择配置时" class="headerlink" title="选择配置时"></a>选择配置时</h3><p>在OpenWrt或LEDE的<code>make menuconfig</code>配置界面中，您可以使用键盘上的方向键来导航菜单，并使用空格键来选择或取消选择选项。在配置界面中，选项前面的符号表示该选项的状态：</p><ul><li><code>[*]</code>：表示该选项已被选中，将会被编译到固件中。</li><li><code>[ ]</code>：表示该选项未被选中，不会被编译到固件中。</li><li><code>&lt;*&gt;</code>：表示该选项已被选中，且是必需的，不能取消选择。</li><li>&#96;&#96;：表示该选项已被选中，将会以模块的形式编译。</li><li><code>[ ]</code>：表示该选项未被选中，但可以以模块的形式编译。</li></ul><p>您可以使用空格键来在<code>[*]</code>和<code>[ ]</code>之间切换，或者在<code>&lt;*&gt;</code>、&#96;&#96;和<code>[ ]</code>之间切换。在您完成配置后，按下保存并退出按钮，您所做的更改将被保存到<code>.config</code>文件中</p><h3 id="luci配置对照表"><a href="#luci配置对照表" class="headerlink" title="luci配置对照表"></a>luci配置对照表</h3><blockquote><p><a href="https://www.right.com.cn/forum/thread-3682029-1-2.html">OpenWrt 编译 LuCI-&gt; Applications 添加插件应用说明-L大[2021.11.18]-OPENWRT专版-恩山无线论坛 - Powered by Discuz! (right.com.cn)</a></p></blockquote><h3 id="主题配置预览"><a href="#主题配置预览" class="headerlink" title="主题配置预览"></a>主题配置预览</h3><blockquote><p><a href="https://www.kejiwanjia.com/jiaocheng/hardware/luyou/13715.htm">路由器也可以更换主题？(OpenWrt主题更换教程)</a></p></blockquote><h2 id="生成文件的路径"><a href="#生成文件的路径" class="headerlink" title="生成文件的路径"></a>生成文件的路径</h2><ol><li>&#x2F;lede&#x2F;bin&#x2F;targets&#x2F;ath79&#x2F;generic</li></ol><h2 id="wdr7500V3生成的config-info"><a href="#wdr7500V3生成的config-info" class="headerlink" title="wdr7500V3生成的config.info"></a>wdr7500V3生成的<code>config.info</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CONFIG_TARGET_ath79=y</span><br><span class="line">CONFIG_TARGET_ath79_generic=y</span><br><span class="line">CONFIG_TARGET_ath79_generic_DEVICE_tplink_tl-wdr7500-v3=y</span><br></pre></td></tr></table></figure><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><strong>不要用 root 用户进行编译</strong></li><li>国内用户编译前最好准备好梯子</li><li>默认登陆IP 192.168.1.1 密码 password</li></ol><h2 id="编译命令"><a href="#编译命令" class="headerlink" title="编译命令"></a>编译命令</h2><ol><li><p>首先装好 Linux 系统，推荐 Debian 11 或 Ubuntu LTS</p></li><li><p>安装编译依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update -y</span><br><span class="line">sudo apt full-upgrade -y</span><br><span class="line">sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \</span><br><span class="line">bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \</span><br><span class="line">git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \</span><br><span class="line">libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \</span><br><span class="line">mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \</span><br><span class="line">libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \</span><br><span class="line">vim wget xmlto xxd zlib1g-dev</span><br></pre></td></tr></table></figure></li><li><p>下载源代码，更新 feeds 并选择配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/coolsnowwolf/lede</span><br><span class="line">cd lede</span><br><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br><span class="line">make menuconfig</span><br></pre></td></tr></table></figure></li><li><p>下载 dl 库，编译固件 （-j 后面是线程数，第一次编译推荐用单线程）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make download -j8</span><br><span class="line">make V=s -j1</span><br></pre></td></tr></table></figure></li></ol><p>本套代码保证肯定可以编译成功。里面包括了 R23 所有源代码，包括 IPK 的。</p><p>你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！</p><p>二次编译：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd lede</span><br><span class="line">git pull</span><br><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br><span class="line">make defconfig</span><br><span class="line">make download -j8</span><br><span class="line">make V=s -j$(nproc)</span><br></pre></td></tr></table></figure><p>如果需要重新配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ./tmp &amp;&amp; rm -rf .config</span><br><span class="line">make menuconfig</span><br><span class="line">make V=s -j$(nproc)</span><br></pre></td></tr></table></figure><p>编译完成后输出路径：bin&#x2F;targets</p><h2 id="如果你使用-WSL-WSL2-进行编译"><a href="#如果你使用-WSL-WSL2-进行编译" class="headerlink" title="如果你使用 WSL&#x2F;WSL2 进行编译"></a>如果你使用 WSL&#x2F;WSL2 进行编译</h2><p>由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 <code>make</code> 前面加上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure><h2 id="macOS-原生系统进行编译"><a href="#macOS-原生系统进行编译" class="headerlink" title="macOS 原生系统进行编译"></a>macOS 原生系统进行编译</h2><ol><li><p>在 AppStore 中安装 Xcode</p></li><li><p>安装 Homebrew：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></li><li><p>使用 Homebrew 安装工具链、依赖与基础软件包:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew unlink awk</span><br><span class="line">brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz</span><br><span class="line">brew install gcc@11</span><br></pre></td></tr></table></figure></li><li><p>然后输入以下命令，添加到系统环境变量中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/coreutils/libexec/gnubin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/findutils/libexec/gnubin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/gnu-getopt/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/grep/libexec/gnubin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br><span class="line">echo &#x27;export PATH=&quot;/usr/local/opt/make/libexec/gnubin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>重新加载一下 shell 启动文件 <code>source ~/.bashrc</code>，然后输入 <code>bash</code> 进入 bash shell，就可以和 Linux 一样正常编译了</p></li></ol><h1 id="wdr7500编译日志"><a href="#wdr7500编译日志" class="headerlink" title="wdr7500编译日志"></a>wdr7500编译日志</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br></pre></td><td class="code"><pre><span class="line">x-ath79_generic/image-qca9531_compex_wpj531-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_compex_wpj558-16m.dtb.tmp ../dts/qca9558_compex_wpj558-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_compex_wpj558-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_compex_wpj558-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_compex_wpj558-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_compex_wpj563.dtb.tmp ../dts/qca9563_compex_wpj563.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_compex_wpj563.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_compex_wpj563.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_compex_wpj563.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_dlan-pro-1200plus-ac.dtb.tmp ../dts/ar9344_devolo_dlan-pro-1200plus-ac.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_dlan-pro-1200plus-ac.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_dlan-pro-1200plus-ac.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_devolo_dlan_wifi.dtsi:63.7-70.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_dlan-pro-1200plus-ac.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200e.dtb.tmp ../dts/qca9558_devolo_dvl1200e.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200e.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200e.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200e.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200i.dtb.tmp ../dts/qca9558_devolo_dvl1200i.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200i.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200i.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1200i.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750c.dtb.tmp ../dts/qca9558_devolo_dvl1750c.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750c.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750c.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750c.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750e.dtb.tmp ../dts/qca9558_devolo_dvl1750e.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750e.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750e.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750e.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750i.dtb.tmp ../dts/qca9558_devolo_dvl1750i.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750i.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750i.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750i.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750x.dtb.tmp ../dts/qca9558_devolo_dvl1750x.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750x.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750x.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_devolo_dvl1750x.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_magic-2-wifi.dtb.tmp ../dts/ar9344_devolo_magic-2-wifi.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_magic-2-wifi.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_magic-2-wifi.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_devolo_dlan_wifi.dtsi:63.7-70.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_devolo_magic-2-wifi.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1330-a1.dtb.tmp ../dts/qca9533_dlink_dap-1330-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1330-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1330-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1330-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1365-a1.dtb.tmp ../dts/qca9533_dlink_dap-1365-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1365-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1365-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-1365-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-2230-a1.dtb.tmp ../dts/qca9533_dlink_dap-2230-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-2230-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-2230-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-2230-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_dlink_dap-2660-a1.dtb.tmp ../dts/qca9557_dlink_dap-2660-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_dlink_dap-2660-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_dlink_dap-2660-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_dlink_dap-2660-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2680-a1.dtb.tmp ../dts/qca9558_dlink_dap-2680-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2680-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2680-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2680-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2695-a1.dtb.tmp ../dts/qca9558_dlink_dap-2695-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2695-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2695-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-2695-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-3320-a1.dtb.tmp ../dts/qca9533_dlink_dap-3320-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-3320-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-3320-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_dlink_dap-3320-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-3662-a1.dtb.tmp ../dts/qca9558_dlink_dap-3662-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-3662-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-3662-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_dlink_dap-3662-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_dlink_dch-g020-a1.dtb.tmp ../dts/qca9531_dlink_dch-g020-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_dlink_dch-g020-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_dlink_dch-g020-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_dlink_dch-g020-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_dlink_dir-505.dtb.tmp ../dts/ar9330_dlink_dir-505.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_dlink_dir-505.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_dlink_dir-505.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330_dlink_dir-505.dts:52.7-59.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_dlink_dir-505.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_dlink_dir-825-b1.dtb.tmp ../dts/ar7161_dlink_dir-825-b1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_dlink_dir-825-b1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_dlink_dir-825-b1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_dlink_dir-825-b1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-825-c1.dtb.tmp ../dts/ar9344_dlink_dir-825-c1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-825-c1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-825-c1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-825-c1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-835-a1.dtb.tmp ../dts/ar9344_dlink_dir-835-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-835-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-835-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_dlink_dir-835-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c1.dtb.tmp ../dts/qca9563_dlink_dir-842-c1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c2.dtb.tmp ../dts/qca9563_dlink_dir-842-c2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c3.dtb.tmp ../dts/qca9563_dlink_dir-842-c3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-842-c3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-859-a1.dtb.tmp ../dts/qca9563_dlink_dir-859-a1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-859-a1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-859-a1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_dlink_dir-859-a1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-1750ghbk2-i.dtb.tmp ../dts/qca9563_elecom_wrc-1750ghbk2-i.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-1750ghbk2-i.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-1750ghbk2-i.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-1750ghbk2-i.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-300ghbk2-i.dtb.tmp ../dts/qca9563_elecom_wrc-300ghbk2-i.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-300ghbk2-i.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-300ghbk2-i.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_elecom_wrc-300ghbk2-i.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_embeddedwireless_balin.dtb.tmp ../dts/ar9344_embeddedwireless_balin.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_embeddedwireless_balin.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_embeddedwireless_balin.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_embeddedwireless_balin.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_embeddedwireless_dorin.dtb.tmp ../dts/ar9331_embeddedwireless_dorin.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_embeddedwireless_dorin.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_embeddedwireless_dorin.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_embeddedwireless_dorin.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_eap1200h.dtb.tmp ../dts/qca9557_engenius_eap1200h.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_eap1200h.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_eap1200h.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_eap1200h.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_eap300-v2.dtb.tmp ../dts/ar9341_engenius_eap300-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_eap300-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_eap300-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_eap300-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_eap600.dtb.tmp ../dts/ar9344_engenius_eap600.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_eap600.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_eap600.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_eap600.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_ecb1200.dtb.tmp ../dts/qca9557_engenius_ecb1200.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_ecb1200.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_ecb1200.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_ecb1200.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_ecb1750.dtb.tmp ../dts/qca9558_engenius_ecb1750.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_ecb1750.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_ecb1750.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_ecb1750.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_ecb600.dtb.tmp ../dts/ar9344_engenius_ecb600.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_ecb600.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_ecb600.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_engenius_ecb600.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_ens202ext-v1.dtb.tmp ../dts/ar9341_engenius_ens202ext-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_ens202ext-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_ens202ext-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_engenius_ens202ext-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_enstationac-v1.dtb.tmp ../dts/qca9557_engenius_enstationac-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_enstationac-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_enstationac-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_engenius_enstationac-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_epg5000.dtb.tmp ../dts/qca9558_engenius_epg5000.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_epg5000.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_epg5000.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_engenius_epg5000.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_engenius_ews511ap.dtb.tmp ../dts/qca9531_engenius_ews511ap.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_engenius_ews511ap.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_engenius_ews511ap.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_engenius_ews511ap.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_enterasys_ws-ap3705i.dtb.tmp ../dts/ar9344_enterasys_ws-ap3705i.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_enterasys_ws-ap3705i.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_enterasys_ws-ap3705i.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_enterasys_ws-ap3705i.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_etactica_eg200.dtb.tmp ../dts/ar9331_etactica_eg200.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_etactica_eg200.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_etactica_eg200.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_etactica_eg200.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6408.dtb.tmp ../dts/ar9331_glinet_6408.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6408.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6408.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6408.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6416.dtb.tmp ../dts/ar9331_glinet_6416.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6416.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6416.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_6416.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_glinet_gl-ar150.dtb.tmp ../dts/ar9330_glinet_gl-ar150.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_glinet_gl-ar150.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_glinet_gl-ar150.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_glinet_gl-ar150.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m-lite.dtb.tmp ../dts/qca9531_glinet_gl-ar300m-lite.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m-lite.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m-lite.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m-lite.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m16.dtb.tmp ../dts/qca9531_glinet_gl-ar300m16.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m16.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m16.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar300m16.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar750.dtb.tmp ../dts/qca9531_glinet_gl-ar750.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar750.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar750.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-ar750.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-mifi.dtb.tmp ../dts/ar9331_glinet_gl-mifi.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-mifi.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-mifi.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-mifi.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-usb150.dtb.tmp ../dts/ar9331_glinet_gl-usb150.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-usb150.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-usb150.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_glinet_gl-usb150.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x300b.dtb.tmp ../dts/qca9531_glinet_gl-x300b.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x300b.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x300b.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x300b.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x750.dtb.tmp ../dts/qca9531_glinet_gl-x750.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x750.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x750.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_glinet_gl-x750.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_lan-turtle.dtb.tmp ../dts/ar9331_hak5_lan-turtle.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_lan-turtle.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_lan-turtle.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_lan-turtle.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_packet-squirrel.dtb.tmp ../dts/ar9331_hak5_packet-squirrel.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_packet-squirrel.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_packet-squirrel.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_packet-squirrel.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_wifi-pineapple-nano.dtb.tmp ../dts/ar9331_hak5_wifi-pineapple-nano.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_wifi-pineapple-nano.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_wifi-pineapple-nano.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_hak5_wifi-pineapple-nano.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_iodata_etg3-r.dtb.tmp ../dts/ar9342_iodata_etg3-r.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_iodata_etg3-r.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_iodata_etg3-r.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_iodata_etg3-r.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1167dgr.dtb.tmp ../dts/qca9557_iodata_wn-ac1167dgr.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1167dgr.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1167dgr.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1167dgr.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr.dtb.tmp ../dts/qca9557_iodata_wn-ac1600dgr.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr2.dtb.tmp ../dts/qca9557_iodata_wn-ac1600dgr2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_iodata_wn-ac1600dgr2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_iodata_wn-ag300dgr.dtb.tmp ../dts/ar1022_iodata_wn-ag300dgr.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_iodata_wn-ag300dgr.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_iodata_wn-ag300dgr.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_iodata_wn-ag300dgr.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_jjplus_ja76pf2.dtb.tmp ../dts/ar7161_jjplus_ja76pf2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_jjplus_ja76pf2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_jjplus_ja76pf2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_jjplus_ja76pf2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_jjplus_jwap230.dtb.tmp ../dts/qca9558_jjplus_jwap230.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_jjplus_jwap230.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_jjplus_jwap230.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_jjplus_jwap230.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_joyit_jt-or750i.dtb.tmp ../dts/qca9531_joyit_jt-or750i.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_joyit_jt-or750i.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_joyit_jt-or750i.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_joyit_jt-or750i.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_letv_lba-047-ch.dtb.tmp ../dts/qca9531_letv_lba-047-ch.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_letv_lba-047-ch.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_letv_lba-047-ch.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_letv_lba-047-ch.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_librerouter_librerouter-v1.dtb.tmp ../dts/qca9558_librerouter_librerouter-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_librerouter_librerouter-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_librerouter_librerouter-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_librerouter_librerouter-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_meraki_mr12.dtb.tmp ../dts/ar7242_meraki_mr12.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_meraki_mr12.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_meraki_mr12.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7242.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_meraki_mr12.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_meraki_mr16.dtb.tmp ../dts/ar7161_meraki_mr16.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_meraki_mr16.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_meraki_mr16.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_meraki_mr16.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_mercury_mw4530r-v1.dtb.tmp ../dts/ar9344_mercury_mw4530r-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_mercury_mw4530r-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_mercury_mw4530r-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_mercury_mw4530r-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_nec_wf1200cr.dtb.tmp ../dts/qca9561_nec_wf1200cr.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_nec_wf1200cr.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_nec_wf1200cr.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca9561_nec_wf1200cr.dts:135.7-143.3</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_nec_wf1200cr.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg1200cr.dtb.tmp ../dts/qca9563_nec_wg1200cr.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg1200cr.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg1200cr.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg1200cr.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg800hp.dtb.tmp ../dts/qca9563_nec_wg800hp.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg800hp.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg800hp.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_nec_wg800hp.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex6400.dtb.tmp ../dts/qca9558_netgear_ex6400.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex6400.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex6400.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex6400.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex7300.dtb.tmp ../dts/qca9558_netgear_ex7300.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex7300.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex7300.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_netgear_ex7300.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_netgear_ex7300-v2.dtb.tmp ../dts/qcn5502_netgear_ex7300-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_netgear_ex7300-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_netgear_ex7300-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_netgear_ex7300-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700.dtb.tmp ../dts/ar7161_netgear_wndr3700.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700-v2.dtb.tmp ../dts/ar7161_netgear_wndr3700-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3700-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800.dtb.tmp ../dts/ar7161_netgear_wndr3800.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800ch.dtb.tmp ../dts/ar7161_netgear_wndr3800ch.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800ch.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800ch.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndr3800ch.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v1.dtb.tmp ../dts/ar7161_netgear_wndrmac-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v2.dtb.tmp ../dts/ar7161_netgear_wndrmac-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_netgear_wndrmac-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-8m.dtb.tmp ../dts/ar7241_netgear_wnr2200-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-16m.dtb.tmp ../dts/ar7241_netgear_wnr2200-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_netgear_wnr2200-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_koala.dtb.tmp ../dts/qca9558_ocedo_koala.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_koala.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_koala.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_koala.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ocedo_raccoon.dtb.tmp ../dts/ar9344_ocedo_raccoon.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ocedo_raccoon.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ocedo_raccoon.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ocedo_raccoon.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_ursus.dtb.tmp ../dts/qca9558_ocedo_ursus.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_ursus.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_ursus.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ocedo_ursus.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_onion_omega.dtb.tmp ../dts/ar9331_onion_omega.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_onion_omega.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_onion_omega.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_onion_omega.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a40.dtb.tmp ../dts/qca9558_openmesh_a40.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a40.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a40.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a40.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a60.dtb.tmp ../dts/qca9558_openmesh_a60.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a60.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a60.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_a60.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v1.dtb.tmp ../dts/ar9344_openmesh_mr600-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v2.dtb.tmp ../dts/ar9344_openmesh_mr600-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_mr600-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v1.dtb.tmp ../dts/qca9558_openmesh_mr900-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v2.dtb.tmp ../dts/qca9558_openmesh_mr900-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr900-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v1.dtb.tmp ../dts/qca9558_openmesh_mr1750-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v2.dtb.tmp ../dts/qca9558_openmesh_mr1750-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_mr1750-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_openmesh_om2p-v1.dtb.tmp ../dts/ar7240_openmesh_om2p-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_openmesh_om2p-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_openmesh_om2p-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_openmesh_om2p-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-v2.dtb.tmp ../dts/ar9330_openmesh_om2p-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-v4.dtb.tmp ../dts/qca9533_openmesh_om2p-v4.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-v4.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-v4.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-v4.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v1.dtb.tmp ../dts/ar9341_openmesh_om2p-hs-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v2.dtb.tmp ../dts/ar9341_openmesh_om2p-hs-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v3.dtb.tmp ../dts/ar9341_openmesh_om2p-hs-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_openmesh_om2p-hs-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-hs-v4.dtb.tmp ../dts/qca9533_openmesh_om2p-hs-v4.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-hs-v4.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-hs-v4.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_openmesh_om2p-hs-v4.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-lc.dtb.tmp ../dts/ar9330_openmesh_om2p-lc.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-lc.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-lc.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_openmesh_om2p-lc.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p.dtb.tmp ../dts/ar9344_openmesh_om5p.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v1.dtb.tmp ../dts/qca9558_openmesh_om5p-ac-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v2.dtb.tmp ../dts/qca9558_openmesh_om5p-ac-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_openmesh_om5p-ac-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p-an.dtb.tmp ../dts/ar9344_openmesh_om5p-an.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p-an.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p-an.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_openmesh_om5p-an.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cap324.dtb.tmp ../dts/ar9344_pcs_cap324.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cap324.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cap324.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cap324.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pcs_cr3000.dtb.tmp ../dts/ar9341_pcs_cr3000.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pcs_cr3000.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pcs_cr3000.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pcs_cr3000.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cr5000.dtb.tmp ../dts/ar9344_pcs_cr5000.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cr5000.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cr5000.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_pcs_cr5000.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_phicomm_k2t.dtb.tmp ../dts/qca9563_phicomm_k2t.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_phicomm_k2t.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_phicomm_k2t.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_phicomm_k2t.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_ts-d084.dtb.tmp ../dts/ar9331_pisen_ts-d084.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_ts-d084.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_ts-d084.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_ts-d084.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pisen_wmb001n.dtb.tmp ../dts/ar9341_pisen_wmb001n.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pisen_wmb001n.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pisen_wmb001n.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_pisen_wmb001n.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_wmm003n.dtb.tmp ../dts/ar9331_pisen_wmm003n.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_wmm003n.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_wmm003n.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_pisen_wmm003n.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300.dtb.tmp ../dts/qca9533_plasmacloud_pa300.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300e.dtb.tmp ../dts/qca9533_plasmacloud_pa300e.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300e.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300e.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_plasmacloud_pa300e.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-8m.dtb.tmp ../dts/qca9533_qca_ap143-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-16m.dtb.tmp ../dts/qca9533_qca_ap143-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_qca_ap143-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qihoo_c301.dtb.tmp ../dts/ar9344_qihoo_c301.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qihoo_c301.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qihoo_c301.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_qihoo_c301.dts:78.7-92.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qihoo_c301.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-16m.dtb.tmp ../dts/qca9563_qxwlan_e1700ac-v2-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-8m.dtb.tmp ../dts/qca9563_qxwlan_e1700ac-v2-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_qxwlan_e1700ac-v2-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-16m.dtb.tmp ../dts/qca9558_qxwlan_e558-v2-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-8m.dtb.tmp ../dts/qca9558_qxwlan_e558-v2-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_qxwlan_e558-v2-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-16m.dtb.tmp ../dts/qca9531_qxwlan_e600g-v2-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-8m.dtb.tmp ../dts/qca9531_qxwlan_e600g-v2-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600g-v2-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-16m.dtb.tmp ../dts/qca9531_qxwlan_e600gac-v2-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-8m.dtb.tmp ../dts/qca9531_qxwlan_e600gac-v2-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_qxwlan_e600gac-v2-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-16m.dtb.tmp ../dts/ar9344_qxwlan_e750a-v4-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-8m.dtb.tmp ../dts/ar9344_qxwlan_e750a-v4-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750a-v4-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-16m.dtb.tmp ../dts/ar9344_qxwlan_e750g-v8-16m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-16m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-16m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-16m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-8m.dtb.tmp ../dts/ar9344_qxwlan_e750g-v8-8m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-8m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-8m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_qxwlan_e750g-v8-8m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_rosinson_wr818.dtb.tmp ../dts/qca9563_rosinson_wr818.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_rosinson_wr818.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_rosinson_wr818.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_rosinson_wr818.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_samsung_wam250.dtb.tmp ../dts/ar9344_samsung_wam250.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_samsung_wam250.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_samsung_wam250.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_samsung_wam250.dts:86.7-93.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_samsung_wam250.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_siemens_ws-ap3610.dtb.tmp ../dts/ar7161_siemens_ws-ap3610.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_siemens_ws-ap3610.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_siemens_ws-ap3610.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_siemens_ws-ap3610.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_sitecom_wlr-7100.dtb.tmp ../dts/ar1022_sitecom_wlr-7100.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_sitecom_wlr-7100.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_sitecom_wlr-7100.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar1022_sitecom_wlr-7100.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_sitecom_wlr-8100.dtb.tmp ../dts/qca9558_sitecom_wlr-8100.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_sitecom_wlr-8100.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_sitecom_wlr-8100.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_sitecom_wlr-8100.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_telco_t1.dtb.tmp ../dts/qca9531_telco_t1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_telco_t1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_telco_t1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_telco_t1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_teltonika_rut230-v1.dtb.tmp ../dts/ar9331_teltonika_rut230-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_teltonika_rut230-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_teltonika_rut230-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9331_teltonika_rut230-v1.dts:176.7-183.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_teltonika_rut230-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955.dtb.tmp ../dts/ar9344_teltonika_rut955.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_teltonika_rut955.dts:57.7-139.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955-h7v3c0.dtb.tmp ../dts/ar9344_teltonika_rut955-h7v3c0.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955-h7v3c0.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955-h7v3c0.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_teltonika_rut955-h7v3c0.dts:58.7-133.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_teltonika_rut955-h7v3c0.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_trendnet_tew-823dru.dtb.tmp ../dts/qca9558_trendnet_tew-823dru.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_trendnet_tew-823dru.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_trendnet_tew-823dru.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_trendnet_tew-823dru.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_wallys_dr531.dtb.tmp ../dts/qca9531_wallys_dr531.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_wallys_dr531.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_wallys_dr531.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_wallys_dr531.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n600.dtb.tmp ../dts/ar9344_wd_mynet-n600.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n600.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n600.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_wd_mynet-n600.dts:61.7-75.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n600.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n750.dtb.tmp ../dts/ar9344_wd_mynet-n750.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n750.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n750.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_wd_mynet-n750.dts:55.7-69.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-n750.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-wifi-rangeextender.dtb.tmp ../dts/ar9344_wd_mynet-wifi-rangeextender.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-wifi-rangeextender.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-wifi-rangeextender.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_wd_mynet-wifi-rangeextender.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_winchannel_wb2000.dtb.tmp ../dts/ar9344_winchannel_wb2000.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_winchannel_wb2000.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_winchannel_wb2000.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_winchannel_wb2000.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_xiaomi_aiot-ac2350.dtb.tmp ../dts/qca9563_xiaomi_aiot-ac2350.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_xiaomi_aiot-ac2350.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_xiaomi_aiot-ac2350.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_xiaomi_aiot-ac2350.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_xiaomi_mi-router-4q.dtb.tmp ../dts/qca9561_xiaomi_mi-router-4q.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_xiaomi_mi-router-4q.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_xiaomi_mi-router-4q.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_xiaomi_mi-router-4q.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_yuncore_a770.dtb.tmp ../dts/qca9531_yuncore_a770.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_yuncore_a770.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_yuncore_a770.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_yuncore_a770.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_a782.dtb.tmp ../dts/qca9563_yuncore_a782.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_a782.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_a782.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_a782.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_xd4200.dtb.tmp ../dts/qca9563_yuncore_xd4200.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_xd4200.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_xd4200.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_yuncore_xd4200.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_ziking_cpe46b.dtb.tmp ../dts/ar9330_ziking_cpe46b.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_ziking_cpe46b.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_ziking_cpe46b.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9330_ziking_cpe46b.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_zbtlink_zbt-wd323.dtb.tmp ../dts/ar9344_zbtlink_zbt-wd323.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_zbtlink_zbt-wd323.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_zbtlink_zbt-wd323.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_zbtlink_zbt-wd323.dts:71.7-74.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_zbtlink_zbt-wd323.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_zyxel_nbg6616.dtb.tmp ../dts/qca9557_zyxel_nbg6616.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_zyxel_nbg6616.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_zyxel_nbg6616.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca955x_zyxel_nbg6x16.dtsi:36.7-42.3</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9557_zyxel_nbg6616.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-a7-v5.dtb.tmp ../dts/qca9563_tplink_archer-a7-v5.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-a7-v5.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-a7-v5.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-a7-v5.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_tplink_archer-a9-v6.dtb.tmp ../dts/qcn5502_tplink_archer-a9-v6.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_tplink_archer-a9-v6.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_tplink_archer-a9-v6.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qcn5502_tplink_archer-a9-v6.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c2-v3.dtb.tmp ../dts/qca9563_tplink_archer-c2-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c2-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c2-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c2-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c25-v1.dtb.tmp ../dts/qca9561_tplink_archer-c25-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c25-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c25-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c25-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c5-v1.dtb.tmp ../dts/qca9558_tplink_archer-c5-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c5-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c5-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c5-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c58-v1.dtb.tmp ../dts/qca9561_tplink_archer-c58-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c58-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c58-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c58-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v1.dtb.tmp ../dts/qca9561_tplink_archer-c59-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v2.dtb.tmp ../dts/qca9561_tplink_archer-c59-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c59-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2.dtb.tmp ../dts/qca9563_tplink_archer-c6-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2-us.dtb.tmp ../dts/qca9563_tplink_archer-c6-v2-us.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2-us.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2-us.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c6-v2-us.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v1.dtb.tmp ../dts/qca9561_tplink_archer-c60-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v2.dtb.tmp ../dts/qca9561_tplink_archer-c60-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v3.dtb.tmp ../dts/qca9561_tplink_archer-c60-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_archer-c60-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v1.dtb.tmp ../dts/qca9558_tplink_archer-c7-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v2.dtb.tmp ../dts/qca9558_tplink_archer-c7-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-c7-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v4.dtb.tmp ../dts/qca9563_tplink_archer-c7-v4.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v4.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v4.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v4.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v5.dtb.tmp ../dts/qca9563_tplink_archer-c7-v5.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v5.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v5.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_archer-c7-v5.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_archer-d50-v1.dtb.tmp ../dts/qca9531_tplink_archer-d50-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_archer-d50-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_archer-d50-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_archer-d50-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7-v1.dtb.tmp ../dts/qca9558_tplink_archer-d7-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7b-v1.dtb.tmp ../dts/qca9558_tplink_archer-d7b-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7b-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7b-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_archer-d7b-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe210-v1.dtb.tmp ../dts/ar9344_tplink_cpe210-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe210-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe210-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe210-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v2.dtb.tmp ../dts/qca9533_tplink_cpe210-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v3.dtb.tmp ../dts/qca9533_tplink_cpe210-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe210-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe220-v2.dtb.tmp ../dts/ar9344_tplink_cpe220-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe220-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe220-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe220-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe220-v3.dtb.tmp ../dts/qca9533_tplink_cpe220-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe220-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe220-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_cpe220-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v1.dtb.tmp ../dts/ar9344_tplink_cpe510-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v2.dtb.tmp ../dts/ar9344_tplink_cpe510-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v3.dtb.tmp ../dts/ar9344_tplink_cpe510-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe510-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v1.dtb.tmp ../dts/ar9344_tplink_cpe610-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v2.dtb.tmp ../dts/ar9344_tplink_cpe610-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_cpe610-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_cpe710-v1.dtb.tmp ../dts/qca9563_tplink_cpe710-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_cpe710-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_cpe710-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_cpe710-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-outdoor-v1.dtb.tmp ../dts/qca9563_tplink_eap225-outdoor-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-outdoor-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-outdoor-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-outdoor-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v1.dtb.tmp ../dts/qca9563_tplink_eap225-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v3.dtb.tmp ../dts/qca9563_tplink_eap225-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap225-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_eap225-wall-v2.dtb.tmp ../dts/qca9561_tplink_eap225-wall-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_eap225-wall-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_eap225-wall-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9561_tplink_eap225-wall-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v1.dtb.tmp ../dts/qca9563_tplink_eap245-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v3.dtb.tmp ../dts/qca9563_tplink_eap245-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_eap245-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re350k-v1.dtb.tmp ../dts/qca9558_tplink_re350k-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re350k-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re350k-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re350k-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re355-v1.dtb.tmp ../dts/qca9558_tplink_re355-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re355-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re355-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re355-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re450-v1.dtb.tmp ../dts/qca9558_tplink_re450-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re450-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re450-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_re450-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v2.dtb.tmp ../dts/qca9563_tplink_re450-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v3.dtb.tmp ../dts/qca9563_tplink_re450-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re450-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re455-v1.dtb.tmp ../dts/qca9563_tplink_re455-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re455-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re455-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_re455-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-mr6400-v1.dtb.tmp ../dts/qca9531_tplink_tl-mr6400-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-mr6400-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-mr6400-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-mr6400-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wa1201-v2.dtb.tmp ../dts/qca9563_tplink_tl-wa1201-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wa1201-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wa1201-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wa1201-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3500-v1.dtb.tmp ../dts/ar9344_tplink_tl-wdr3500-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3500-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3500-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_tl-wdr3500-v1.dts:23.7-30.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3500-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3600-v1.dtb.tmp ../dts/ar9344_tplink_tl-wdr3600-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3600-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3600-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr3600-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1.dtb.tmp ../dts/ar9344_tplink_tl-wdr4300-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1-il.dtb.tmp ../dts/ar9344_tplink_tl-wdr4300-v1-il.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1-il.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1-il.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4300-v1-il.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4310-v1.dtb.tmp ../dts/ar9344_tplink_tl-wdr4310-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4310-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4310-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wdr4310-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr4900-v2.dtb.tmp ../dts/qca9558_tplink_tl-wdr4900-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr4900-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr4900-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr4900-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr7500-v3.dtb.tmp ../dts/qca9558_tplink_tl-wdr7500-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr7500-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr7500-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr7500-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630-v1.dtb.tmp ../dts/qca9563_tplink_tl-wpa8630-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2-int.dtb.tmp ../dts/qca9563_tplink_tl-wpa8630p-v2-int.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2-int.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2-int.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2-int.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.0-eu.dtb.tmp ../dts/qca9563_tplink_tl-wpa8630p-v2.0-eu.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.0-eu.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.0-eu.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.0-eu.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.1-eu.dtb.tmp ../dts/qca9563_tplink_tl-wpa8630p-v2.1-eu.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.1-eu.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.1-eu.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wpa8630p-v2.1-eu.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9132_tplink_tl-wr1043nd-v1.dtb.tmp ../dts/ar9132_tplink_tl-wr1043nd-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9132_tplink_tl-wr1043nd-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9132_tplink_tl-wr1043nd-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9132.dtsi:27.32-36.4</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9132.dtsi:114.44-124.6</span><br><span class="line">../dts/ar9132.dtsi:77.24-90.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9132_tplink_tl-wr1043nd-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v2.dtb.tmp ../dts/qca9558_tplink_tl-wr1043nd-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v3.dtb.tmp ../dts/qca9558_tplink_tl-wr1043nd-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1043nd-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043nd-v4.dtb.tmp ../dts/qca9563_tplink_tl-wr1043nd-v4.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043nd-v4.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043nd-v4.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043nd-v4.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043n-v5.dtb.tmp ../dts/qca9563_tplink_tl-wr1043n-v5.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043n-v5.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043n-v5.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_tplink_tl-wr1043n-v5.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1045nd-v2.dtb.tmp ../dts/qca9558_tplink_tl-wr1045nd-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1045nd-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1045nd-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wr1045nd-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_tplink_tl-wr2543-v1.dtb.tmp ../dts/ar7242_tplink_tl-wr2543-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_tplink_tl-wr2543-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_tplink_tl-wr2543-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7242.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_tplink_tl-wr2543-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v1.dtb.tmp ../dts/ar9331_tplink_tl-wr710n-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v2.1.dtb.tmp ../dts/ar9331_tplink_tl-wr710n-v2.1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v2.1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v2.1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9330.dtsi:163.10-166.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9330.dtsi:50.24-62.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9331_tplink_tl-wr710n-v2.1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr810n-v1.dtb.tmp ../dts/qca9531_tplink_tl-wr810n-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr810n-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr810n-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr810n-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr810n-v2.dtb.tmp ../dts/qca9533_tplink_tl-wr810n-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr810n-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr810n-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr810n-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wr841hp-v2.dtb.tmp ../dts/ar9344_tplink_tl-wr841hp-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wr841hp-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wr841hp-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_tl-wr841hp-v2.dts:115.7-129.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_tl-wr841hp-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr841hp-v3.dtb.tmp ../dts/qca9533_tplink_tl-wr841hp-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr841hp-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr841hp-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr841hp-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_tplink_tl-wr842n-v1.dtb.tmp ../dts/ar7241_tplink_tl-wr842n-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_tplink_tl-wr842n-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_tplink_tl-wr842n-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_tplink_tl-wr842n-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_tplink_tl-wr842n-v2.dtb.tmp ../dts/ar9341_tplink_tl-wr842n-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_tplink_tl-wr842n-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_tplink_tl-wr842n-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9341_tplink.dtsi:67.7-70.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9341_tplink_tl-wr842n-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr842n-v3.dtb.tmp ../dts/qca9533_tplink_tl-wr842n-v3.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr842n-v3.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr842n-v3.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_tplink_tl-wr842n-v3.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr902ac-v1.dtb.tmp ../dts/qca9531_tplink_tl-wr902ac-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr902ac-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr902ac-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9531_tplink_tl-wr902ac-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-tp9343_tplink_tl-wr941hp-v1.dtb.tmp ../dts/tp9343_tplink_tl-wr941hp-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-tp9343_tplink_tl-wr941hp-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-tp9343_tplink_tl-wr941hp-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-tp9343_tplink_tl-wr941hp-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v1.dtb.tmp ../dts/ar9344_tplink_wbs210-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v2.dtb.tmp ../dts/ar9344_tplink_wbs210-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs210-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v1.dtb.tmp ../dts/ar9344_tplink_wbs510-v1.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v1.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v1.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v1.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v2.dtb.tmp ../dts/ar9344_tplink_wbs510-v2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344_tplink_cpe.dtsi:104.7-118.3</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_tplink_wbs510-v2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_aircube-ac.dtb.tmp ../dts/ar9342_ubnt_aircube-ac.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_aircube-ac.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_aircube-ac.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_aircube-ac.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_ubnt_aircube-isp.dtb.tmp ../dts/qca9533_ubnt_aircube-isp.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_ubnt_aircube-isp.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_ubnt_aircube-isp.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/qca953x.dtsi:223.10-227.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:69.24-82.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca953x.dtsi:127.33-142.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9533_ubnt_aircube-isp.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_airrouter.dtb.tmp ../dts/ar7241_ubnt_airrouter.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_airrouter.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_airrouter.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_airrouter.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-ac.dtb.tmp ../dts/ar9342_ubnt_bullet-ac.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-ac.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-ac.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-ac.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_ubnt_bullet-m-ar7240.dtb.tmp ../dts/ar7240_ubnt_bullet-m-ar7240.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_ubnt_bullet-m-ar7240.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_ubnt_bullet-m-ar7240.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7240_ubnt_bullet-m-ar7240.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_bullet-m-ar7241.dtb.tmp ../dts/ar7241_ubnt_bullet-m-ar7241.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_bullet-m-ar7241.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_bullet-m-ar7241.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_bullet-m-ar7241.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-m-xw.dtb.tmp ../dts/ar9342_ubnt_bullet-m-xw.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-m-xw.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-m-xw.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_bullet-m-xw.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-5xp.dtb.tmp ../dts/ar7242_ubnt_edgeswitch-5xp.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-5xp.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-5xp.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7242.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-5xp.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-8xp.dtb.tmp ../dts/ar7242_ubnt_edgeswitch-8xp.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-8xp.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-8xp.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7242.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7242_ubnt_edgeswitch-8xp.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_lap-120.dtb.tmp ../dts/ar9342_ubnt_lap-120.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_lap-120.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_lap-120.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_lap-120.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_litebeam-ac-gen2.dtb.tmp ../dts/ar9342_ubnt_litebeam-ac-gen2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_litebeam-ac-gen2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_litebeam-ac-gen2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_litebeam-ac-gen2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac.dtb.tmp ../dts/ar9342_ubnt_nanobeam-ac.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac-gen2.dtb.tmp ../dts/ar9342_ubnt_nanobeam-ac-gen2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac-gen2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac-gen2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanobeam-ac-gen2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_nanobeam-ac-xc.dtb.tmp ../dts/qca9558_ubnt_nanobeam-ac-xc.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_nanobeam-ac-xc.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_nanobeam-ac-xc.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_nanobeam-ac-xc.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanobridge-m.dtb.tmp ../dts/ar7241_ubnt_nanobridge-m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanobridge-m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanobridge-m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanobridge-m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac.dtb.tmp ../dts/ar9342_ubnt_nanostation-ac.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac-loco.dtb.tmp ../dts/ar9342_ubnt_nanostation-ac-loco.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac-loco.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac-loco.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-ac-loco.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-loco-m.dtb.tmp ../dts/ar7241_ubnt_nanostation-loco-m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-loco-m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-loco-m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-loco-m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-loco-m-xw.dtb.tmp ../dts/ar9342_ubnt_nanostation-loco-m-xw.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-loco-m-xw.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-loco-m-xw.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-loco-m-xw.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-m.dtb.tmp ../dts/ar7241_ubnt_nanostation-m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_nanostation-m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-m-xw.dtb.tmp ../dts/ar9342_ubnt_nanostation-m-xw.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-m-xw.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-m-xw.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_nanostation-m-xw.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_picostation-m.dtb.tmp ../dts/ar7241_ubnt_picostation-m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_picostation-m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_picostation-m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_picostation-m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_powerbeam-5ac-500.dtb.tmp ../dts/qca9558_ubnt_powerbeam-5ac-500.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_powerbeam-5ac-500.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_powerbeam-5ac-500.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_powerbeam-5ac-500.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-5ac-gen2.dtb.tmp ../dts/ar9342_ubnt_powerbeam-5ac-gen2.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-5ac-gen2.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-5ac-gen2.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-5ac-gen2.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m2-xw.dtb.tmp ../dts/ar9342_ubnt_powerbeam-m2-xw.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m2-xw.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m2-xw.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m2-xw.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m5-xw.dtb.tmp ../dts/ar9342_ubnt_powerbeam-m5-xw.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m5-xw.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m5-xw.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9342_ubnt_powerbeam-m5-xw.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_powerbridge-m.dtb.tmp ../dts/ar7241_ubnt_powerbridge-m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_powerbridge-m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_powerbridge-m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_powerbridge-m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_rocket-5ac-lite.dtb.tmp ../dts/qca9558_ubnt_rocket-5ac-lite.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_rocket-5ac-lite.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_rocket-5ac-lite.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:82.24-95.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:142.34-154.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller2: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca955x.dtsi:156.34-169.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller3: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_ubnt_rocket-5ac-lite.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_rocket-m.dtb.tmp ../dts/ar7241_ubnt_rocket-m.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_rocket-m.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_rocket-m.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_rocket-m.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation.dtb.tmp ../dts/ar7161_ubnt_routerstation.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation-pro.dtb.tmp ../dts/ar7161_ubnt_routerstation-pro.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation-pro.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation-pro.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:184.10-188.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7100.dtsi:190.11-192.3</span><br><span class="line">../dts/ar7100.dtsi:58.24-70.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar7100.dtsi:93.44-100.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060018: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7161_ubnt_routerstation-pro.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi.dtb.tmp ../dts/ar7241_ubnt_unifi.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lite.dtb.tmp ../dts/qca9563_ubnt_unifiac-lite.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lite.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lite.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lite.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lr.dtb.tmp ../dts/qca9563_ubnt_unifiac-lr.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lr.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lr.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-lr.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh.dtb.tmp ../dts/qca9563_ubnt_unifiac-mesh.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh-pro.dtb.tmp ../dts/qca9563_ubnt_unifiac-mesh-pro.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh-pro.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh-pro.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-mesh-pro.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-pro.dtb.tmp ../dts/qca9563_ubnt_unifiac-pro.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-pro.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-pro.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:58.24-71.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/qca956x.dtsi:118.33-131.7: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9563_ubnt_unifiac-pro.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi-ap-outdoor-plus.dtb.tmp ../dts/ar7241_ubnt_unifi-ap-outdoor-plus.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi-ap-outdoor-plus.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi-ap-outdoor-plus.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar724x.dtsi:161.10-165.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar724x.dtsi:50.24-63.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar7241.dtsi:18.7-20.3</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar7241_ubnt_unifi-ap-outdoor-plus.dtb.tmp</span><br><span class="line">mips-openwrt-linux-musl-cpp -nostdinc -x assembler-with-cpp  -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/arch/mips/boot/dts/include -I/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/include/ -undef -D__DTS__  -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ubnt_unifi-ap-pro.dtb.tmp ../dts/ar9344_ubnt_unifi-ap-pro.dts</span><br><span class="line">/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/linux-5.10.180/scripts/dtc/dtc -O dtb -i../dts/ -Wno-unit_address_vs_reg -Wno-simple_bus_reg -Wno-unit_address_format -Wno-pci_bridge -Wno-pci_device_bus_num -Wno-pci_device_reg -Wno-avoid_unnecessary_addr_size -Wno-alias_paths -Wno-graph_child_address -Wno-graph_port -Wno-unique_unit_address   -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ubnt_unifi-ap-pro.dtb /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ubnt_unifi-ap-pro.dtb.tmp</span><br><span class="line">../dts/ath79.dtsi:10.32-15.4: Warning (interrupt_provider): /interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">  also defined at ../dts/ar9344.dtsi:9.10-13.3</span><br><span class="line">../dts/ath79.dtsi:35.44-44.6: Warning (interrupt_provider): /ahb/apb/interrupt-controller@18060010: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar934x.dtsi:79.24-91.6: Warning (interrupt_provider): /ahb/apb/gpio@18040000: Missing #address-cells in interrupt provider</span><br><span class="line">../dts/ar9344.dtsi:16.30-31.4: Warning (interrupt_provider): /ahb/apb/reset-controller@1806001c/interrupt-controller: Missing #address-cells in interrupt provider</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-ar9344_ubnt_unifi-ap-pro.dtb.tmp</span><br><span class="line">mkdir -p /home/winward/lede/bin/targets/ath79/generic /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp</span><br><span class="line">rm -rf /home/winward/lede/build_dir/target-mips_24kc_musl/json_info_files</span><br><span class="line">/home/winward/lede/staging_dir/host/bin/mksquashfs4 /home/winward/lede/build_dir/target-mips_24kc_musl/root-ath79 /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/root.squashfs -nopad -noappend -root-owned -comp xz -Xpreset 9 -Xe -Xlc 0 -Xlp 2 -Xpb 2  -b 1024k -p &#x27;/dev d 755 0 0&#x27; -p &#x27;/dev/console c 600 0 0 5 1&#x27; -no-xattrs</span><br><span class="line">Parallel mksquashfs: Using 8 processors</span><br><span class="line">Creating 4.0 filesystem on /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/root.squashfs, block size 1048576.</span><br><span class="line">Pseudo file &quot;/dev&quot; exists in source filesystem &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/root-ath79/dev&quot;.</span><br><span class="line">Ignoring, exclude it (-e/-ef) to override.</span><br><span class="line">[=============================================================/] 1649/1649 100%</span><br><span class="line"></span><br><span class="line">Exportable Squashfs 4.0 filesystem, xz compressed, data block size 1048576</span><br><span class="line">compressed data, compressed metadata, compressed fragments,</span><br><span class="line">no xattrs, compressed ids</span><br><span class="line">duplicates are removed</span><br><span class="line">Filesystem size 6025.71 Kbytes (5.88 Mbytes)</span><br><span class="line">33.20% of uncompressed filesystem size (18149.58 Kbytes)</span><br><span class="line">Inode table size 15270 bytes (14.91 Kbytes)</span><br><span class="line">20.83% of uncompressed inode table size (73292 bytes)</span><br><span class="line">Directory table size 21778 bytes (21.27 Kbytes)</span><br><span class="line">43.42% of uncompressed directory table size (50159 bytes)</span><br><span class="line">Number of duplicate files found 229</span><br><span class="line">Number of inodes 2154</span><br><span class="line">Number of files 1655</span><br><span class="line">Number of fragments 18</span><br><span class="line">Number of symbolic links  348</span><br><span class="line">Number of device nodes 1</span><br><span class="line">Number of fifo nodes 0</span><br><span class="line">Number of socket nodes 0</span><br><span class="line">Number of directories 150</span><br><span class="line">Number of ids (unique uids + gids) 1</span><br><span class="line">Number of uids 1</span><br><span class="line">root (0)</span><br><span class="line">Number of gids 1</span><br><span class="line">root (0)</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin</span><br><span class="line">cp /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/vmlinux-initramfs /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin</span><br><span class="line">cat /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr7500-v3.dtb &gt;&gt; /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin</span><br><span class="line">/home/winward/lede/staging_dir/host/bin/lzma e /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin -lc1 -lp2 -pb2  /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin.new</span><br><span class="line">/home/winward/lede/staging_dir/host/bin/mktplinkfw -c -H 0x75000003 -W 0x1 -L 0x80060000 -E 0x80060000 -m 1 -N &quot;OpenWrt&quot; -V r6016-c120cd117 -k /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin.new </span><br><span class="line">[mktplinkfw] firmware file &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin.new&quot; completed</span><br><span class="line">cp /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin /home/winward/lede/bin/targets/ath79/generic/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin</span><br><span class="line">DEVICE_ID=&quot;tplink_tl-wdr7500-v3&quot; SOURCE_DATE_EPOCH=1686027823 FILE_NAME=&quot;openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin&quot; FILE_DIR=&quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp&quot; FILE_TYPE=&quot;kernel&quot; FILE_FILESYSTEM=&quot;initramfs&quot; DEVICE_IMG_PREFIX=&quot;openwrt-ath79-generic-tplink_tl-wdr7500-v3&quot; DEVICE_VENDOR=&quot;TP-Link&quot; DEVICE_MODEL=&quot;TL-WDR7500&quot; DEVICE_VARIANT=&quot;v3&quot; DEVICE_ALT0_VENDOR=&quot;&quot; DEVICE_ALT0_MODEL=&quot;&quot; DEVICE_ALT0_VARIANT=&quot;&quot; DEVICE_ALT1_VENDOR=&quot;&quot; DEVICE_ALT1_MODEL=&quot;&quot; DEVICE_ALT1_VARIANT=&quot;&quot; DEVICE_ALT2_VENDOR=&quot;&quot; DEVICE_ALT2_MODEL=&quot;&quot; DEVICE_ALT2_VARIANT=&quot;&quot; DEVICE_ALT3_VENDOR=&quot;&quot; DEVICE_ALT3_MODEL=&quot;&quot; DEVICE_ALT3_VARIANT=&quot;&quot; DEVICE_ALT4_VENDOR=&quot;&quot; DEVICE_ALT4_MODEL=&quot;&quot; DEVICE_ALT4_VARIANT=&quot;&quot; DEVICE_TITLE=&quot;TP-Link TL-WDR7500 v3&quot; DEVICE_PACKAGES=&quot;kmod-usb2 kmod-usb-ledtrig-usbport kmod-ath10k-ct ath10k-firmware-qca988x-ct&quot; TARGET=&quot;ath79&quot; SUBTARGET=&quot;generic&quot; VERSION_NUMBER=&quot;SNAPSHOT&quot; VERSION_CODE=&quot;r6016-c120cd117&quot; SUPPORTED_DEVICES=&quot;tplink,tl-wdr7500-v3 archer-c7&quot; /home/winward/lede/scripts/json_add_image_info.py /home/winward/lede/build_dir/target-mips_24kc_musl/json_info_files/openwrt-ath79-generic-tplink_tl-wdr7500-v3-initramfs-kernel.bin.json</span><br><span class="line">rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin</span><br><span class="line">cp /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/vmlinux /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin</span><br><span class="line">cat /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/image-qca9558_tplink_tl-wdr7500-v3.dtb &gt;&gt; /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin</span><br><span class="line">/home/winward/lede/staging_dir/host/bin/lzma e /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin -lc1 -lp2 -pb2  /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin.new</span><br><span class="line">[ -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin -a -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/root.squashfs ]</span><br><span class="line">/home/winward/lede/staging_dir/host/bin/mktplinkfw -H 0x75000003 -W 0x1 -F 8Mlzma -N &quot;OpenWrt&quot; -V r6016-c120cd117 -m 1 -k /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin -r /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/root.squashfs -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.new -j -X 0x40000 -a 0x4  -s &amp;&amp; mv /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.new /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin || rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin</span><br><span class="line">[mktplinkfw] rootfs offset aligned to 0x2243244</span><br><span class="line">[mktplinkfw] *** error: images are too big by 549255 bytes</span><br><span class="line">echo &#x27;&#123;  &quot;metadata_version&quot;: &quot;1.1&quot;, &quot;compat_version&quot;: &quot;1.0&quot;,   &quot;supported_devices&quot;:[&quot;tplink,tl-wdr7500-v3&quot;,&quot;archer-c7&quot;], &quot;version&quot;: &#123; &quot;dist&quot;: &quot;OpenWrt&quot;, &quot;version&quot;: &quot;SNAPSHOT&quot;, &quot;revision&quot;: &quot;r6016-c120cd117&quot;, &quot;target&quot;: &quot;ath79/generic&quot;, &quot;board&quot;: &quot;tplink_tl-wdr7500-v3&quot; &#125; &#125;&#x27; | fwtool -I - /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin</span><br><span class="line">Failed to open firmware file</span><br><span class="line">make[5]: [Makefile:112: /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin] Error 1 (ignored)</span><br><span class="line">sha256sum &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin&quot; | cut -d&quot; &quot; -f1 &gt; &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.sha256sum&quot;</span><br><span class="line">sha256sum: /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin: No such file or directory</span><br><span class="line">[ ! -s &quot;/home/winward/lede/key-build&quot; -o ! -s &quot;/home/winward/lede/key-build.ucert&quot; -o ! -s &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin&quot; ] || &#123; cp &quot;/home/winward/lede/key-build.ucert&quot; &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.ucert&quot; ; usign -S -m &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin&quot; -s &quot;/home/winward/lede/key-build&quot; -x &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.sig&quot; ; ucert -A -c &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.ucert&quot; -x &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.sig&quot; ; fwtool -S &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.ucert&quot; &quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin&quot; ; &#125;</span><br><span class="line">cp /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin /home/winward/lede/bin/targets/ath79/generic/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin</span><br><span class="line">cp: cannot stat &#x27;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin&#x27;: No such file or directory</span><br><span class="line">make[5]: [Makefile:110: /home/winward/lede/bin/targets/ath79/generic/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin] Error 1 (ignored)</span><br><span class="line">DEVICE_ID=&quot;tplink_tl-wdr7500-v3&quot; SOURCE_DATE_EPOCH=1686027823 FILE_NAME=&quot;openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin&quot; FILE_DIR=&quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp&quot; FILE_TYPE=sysupgrade FILE_FILESYSTEM=&quot;squashfs&quot; DEVICE_IMG_PREFIX=&quot;openwrt-ath79-generic-tplink_tl-wdr7500-v3&quot; DEVICE_VENDOR=&quot;TP-Link&quot; DEVICE_MODEL=&quot;TL-WDR7500&quot; DEVICE_VARIANT=&quot;v3&quot; DEVICE_ALT0_VENDOR=&quot;&quot; DEVICE_ALT0_MODEL=&quot;&quot; DEVICE_ALT0_VARIANT=&quot;&quot; DEVICE_ALT1_VENDOR=&quot;&quot; DEVICE_ALT1_MODEL=&quot;&quot; DEVICE_ALT1_VARIANT=&quot;&quot; DEVICE_ALT2_VENDOR=&quot;&quot; DEVICE_ALT2_MODEL=&quot;&quot; DEVICE_ALT2_VARIANT=&quot;&quot; DEVICE_ALT3_VENDOR=&quot;&quot; DEVICE_ALT3_MODEL=&quot;&quot; DEVICE_ALT3_VARIANT=&quot;&quot; DEVICE_ALT4_VENDOR=&quot;&quot; DEVICE_ALT4_MODEL=&quot;&quot; DEVICE_ALT4_VARIANT=&quot;&quot; DEVICE_TITLE=&quot;TP-Link TL-WDR7500 v3&quot; DEVICE_PACKAGES=&quot;kmod-usb2 kmod-usb-ledtrig-usbport kmod-ath10k-ct ath10k-firmware-qca988x-ct&quot; TARGET=&quot;ath79&quot; SUBTARGET=&quot;generic&quot; VERSION_NUMBER=&quot;SNAPSHOT&quot; VERSION_CODE=&quot;r6016-c120cd117&quot; SUPPORTED_DEVICES=&quot;tplink,tl-wdr7500-v3 archer-c7&quot; /home/winward/lede/scripts/json_add_image_info.py /home/winward/lede/build_dir/target-mips_24kc_musl/json_info_files/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin.json</span><br><span class="line">Skip JSON creation for non existing file /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-sysupgrade.bin</span><br><span class="line">[ -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin -a -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/root.squashfs ]</span><br><span class="line">/home/winward/lede/staging_dir/host/bin/mktplinkfw -H 0x75000003 -W 0x1 -F 8Mlzma -N &quot;OpenWrt&quot; -V r6016-c120cd117 -m 1 -k /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tplink_tl-wdr7500-v3-kernel.bin -r /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/root.squashfs -o /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin.new -j -X 0x40000 -a 0x4   &amp;&amp; mv /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin.new /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin || rm -f /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin</span><br><span class="line">[mktplinkfw] rootfs offset aligned to 0x2243244</span><br><span class="line">[mktplinkfw] *** error: images are too big by 549255 bytes</span><br><span class="line">cp /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin /home/winward/lede/bin/targets/ath79/generic/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin</span><br><span class="line">cp: cannot stat &#x27;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin&#x27;: No such file or directory</span><br><span class="line">make[5]: [Makefile:110: /home/winward/lede/bin/targets/ath79/generic/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin] Error 1 (ignored)</span><br><span class="line">DEVICE_ID=&quot;tplink_tl-wdr7500-v3&quot; SOURCE_DATE_EPOCH=1686027823 FILE_NAME=&quot;openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin&quot; FILE_DIR=&quot;/home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp&quot; FILE_TYPE=factory FILE_FILESYSTEM=&quot;squashfs&quot; DEVICE_IMG_PREFIX=&quot;openwrt-ath79-generic-tplink_tl-wdr7500-v3&quot; DEVICE_VENDOR=&quot;TP-Link&quot; DEVICE_MODEL=&quot;TL-WDR7500&quot; DEVICE_VARIANT=&quot;v3&quot; DEVICE_ALT0_VENDOR=&quot;&quot; DEVICE_ALT0_MODEL=&quot;&quot; DEVICE_ALT0_VARIANT=&quot;&quot; DEVICE_ALT1_VENDOR=&quot;&quot; DEVICE_ALT1_MODEL=&quot;&quot; DEVICE_ALT1_VARIANT=&quot;&quot; DEVICE_ALT2_VENDOR=&quot;&quot; DEVICE_ALT2_MODEL=&quot;&quot; DEVICE_ALT2_VARIANT=&quot;&quot; DEVICE_ALT3_VENDOR=&quot;&quot; DEVICE_ALT3_MODEL=&quot;&quot; DEVICE_ALT3_VARIANT=&quot;&quot; DEVICE_ALT4_VENDOR=&quot;&quot; DEVICE_ALT4_MODEL=&quot;&quot; DEVICE_ALT4_VARIANT=&quot;&quot; DEVICE_TITLE=&quot;TP-Link TL-WDR7500 v3&quot; DEVICE_PACKAGES=&quot;kmod-usb2 kmod-usb-ledtrig-usbport kmod-ath10k-ct ath10k-firmware-qca988x-ct&quot; TARGET=&quot;ath79&quot; SUBTARGET=&quot;generic&quot; VERSION_NUMBER=&quot;SNAPSHOT&quot; VERSION_CODE=&quot;r6016-c120cd117&quot; SUPPORTED_DEVICES=&quot;tplink,tl-wdr7500-v3 archer-c7&quot; /home/winward/lede/scripts/json_add_image_info.py /home/winward/lede/build_dir/target-mips_24kc_musl/json_info_files/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin.json</span><br><span class="line">Skip JSON creation for non existing file /home/winward/lede/build_dir/target-mips_24kc_musl/linux-ath79_generic/tmp/openwrt-ath79-generic-tplink_tl-wdr7500-v3-squashfs-factory.bin</span><br><span class="line">IPKG_NO_SCRIPT=1 IPKG_INSTROOT=/home/winward/lede/build_dir/target-mips_24kc_musl/root.orig-ath79 TMPDIR=/home/winward/lede/build_dir/target-mips_24kc_musl/root.orig-ath79/tmp /home/winward/lede/staging_dir/host/bin/opkg --offline-root /home/winward/lede/build_dir/target-mips_24kc_musl/root.orig-ath79 --force-postinstall --add-dest root:/ --add-arch all:100 --add-arch mips_24kc:200 list-installed &gt; /home/winward/lede/bin/targets/ath79/generic/openwrt-ath79-generic-tplink_tl-wdr7500-v3.manifest</span><br><span class="line">make[5]: Leaving directory &#x27;/home/winward/lede/target/linux/ath79/image&#x27;</span><br><span class="line">make[4]: Leaving directory &#x27;/home/winward/lede/target/linux/ath79&#x27;</span><br><span class="line">make[3]: Leaving directory &#x27;/home/winward/lede/target/linux&#x27;</span><br><span class="line">time: target/linux/install#45.47#13.58#58.56</span><br><span class="line">make[2]: Leaving directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">export MAKEFLAGS= ;make -w -r package/index</span><br><span class="line">make[2]: Entering directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">Generating package index...</span><br><span class="line">Generating index for package ./base-files_66-r6016-c120cd117_mips_24kc.ipk</span><br><span class="line">Generating index for package ./block-mount_2023-01-22-1ea5855e-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./dropbear_2022.82-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./fstools_2023-01-22-1ea5855e-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./fwtool_2019-11-12-8f7fe925-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./iptables-mod-extra_1.8.7-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./iptables-mod-tproxy_1.8.7-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./iptables_1.8.7-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./iwinfo_2023-05-17-c9f5c3f7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-asn1-decoder_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ath10k-ct_5.10.180+2022-05-13-f808496f-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ath9k-common_5.10.180+6.1.24-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ath9k_5.10.180+6.1.24-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ath_5.10.180+6.1.24-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-cfg80211_5.10.180+6.1.24-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-acompress_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-aead_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-arc4_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-authenc_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-ccm_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-cmac_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-ctr_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-ecb_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-gcm_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-gf128_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-ghash_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-hash_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-hmac_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-manager_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-null_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-rng_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-seqiv_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-sha1_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-sha256_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-crypto-user_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-cryptodev_5.10.180+1.12-ath79-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-gpio-button-hotplug_5.10.180-3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-hwmon-core_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-conntrack_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-core_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-extra_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-fullconenat_5.10.180+2022-02-13-108a36cb-10_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-ipset_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-nat_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-offload_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-raw_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ipt-tproxy_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-lib-crc-ccitt_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-lib-lzo_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-lib-textsearch_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-mac80211_5.10.180+6.1.24-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-macvlan_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-mppe_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-conntrack-netlink_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-conntrack6_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-conntrack_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-flow_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-ipt_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-log_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-nat_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-nathelper-extra_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-nathelper_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-reject_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nf-tproxy_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nfnetlink_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-nls-base_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-phy-ath79-usb_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-ppp_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-pppoe_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-pppox_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-random-core_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-slhc_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-tcp-bbr_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-tun_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-usb-core_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-usb-ehci_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-usb-ledtrig-usbport_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./kmod-usb2_5.10.180-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libgcc1_8.4.0-4_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libip4tc2_1.8.7-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libip6tc2_1.8.7-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libiwinfo-data_2023-05-17-c9f5c3f7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libiwinfo-lua_2023-05-17-c9f5c3f7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libiwinfo20230121_2023-05-17-c9f5c3f7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libpthread_1.2.3-4_mips_24kc.ipk</span><br><span class="line">Generating index for package ./librt_1.2.3-4_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libxtables12_1.8.7-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./mtd_26_mips_24kc.ipk</span><br><span class="line">Generating index for package ./uboot-envtools_2023.01-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ath10k-board-qca988x_20230515-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ath10k-firmware-qca988x-ct_2020-11-08-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./busybox_1.36.0-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ca-bundle_20211016-1_all.ipk</span><br><span class="line">Generating index for package ./ca-certificates_20211016-1_all.ipk</span><br><span class="line">Generating index for package ./ddns-scripts_aliyun_1.0.3-1_all.ipk</span><br><span class="line">Generating index for package ./ddns-scripts_dnspod_1.0.2-1_all.ipk</span><br><span class="line">Generating index for package ./default-settings_3-1_all.ipk</span><br><span class="line">Generating index for package ./dnsmasq-full_2.88-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./firewall_2022-02-17-4cd7d4f3-3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./getrandom_2022-08-13-4c7b720b-14_mips_24kc.ipk</span><br><span class="line">Generating index for package ./hostapd-common_2022-07-29-b704dc72-7_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ip-full_6.2.0-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ipset_7.17-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./iptables-mod-fullconenat_2022-02-13-108a36cb-10_mips_24kc.ipk</span><br><span class="line">Generating index for package ./iw_5.19-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./jshn_2022-09-27-ea560134-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./jsonfilter_2018-02-04-c7e938d6-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libblobmsg-json20220927_2022-09-27-ea560134-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libbpf20220308_2022-03-08-04c465fd-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libelf1_0.188-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libipset13_7.17-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libjson-c5_0.16-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libjson-script20220927_2022-09-27-ea560134-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./liblua5.1.5_5.1.5-10_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libmnl0_1.0.5-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libnl-tiny2022-11-01_2022-11-01-db3b2cdb-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libopenssl-conf_1.1.1t-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libopenssl1.1_1.1.1t-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libpcre_8.45-5_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libubox20220927_2022-09-27-ea560134-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libubus-lua_2022-06-01-2bebf93c-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libubus20220601_2022-06-01-2bebf93c-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libuci-lua_2021-10-22-f84f49f0-6_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libuci20130104_2021-10-22-f84f49f0-6_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libuclient20201210_2021-05-14-6a6011df-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libustream-openssl20201210_2022-12-08-9217ab46-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libuuid1_2.38.1-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libwolfssl5.5.4.e624513f_5.5.4-stable-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./logd_2022-08-13-4c7b720b-14_mips_24kc.ipk</span><br><span class="line">Generating index for package ./lua_5.1.5-10_mips_24kc.ipk</span><br><span class="line">Generating index for package ./netifd_2021-06-04-50381d0a-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./openssl-util_1.1.1t-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./openwrt-keyring_2022-03-25-62471e69-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./opkg_2022-02-24-d038e5b6-5_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ppp-mod-pppoe_2.4.9.git-2021-01-04-6_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ppp_2.4.9.git-2021-01-04-6_mips_24kc.ipk</span><br><span class="line">Generating index for package ./procd-seccomp_2023-01-16-190f13a7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./procd-ujail_2023-01-16-190f13a7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./procd_2023-01-16-190f13a7-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./rpcd_2023-01-21-c0df2a7a-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./shellsync_0.2-2_mips_24kc.ipk</span><br><span class="line">Generating index for package ./swconfig_12_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ubox_2022-08-13-4c7b720b-14_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ubus_2022-06-01-2bebf93c-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ubusd_2022-06-01-2bebf93c-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./uci_2021-10-22-f84f49f0-6_mips_24kc.ipk</span><br><span class="line">Generating index for package ./uclient-fetch_2021-05-14-6a6011df-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./uhttpd-mod-ubus_2022-10-31-23977554-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./uhttpd_2022-10-31-23977554-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./urandom-seed_3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./urngd_2020-01-21-c7f7b6b6-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./usign_2020-05-23-f1f65026-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./vsftpd-alt_3.0.5-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./wireless-regdb_2022.08.12-1_all.ipk</span><br><span class="line">Generating index for package ./wol_0.7.1-3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./wpad-basic-wolfssl_2022-07-29-b704dc72-7_mips_24kc.ipk</span><br><span class="line">Generating index for package ./zlib_1.2.13-9_mips_24kc.ipk</span><br><span class="line">Generating index for package ./luci-app-accesscontrol_1-11_all.ipk</span><br><span class="line">Generating index for package ./luci-app-arpbind_1-3_all.ipk</span><br><span class="line">Generating index for package ./luci-app-autoreboot_1.0-8_all.ipk</span><br><span class="line">Generating index for package ./luci-app-ddns_2.4.9-8_all.ipk</span><br><span class="line">Generating index for package ./luci-app-filetransfer_1-2_all.ipk</span><br><span class="line">Generating index for package ./luci-app-firewall_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-app-nlbwmon_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-app-turboacc_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-app-upnp_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-app-vlmcsd_1.0-6_all.ipk</span><br><span class="line">Generating index for package ./luci-app-vsftpd_1.0-3_all.ipk</span><br><span class="line">Generating index for package ./luci-app-wol_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-base_git-23.141.16773-28dd4b3-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./luci-i18n-accesscontrol-zh-cn_1-11_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-arpbind-zh-cn_1-3_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-autoreboot-zh-cn_1.0-8_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-base-zh-cn_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-ddns-zh-cn_2.4.9-8_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-filetransfer-zh-cn_1-2_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-firewall-zh-cn_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-nlbwmon-zh-cn_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-turboacc-zh-cn_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-upnp-zh-cn_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-vlmcsd-zh-cn_1.0-6_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-vsftpd-zh-cn_1.0-3_all.ipk</span><br><span class="line">Generating index for package ./luci-i18n-wol-zh-cn_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-lib-fs_1.0-1_all.ipk</span><br><span class="line">Generating index for package ./luci-lib-ip_git-23.141.16773-28dd4b3-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./luci-lib-jsonc_git-23.141.16773-28dd4b3-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./luci-lib-nixio_git-23.141.16773-28dd4b3-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./luci-mod-admin-full_git-23.141.16773-28dd4b3-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./luci-newapi_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-proto-ppp_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci-theme-bootstrap_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./luci_git-23.141.16773-28dd4b3-1_all.ipk</span><br><span class="line">Generating index for package ./rpcd-mod-rrdns_20170710_mips_24kc.ipk</span><br><span class="line">Generating index for package ./coremark_2022-07-27-eefc986e-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./curl_8.0.1-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./ddns-scripts_2.7.8-5_all.ipk</span><br><span class="line">Generating index for package ./etherwake_1.09-5_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libcurl4_8.0.1-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./libnghttp2-14_1.51.0-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./miniupnpd_2.0.20170421-3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./nlbwmon_2021-09-01-d82c910c-1_mips_24kc.ipk</span><br><span class="line">Generating index for package ./pdnsd-alt_1.2.9b-par-3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./vlmcsd_svn1113-3_mips_24kc.ipk</span><br><span class="line">Generating index for package ./wget-ssl_1.21.3-1_mips_24kc.ipk</span><br><span class="line">Signing package index...</span><br><span class="line">make[2]: Leaving directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">export MAKEFLAGS= ;make -w -r json_overview_image_info</span><br><span class="line">make[2]: Entering directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">WORK_DIR=/home/winward/lede/build_dir/target-mips_24kc_musl/json_info_files /home/winward/lede/scripts/json_overview_image_info.py /home/winward/lede/bin/targets/ath79/generic/profiles.json </span><br><span class="line">make[2]: Leaving directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">export MAKEFLAGS= ;make -w -r checksum</span><br><span class="line">make[2]: Entering directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">make[2]: Leaving directory &#x27;/home/winward/lede&#x27;</span><br><span class="line">make[1]: Leaving directory &#x27;/home/winward/lede&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器，软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DD-WRT</title>
      <link href="/2023/06/03/Hardware/05DDWrt/"/>
      <url>/2023/06/03/Hardware/05DDWrt/</url>
      
        <content type="html"><![CDATA[<h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="https://forum.dd-wrt.com/wiki/index.php/Main_Page">https://forum.dd-wrt.com/wiki/index.php/Main_Page</a></li></ul><h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><h2 id="设置中文语言包"><a href="#设置中文语言包" class="headerlink" title="设置中文语言包"></a>设置中文语言包</h2><ol><li>管理员 -&gt; 语言选择 -&gt;简体中文</li><li>使用CTRL+F5(以下操作同理)</li><li>修改中文界面修改保存应用之后需要刷新一下浏览器或者是把浏览器关了再重新打开路由器设置界面</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器，软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由器</title>
      <link href="/2023/06/03/Hardware/01Router/"/>
      <url>/2023/06/03/Hardware/01Router/</url>
      
        <content type="html"><![CDATA[<h1 id="路由器固件分析"><a href="#路由器固件分析" class="headerlink" title="路由器固件分析"></a>路由器固件分析</h1><blockquote><p><a href="https://blog.csdn.net/weixin_44932880/article/details/110840571">固件提取-flash芯片</a></p></blockquote><p>一般路由器需要一个bootloader来启动，一开始上电启动的时候，从0x00开启运行代码，这个bootloader代码一般是可写的，不是固化在ROM里的，是烧写在flash里面的。Flash中存放着当前使用中的IOS(路由器操作系统)。</p><blockquote><p><a href="https://blog.csdn.net/dylolorz/article/details/112854095">路由器固件解析</a></p></blockquote><h1 id="无线技术演化史"><a href="#无线技术演化史" class="headerlink" title="无线技术演化史"></a>无线技术演化史</h1><blockquote><p><a href="https://zhuanlan.zhihu.com/p/463957447">WiFi 技术演化史 &amp;&amp; WiFi 6技术介绍</a></p></blockquote><h1 id="WIFI4、WIFI5-和-WIFI6"><a href="#WIFI4、WIFI5-和-WIFI6" class="headerlink" title="WIFI4、WIFI5 和 WIFI6"></a>WIFI4、WIFI5 和 WIFI6</h1><table><thead><tr><th>历代记</th><th>Wi-Fi 4</th><th>Wi-Fi 5</th><th>Wi-Fi 6</th></tr></thead><tbody><tr><td>协议</td><td>802.11n</td><td>802.11ac(Wave 1&#x2F;Wave 2)</td><td>802.11ax</td></tr><tr><td>年份</td><td>2009</td><td>2013&#x2F;2016</td><td></td></tr><tr><td>工作频段</td><td>2.4 GHz&#x2F;5 GHz</td><td>5 GHz</td><td>2.4 GHz&#x2F;5 GHz</td></tr><tr><td>最大频宽</td><td>40 MHz</td><td>80 MHz&#x2F;160 MHz</td><td>160 MHz</td></tr><tr><td>MCS范围</td><td>0～7</td><td>0~9</td><td>0~11</td></tr><tr><td>最高调制</td><td>64QAM</td><td>256QAM</td><td>1024QAM</td></tr><tr><td>单流带宽</td><td>150Mbps</td><td>433Mbps&#x2F;867Mbps</td><td>1201Mbps</td></tr><tr><td>最大空间流</td><td>4×4</td><td>8×8</td><td>8×8</td></tr><tr><td>MU-MIMO</td><td></td><td>下行</td><td>上行&#x2F;下行</td></tr><tr><td>OFDMA</td><td></td><td></td><td>上行&#x2F;下行</td></tr></tbody></table><h1 id="手机网卡最大速率"><a href="#手机网卡最大速率" class="headerlink" title="手机网卡最大速率"></a>手机网卡最大速率</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jellyfin</title>
      <link href="/2023/06/01/Aio/04Jellyfin/"/>
      <url>/2023/06/01/Aio/04Jellyfin/</url>
      
        <content type="html"><![CDATA[<h1 id="Jellyfin"><a href="#Jellyfin" class="headerlink" title="Jellyfin"></a>Jellyfin</h1><ul><li><p>Jellyfin是一套多媒体应用程序软件套装，旨在组织、管理和共享数字媒体文件。</p></li><li><p>Jellyfin分为服务端和客户端应用程序，服务端应用程序安装在运行Microsoft Windows、MacOS、Linux等系统的服务器上或Docker上，客户端应用程序安装在智能手机、平板电脑、智能电视、网络机顶盒、电子游戏机或网页浏览器上。支持DLNA以及插有Chromecast的设备也能接收Jellyfin服务端发来的文件。</p></li><li><p>Jellyfin是Emby的一个自由开源分叉。</p></li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="https://jellyfin.org/">https://jellyfin.org/</a></li></ul><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><h2 id="Nyanmisaka-jellyfin"><a href="#Nyanmisaka-jellyfin" class="headerlink" title="Nyanmisaka-jellyfin"></a>Nyanmisaka-jellyfin</h2><div style="display:none">- [jellyfin新选择，Nyanmisaka出品，即装即硬解！](https://post.smzdm.com/p/a859320l/)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Nas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esxi </tag>
            
            <tag> synology </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖通过ipv6及域名访问</title>
      <link href="/2023/06/01/Aio/03ddnsForIPv6/"/>
      <url>/2023/06/01/Aio/03ddnsForIPv6/</url>
      
        <content type="html"><![CDATA[<h1 id="路由器和光猫设置"><a href="#路由器和光猫设置" class="headerlink" title="路由器和光猫设置"></a>路由器和光猫设置</h1><ul><li>注意： 路由器要支持ipv6，或者支持刷机固件OpenWrt、潘多拉、padavan等</li><li>一般看最新固件支持不支持，不支持就得刷固件</li></ul><blockquote><p><a href="https://zhuanlan.zhihu.com/p/548701083">群晖NAS用IPV6+动态DDNS实现外网连接的经验</a></p></blockquote><ol><li>设置光猫到桥接模式</li><li>路由器拨号上网</li><li>测试IPV6 <a href="http://test-ipv6.com/">test-ipv6.com</a></li><li>解除路由器防火墙限制<ul><li>OpenWrt默认拒绝转发端口</li></ul></li><li>转发端口(一般不转发也行)<ul><li>注意是 lan口内部端口 转发到 wan口外部端口(默认是wan-lan)</li></ul></li></ol><h1 id="域名设置"><a href="#域名设置" class="headerlink" title="域名设置"></a>域名设置</h1><ol><li><p>在dnspod新建一个二级域名</p></li><li><p>记录类型<code>AAAA</code>(如果是ipv4的话是A)</p></li><li><p>记录值为<code>群晖ipv6分配的网址</code></p><ul><li>例如ipV6地址是<code>2409:8b43:311b:b6e0:211:32ff:fe12:3456</code></li><li>在浏览器中输入的格式<code>http://[2409:8b43:311b:b6e0:211:32ff:fe12:3456]:5000/</code></li></ul></li><li><p>申请Dnspod的密钥</p></li></ol><h1 id="群晖"><a href="#群晖" class="headerlink" title="群晖"></a>群晖</h1><ol><li>[控制面板]-[网络]-[网络界面] 设置 ipv6 为自动</li></ol><h1 id="Docker选择"><a href="#Docker选择" class="headerlink" title="Docker选择"></a>Docker选择</h1><blockquote><p><a href="https://post.smzdm.com/p/awkk0r52/">使用IPv6远程访问外网教程</a></p></blockquote><ol><li>套件中心安装docker</li><li>在注册表里搜索<code>ddns-go</code>或者“ddns”选择<code>jessy/ddns</code></li><li>填写申请Dnspod的密钥</li><li>勾选IPV6</li><li>填写自定义的二级域名(可多域名)</li></ol><div style="display:none"><ul><li>(使用IPv6远程访问外网教程)[<a href="https://post.smzdm.com/p/awkk0r52/]">https://post.smzdm.com/p/awkk0r52/]</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Nas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esxi </tag>
            
            <tag> synology </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenWRT</title>
      <link href="/2023/05/31/Hardware/04OpenWRT/"/>
      <url>/2023/05/31/Hardware/04OpenWRT/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenWrt-介绍"><a href="#OpenWrt-介绍" class="headerlink" title="OpenWrt 介绍"></a>OpenWrt 介绍</h1><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="https://openwrt.org/start">https://openwrt.org/start</a></li></ul><h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><h2 id="OpenWrt-管理界面安装中文语言包"><a href="#OpenWrt-管理界面安装中文语言包" class="headerlink" title="OpenWrt 管理界面安装中文语言包"></a>OpenWrt 管理界面安装中文语言包</h2><blockquote><p><a href="https://blog.kobin.cn/blog/network/n2/1538.html">OpenWrt 管理界面安装中文语言包</a></p></blockquote><ol><li>打开 OpenWrt 的管理界面，选择「System」&gt;「Software」。</li><li>选择「Update lists」更新软件列表</li><li>确认更新成功。</li><li>在筛选框中输入「luci-i18n-base-zh-cn」进行查找，接着选择「Install」安装语言包。</li><li>语言包安装成功，刷新页面后界面语言会替换成中文。</li></ol><h2 id="开启硬件Nat"><a href="#开启硬件Nat" class="headerlink" title="开启硬件Nat"></a>开启硬件Nat</h2><blockquote><p><a href="https://www.cnblogs.com/osnosn/p/11597716.html">启用硬件NAT</a></p></blockquote><ol><li>主要针对于千兆带宽用户</li><li>登陆路由器的网页。<ul><li>Network -&gt; Firewall -&gt; General Settings -&gt; Software flow offloading(勾上) -&gt; Hardware flow offloading(勾上) -&gt; Save&amp;Apply(提交)</li><li>路由&#x2F;Nat分载 -&gt; 软件流量分载(勾上才会出现硬件选项) -&gt; 硬件流量分载(勾上)</li></ul></li></ol><h2 id="软件包安装"><a href="#软件包安装" class="headerlink" title="软件包安装"></a>软件包安装</h2><ul><li>一定要安装以<code>luci-app-xxxx</code>开头，才能出现<code>服务选项卡</code></li></ul><h2 id="OpenWrt常用命令"><a href="#OpenWrt常用命令" class="headerlink" title="OpenWrt常用命令"></a>OpenWrt常用命令</h2><blockquote><p><a href="https://www.openwrt.pro/post-621.html">OpenWrt常用命令详解</a></p></blockquote><h1 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><h2 id="LEDE、Lienol-、immortalwrt这几个源码的区别？"><a href="#LEDE、Lienol-、immortalwrt这几个源码的区别？" class="headerlink" title="LEDE、Lienol 、immortalwrt这几个源码的区别？"></a>LEDE、Lienol 、immortalwrt这几个源码的区别？</h2><blockquote><p><a href="https://www.right.com.cn/FORUM/thread-5395229-1-1.html">请教LEDE、Lienol 、immortalwrt这几个源码的区别？</a></p></blockquote><h2 id="OpenWRT-LEDE-前世今生、版本、目录结构"><a href="#OpenWRT-LEDE-前世今生、版本、目录结构" class="headerlink" title="OpenWRT LEDE - 前世今生、版本、目录结构"></a>OpenWRT LEDE - 前世今生、版本、目录结构</h2><blockquote><p><a href="https://lawsssscat.blog.csdn.net/article/details/106740304">OpenWRT LEDE - 前世今生、版本、目录结构</a></p></blockquote><div style="display:none"><p><a href="https://blog.csdn.net/WongSSH/article/details/125194713">OpenWrt中使用SmartDNS加速DNS解析</a></p></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器，软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WDR7500_V3</title>
      <link href="/2023/05/27/Hardware/03TP7500V3/"/>
      <url>/2023/05/27/Hardware/03TP7500V3/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>闲鱼收的一台二手wdr7500 v3路由器，国外版本为Archer C7 v1&#x2F;v1.1&#x2F;v2。</li><li>TL-WDR7500 1.75G 11AC 双频千兆无线路由器提供最高达 1000Mbps 的有线传输速率、1750Mbps 的无线传输速率。</li><li>2.4g[11n：45&#x2F;90&#x2F;135&#x2F;180&#x2F;270&#x2F;360&#x2F;405&#x2F;450Mbps]  5g[11ac：最高可达1.3Gbps]</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="https://www.tp-link.com.cn/product_double_299.html">TL-WDR7500</a></li></ul><h1 id="硬件规格"><a href="#硬件规格" class="headerlink" title="硬件规格"></a>硬件规格</h1><table><thead><tr><th>Model</th><th>Version</th><th>CPU MHz</th><th>Flash MB</th><th>RAM MB</th></tr></thead><tbody><tr><td>Archer C7R WDR7500</td><td>v3.0 (CN)</td><td>720</td><td>8</td><td>128</td></tr></tbody></table><table><thead><tr><th>SoC</th><th>Switch</th><th>WLAN Hardware</th><th>WLAN2.4</th><th>WLAN5.0</th><th>USB</th></tr></thead><tbody><tr><td>Qualcomm Atheros QCA9558</td><td>AR8327N</td><td>Qualcomm Atheros QCA9558, Qualcomm Atheros QCA9880-BR4A</td><td>b&#x2F;g&#x2F;n</td><td>a&#x2F;n&#x2F;ac</td><td>2.0</td></tr></tbody></table><table><thead><tr><th>Flash MB</th><th>RAM</th><th>时钟频率</th></tr></thead><tbody><tr><td>Winbond W25Q64 @ 25MHz (8MB)</td><td>DDR2</td><td>CPU: 720MHz, DDR: 600MHz, AHB: 200MHz, Ref: 40MHz</td></tr></tbody></table><p>​         </p><h1 id="固件速率对比"><a href="#固件速率对比" class="headerlink" title="固件速率对比"></a>固件速率对比</h1><ol><li>Breed 可以刷入 Archer C7 V1固件无法启动</li><li>DDWRT 可以刷入 Archer C7 V1定制固件 启动后显示版本为Archer C7 V2</li></ol><table><thead><tr><th></th><th>内网</th><th>无线5G&#x2F;AC&#x2F;80</th><th>P.S.</th></tr></thead><tbody><tr><td>原厂</td><td>千兆满速</td><td>峰值 75MB&#x2F;S (866Mps握手)</td><td>默认开启硬件NAT</td></tr><tr><td>OpenWrt</td><td>千兆满速</td><td>峰值 35MB&#x2F;S (866Mps握手)</td><td>手动开启硬件NAT</td></tr><tr><td>DDWRT</td><td>千兆满速</td><td>峰值 50MB&#x2F;S (866Mps握手)</td><td>没有NAT设置选项</td></tr><tr><td>X-WRT</td><td>千兆满速</td><td>峰值 35MB&#x2F;S (866Mps握手)</td><td>默认NAT设置选项</td></tr></tbody></table><table><thead><tr><th></th><th>千兆宽带</th><th>版本号</th></tr></thead><tbody><tr><td>原厂</td><td>950Mbps</td><td>2015.04.23</td></tr><tr><td>OpenWrt</td><td>200Mbps&#x2F;400Mbps</td><td>23.3.05</td></tr><tr><td>OpenWrt</td><td>600Mbps&#x2F;700Mbps</td><td>22</td></tr><tr><td>DDWRT</td><td>待测</td><td>没有NAT设置选项</td></tr><tr><td>X-WRT</td><td>500Mbps&#x2F;800Mbps</td><td>默认NAT设置选项</td></tr></tbody></table><h1 id="刷入BREED-不死U-BOOT"><a href="#刷入BREED-不死U-BOOT" class="headerlink" title="刷入BREED(不死U-BOOT)"></a>刷入BREED(不死U-BOOT)</h1><ul><li>主要是看到支持openwrt固件，最近有功夫拆开折腾了一下练练手。</li><li>BREED固件版本<code>breed-qca9558-ar8327n.bin</code></li></ul><h2 id="刷机前准备"><a href="#刷机前准备" class="headerlink" title="刷机前准备"></a>刷机前准备</h2><ol><li>usb转ttl </li><li>排针</li><li>螺丝刀等拆机工具</li><li>Putty </li><li>TFTPD64</li></ol><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><p>设置好lan口为100M双全工，本地连接设置为<code>192.168.1.100</code>，<code>255.255.255.0</code> 其他留空，确认。</p><p>先通电开机检查终端的输出。所有灯点亮的同时可以看到字符出现并滚动。<br>没有字符但是ttl测试正常的，调换tx和rx上线的位置。关闭电源，用网线连接路由器LAN1和电脑网口。<br>通电后出现Autobooting in 1 seconds时在终端输入tpl。<br>如果使用putty，请将tpl复制进剪贴板，然后在对应的时机在窗口里点鼠标右键。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tpl</span><br></pre></td></tr></table></figure><p>使用命令行查看信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printenv</span><br></pre></td></tr></table></figure><p>信息输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">ap135&gt; printenv</span><br><span class="line">bootargs=console=ttyS0,115200 root=31:02 rootfstype=jffs2 init=/sbin/init mtdparts=ath-nor0:256k(u-boot),64k(u-boot-env),6336k(rootfs),1408k(uImage),64k(mib0),64k(ART)</span><br><span class="line">bootcmd=bootm 0x9f020000</span><br><span class="line">bootdelay=1</span><br><span class="line">baudrate=115200</span><br><span class="line">ethaddr=0xba:0xbe:0xfa:0xce:0x08:0x41</span><br><span class="line">ipaddr=192.168.1.111</span><br><span class="line">serverip=192.168.1.100</span><br><span class="line">dir=</span><br><span class="line">lu=tftp 0x80060000 $&#123;dir&#125;u-boot.bin&amp;&amp;erase 0x9f000000 +$filesize&amp;&amp;cp.b $fileaddr 0x9f000000 $filesize</span><br><span class="line">lf=tftp 0x80060000 $&#123;dir&#125;ap135$&#123;bc&#125;-jffs2&amp;&amp;erase 0x9f050000 +0x630000&amp;&amp;cp.b $fileaddr 0x9f050000 $filesize</span><br><span class="line">lk=tftp 0x80060000 $&#123;dir&#125;vmlinux$&#123;bc&#125;.lzma.uImage&amp;&amp;erase 0x9f680000 +$filesize&amp;&amp;cp.b $fileaddr 0x9f680000 $filesize</span><br><span class="line">stdin=serial</span><br><span class="line">stdout=serial</span><br><span class="line">stderr=serial</span><br><span class="line">ethact=eth0</span><br><span class="line"></span><br><span class="line">Environment size: 686/65532 bytes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上传固件，LOADING后面跟着#号为正在上传，如果见到的是T 那就是传输受阻</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tftp 0x80060000 breed.bin</span><br></pre></td></tr></table></figure><p>输入命令行擦写(这个0x16ed0就是刚刚上传的breed具体大小,数字以实际得到值为准)<br>擦写很快，1、2秒搞定。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">erase 0x9f020000 +0x16ed0</span><br><span class="line">erase 0x9f000000 +0x16ed0</span><br></pre></td></tr></table></figure><p>如图则以完成写入breed。 (0x80060000 是刚刚上传breed的起始地址， 0x9f020000 是breed实际要写入的地址，0x16ed0是breed的实际大小)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp.b 0x80060000  0x9f020000 0x16ed0</span><br><span class="line">cp.b 0x80060000  0x9f000000 0x16ed0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bootm 0x9f020000</span><br><span class="line">bootm 0x9f000000</span><br></pre></td></tr></table></figure><p>在BREED中修改MAC地址为路由器自身实际MAC。</p><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">network.ipaddr 192.168.1.3</span><br><span class="line">autoboot.disabled 0</span><br><span class="line">autoboot.delay 5</span><br><span class="line">autoboot.command boot mem 0x9f020000</span><br></pre></td></tr></table></figure><p>字段<code>autoboot.command </code> 值 <code>boot mem 0x9f020000</code>或(后面一项仅供参考)<code>boot flash 0x9f020000</code></p><h2 id="遇到的一些问题"><a href="#遇到的一些问题" class="headerlink" title="遇到的一些问题"></a>遇到的一些问题</h2><ol><li>命令行需要注意空格</li><li>路由器通电后在接入ttl，不然容易路由器无法正常启动</li><li>无限重启 擦除U-BOOT问题</li><li>只能通过tll进管理breed web页面(操作问题，通电后长按复位键5秒)</li><li>复位键，可以进breed web页面 ，无法进入路由器页面 ，分配ip<code>http://169.254.248.28/</code></li><li>只能通过tll 进入breed命令集 autoboot 才能访问web管理页</li><li>breed卡在<code>Starting kernel at 0x80060000...</code>，大概率固件问题</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Uncompressing data (LZMA) ... done.</span><br><span class="line">Flushing cache ... done.</span><br><span class="line"></span><br><span class="line">Starting kernel at 0x80060000...</span><br></pre></td></tr></table></figure><ol start="8"><li>最好自备编程器，备份信息</li><li>IP地址分配不正确比如<code>169.254.248.28</code>，是因为没有进入正确的路由器固件，或者路由器还在启动中。</li></ol><div style="display:none">- [breed命令](https://www.jianshu.com/p/9a367f243c6a)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器，软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Breed不死鸟</title>
      <link href="/2023/05/27/Hardware/02Breed/"/>
      <url>/2023/05/27/Hardware/02Breed/</url>
      
        <content type="html"><![CDATA[<h1 id="Breed介绍"><a href="#Breed介绍" class="headerlink" title="Breed介绍"></a>Breed介绍</h1><p>Breed 是国内个人<a href="https://github.com/hackpascal">hackpascal</a> 开发的闭源 Bootloader，也被称为“不死鸟”</p><p>因为有些官方升级固件自带 bootloader，如果从官方固件升级，会导致现有 bootloader 被覆盖。而当 Breed 更新固件时，它会自动删除固件附带的引导加载程序，因此可以防止 Breed 被覆盖</p><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="https://breed.hackpascal.net/">固件下载</a></li><li><a href="https://www.right.com.cn/forum/thread-161906-1-1.html">AR&#x2F;QCA&#x2F;MTK Breed，功能强大的多线程 Bootloader</a></li></ul><h1 id="进入-Breed-Web-的三种方式"><a href="#进入-Breed-Web-的三种方式" class="headerlink" title="进入 Breed Web 的三种方式"></a>进入 Breed Web 的三种方式</h1><ol><li>通电按复位键 4~5 秒进入</li><li>通过 BreedEnter 进入</li><li>串口 (TTL) 进入</li></ol><h1 id="进入-Breed-命令控制台的方法"><a href="#进入-Breed-命令控制台的方法" class="headerlink" title="进入 Breed 命令控制台的方法"></a>进入 Breed 命令控制台的方法</h1><ol><li>通过串口 (TTL)，在启动提示 Press any key to interrupt autoboot … 时按任意键中断启动即进入 Breed 命令控制台</li><li>通过开机按复位键或 BreedEnter.exe 方法中断 Breed，即可通过 telnet 方法进入 Breed 命令控制台 (CMD 中 telnet 192.168.1.1 即可)端口号22</li><li>请使用 Windows 自带的 telnet 客户端或者 PuTTY，linux 下的 telnet 客户端兼容不好</li></ol><h1 id="Breed特性"><a href="#Breed特性" class="headerlink" title="Breed特性"></a>Breed特性</h1><ul><li>实时刷机进度，进度条能准确反映刷机进度</li><li>Web 页面快速响应</li><li>最大固件备份速度，依 Flash 而定，一般能达到 1MB&#x2F;s</li><li>免按复位键进入 Web 刷机模式</li><li>Telnet 功能，免 TTL 进入 Breed 命令控制台</li><li>复位键定义测试功能</li><li>固件启动失败自动进入 Web 刷机模式</li><li>可自定义位置和大小的环境变量块</li><li>由于是闭源，无法进行二次开发，所有支持的设备均由 hackpascal 一人完成。</li></ul><h1 id="Breed-内置命令介绍"><a href="#Breed-内置命令介绍" class="headerlink" title="Breed 内置命令介绍"></a>Breed 内置命令介绍</h1><p>[abstatus]<br>语法：abstatus<br>作用：显示自动启动被中断的原因</p><p>[arp]<br>语法：arp<br>作用：显示当前 ARP 表</p><p>[boot]<br>语法：boot mem <addr><br>          boot flash [bank <n>] <addr><br>          boot linux <addr><br>          boot raw <addr><br>          boot breed <addr><br>参数：<addr> - 启动地址<br>          <n> - Flash bank 号<br>说明：启动固件。<br>          boot mem 从内存地址启动固件；<br>          boot flash 从 Flash 启动固件，bank 号可选，默认为 0；<br>          boot linux 将 <addr> 视作 Linux 内核入口地址，并启动；<br>          boot raw 禁用中断，并从 <addr> 处执行；<br>          boot breed 将 <addr> 视作上传的 Breed bin 文件地址，并直接启动。</p><p>[btntst]<br>语法：btntst<br>          btntst enable <n><br>          btntst disable <n><br>          btntst restore<br>参数：<n> - GPIO 号<br>说明：测试 GPIO 按钮<br>          btntst enable - 启用对 GPIO#n 的状态检测<br>          btntst disable - 禁用对 GPIO#n 的状态检测<br>          btntst restore - 恢复默认检测设置</p><p>[dhcp]<br>语法：dhcp<br>          dhcp [enable|disable]<br>说明：显示当前的 DHCP 租约<br>          dhcp enable 开启 DHCP 服务<br>          dhcp disable 关闭 DHCP 服务<br>          改动不会保存，重启后恢复默认 DHCP 开启状态</p><p>[env]<br>语法：env<br>          env list<br>          env get <key><br>          env set <key> <value><br>          env unset <key><br>          env clear<br>          env save<br>参数：<br>          <key> 环境变量名<br>          <value> 环境变量数据<br>说明：管理环境变量<br>          必须使用 envconf 启用环境变量后才能使用此命令<br>          修改环境变量后必须保存<br>          env list 列出所有环境变量，显示总空间和空闲空间<br>          env get 获取名称为 <key> 的环境变量的值<br>          env set 设置环境变量 <key> 的值为 <value>，不存在则新建<br>          env unset 删除名称为 <key> 的环境变量及其值<br>          env clear 清除所有环境变量<br>          env save 保存环境变量</p><p>[envconf]<br>语法：envconf<br>          envconf disable<br>          envconf <addr> <size><br>参数：<br>          <addr> 环境变量在 Flash 中的存储位置，起始为 0<br>          <size> 环境变量大小，不能小于 0x100 字节<br>说明：启用或禁用环境变量<br>          envconf disable 禁用环境变量功能<br>          指定 <addr> 和 <size> 则启用环境变量<br>注意：部分型号的 Breed 使用固定的环境变量设置，因此此命令不可用</p><p>[exit]<br>语法：exit<br>说明：退出 telnet 模式</p><p>[flash]<br>语法：flash list<br>          flash [bank <n>] info<br>          flash [bank <n>] dump <addr> <size><br>          flash [bank <n>] read <addr> <dst> <size><br>          flash [bank <n>] erase <addr> <size><br>          flash [bank <n>] write <addr> <src> <size><br>参数：<n> - Flash bank 号<br>           <addr> - Flash 地址<br>           <size> - 读取&#x2F;擦除&#x2F;写入数据大小<br>           <src> - 要写入 Flash 的数据内存地址<br>           <dst> - 要存放读取的 Flash 数据的内存地址<br>说明：flash list 列出所有 Flash<br>          flash info 显示 Flash 的详细信息<br>          flash dump 显示 Flash 内的数据<br>          flash read 将 Flash 内的数据读取到内存<br>          flash erase 擦除 Flash<br>          flash write 将内存数据写入到 Flash</p><p>[gpio]<br>语法：gpio [status|list]<br>          gpio button<br>          gpio led<br>          gpio get <n><br>          gpio set <n> &lt;hi|lo&gt;<br>          gpio dir set <n> &lt;in|out&gt;<br>          gpio led set <name> &lt;on|off&gt;<br>参数： [status] - 列出所有 GPIO 及其状态<br>           <n> - GPIO 号<br>           <hi> <lo> - 高&#x2F;低电平<br>           <in> <out> - GPIO 方向为输入&#x2F;输出<br>           <name> - LED 名称<br>           <on> <off> - LED 亮&#x2F;灭<br>说明：gpio [status|list] 列出所有 GPIO 及其状态<br>           gpio button 显示当前路由上按钮的状态<br>           gpio led 显示当前路由上部分 LED 的状态<br>           gpio get 获取指定 GPIO 的电平状态<br>           gpio set 设置指定 GPIO 的电平状态<br>           gpio dir set 设置指定 GPIO 的方向<br>           gpio led set 设置 LED 的亮灭</p><p>[help]<br>语法：help<br>说明：列出所有可用的命令</p><p>[mem]<br>语法：mem dump [keep] <start_addr> [size]<br>          mem crc32 <addr> <size><br>          mem read [byte|short|long] <addr><br>          mem write [byte|short|long] <addr> <value><br>          mem write str <addr> <str><br>          mem copy <dst> <src> <size><br>          mem fill <dst> <val> <size><br>          mem compare <addr1> <addr2> <size><br>参数：[keep] - 保持原始字节序<br>          <start_addr> <addr> <addr1> <addr2> - 起始地址<br>          <size> [size] - 显示&#x2F;计算的数据大小<br>          [byte] [short] [long] - 指定操作数大小，分别为 1字节、2字节、4字节<br>          <value> - 要写入的值<br>          <str> - 要写入的字符串，支持 C 语言类型的编码<br>说明：mem dump 显示内存数据，可指定要显示的字节数，keep 表示保存原始字节序，否则输出时将转换为 CPU 字节序。<br>          mem crc32 计算内存数据的 CRC32 校验<br>          mem read 读取内存某个地址的数值<br>          mem write 修改内存某个地址的数值<br>          mem write str 将字符串写入某个内存地址<br>          mem copy 复制内存块<br>          mem fill 填充内存块<br>          mem compare 比较内存块</p><p>[mdio]<br>语法：mdio list<br>          mdio <dev> dump <phy><br>          mdio <dev> read <phy> <reg><br>          mdio <dev> write <phy> <reg> <val><br>参数：<dev> - 设备名<br>          <phy> - PHY 号<br>          <reg> - 寄存器<br>          <val> - 数值<br>说明：mdio list 列出网络接口设备<br>          mdio dump 转储指定接口的 MII 寄存器 (0 ~ 31)<br>          mdio read 读取指定接口的 MII 寄存器<br>          mdio write 修改指定接口的 MII 寄存器</p><p>[net]<br>语法：net [start|stop]<br>说明：net start 启动网络服务<br>          net stop 停止网络服务，并关闭所有网络连接</p><p>[netstat]<br>语法：netstat<br>说明：显示当前活动的网络连接</p><p>[reset]<br>语法：reset<br>说明：重启路由</p><p>[setbrg]<br>语法：setbrg <val><br>参数：<val> - 波特率<br>作用：设置 Breed 串口输出的波特率，一直生效</p><p>[spi]<br>语法：spi list<br>          spi [dev <slave>] <op> [<op> [<op> …]]<br>参数：<slave> - SPI 设备名<br>          <op> - 一个操作<br>操作类型：<br>          start          开始一次 SPI 传输，即拉低 CS 电平<br>          stop          结束 SPI 传输，即拉高 CS 电平<br>          read <addr> <size>          读取数据到内存<br>          read display <size>          读取数据并直接显示为十六进制格式<br>          write <addr> <size>          将内存地址中的数据写入<br>          write str <str>          将 <str> 字符串写入<br>          speed <speed_str>           设置 SPI 总线频率。默认单位为 Hz，可以增加后缀k&#x2F;m表示KHz&#x2F;MHz<br>说明：spi list 列出所有 SPI 设备<br>          spi 命令后面可以跟多个操作，如：<br>          spi start write “\x9f” read display 3 stop</p><p>[sysinfo]<br>语法：sysinfo<br>说明：显示系统信息</p><p>[thread]<br>语法：thread<br>说明：列出所有线程信息</p><p>[wget]<br>语法：wget [addr] <url><br>参数：[addr] - 要存放数据的内存地址，可忽略<br>          <url> - 要请求文件数据的 HTTP 链接<br>说明：通过 HTTP 协议加载文件到内存。URL 里只能使用 IP 地址。</p><h1 id="常见问题及回答-Q-A"><a href="#常见问题及回答-Q-A" class="headerlink" title="常见问题及回答 Q&amp;A"></a>常见问题及回答 Q&amp;A</h1><p>Q: 开源吗？<br>A: 不开源。</p><p>Q: 已经刷了 Breed，如果用路由自带的固件升级是否会覆盖掉 Breed？<br>A: 多半会，所以刷了 Breed 之后都建议只在 Breed 里面更新固件。</p><p>Q: 什么时候做 360 C301 支持？<br>A: 现在不做，因为不能很好地支持以前不死 U-Boot 的功能。</p><p>Q: 做 BCM 支持么？<br>A: 不做，因为没有任何资料。</p><p>Q: 路由换了 32M 的闪存，固件无法软重启<br>A: 这是因为 32M 没有一个统一的标准，所以 CPU 本身支持得并不好，需要依靠固件来处理，如果固件处理不好，就会出现这种问题。这是固件造成的。</p><p>Q: 能不能自定义复位键？<br>A: 不能。</p><p>Q: telnet 到 Breed，打一个字符，显示两个字符<br>A: 正常现象，因为 telnet 这块没有很好地兼容 linux。</p><p>Q: Breed 里面能否改 WAN 口位置？<br>A: 不能。即使改了，固件启动后就会变回去。</p><p>Q: 启动 BreedEnter 出现 “无法定位程序输入点 XXXX 于动态链接库 XXXX.dll 上” 的错误<br>A: 请安装 WinPcap 4.1.3&#x2F;或者 Npcap 的 WinPcap 兼容模式。</p><p>Q: MT7620 的 Breed 是否支持外置 PA？<br>A: 支不支持外置 PA 那是固件的事。Breed 只保证能够在有外置 PA 的路由上正常使用。</p><p>Q: 从 U-Boot 刷 Breed 后没有无线<br>A: 请去 Breed 里修改 MAC 地址。</p><p>Q: 能支持 VxWorks 固件吗？<br>A: 不支持任何非 Linux 内核的固件，包括小于2MB 的固件。</p><p>Q: 可以自定义 Breed 的 IP 地址吗？<br>A: 可以，Breed 从 1.1 版开始支持环境变量。具体操作方法请参阅 Breed 更新贴。</p><p>Q: 为什么给 AR 的路由换了双 128M 内存，不能识别出 256M 内存？<br>A: 太贪心，AR 的 CPU 不支持这种组合。自己换回去吧。</p><p>Q: 可以用编程器将 Breed 刷入空白闪存吗？<br>A: 当然可以。</p><p>Q: Ping Breed 的 TTL 值是多少？<br>A: 这个值是不固定的，依据执行 Ping 命令的机器的不同而定。请不要依据 TTL 值来判断是否是处于 Breed 模式。</p><p>Q: 如何升级 Breed &#x2F; 更换为其他的 Bootloader (如原厂 U-Boot)？<br>A: Breed 固件更新页面选择 Bootloader 项刷入即可。</p><p>Q: Breed 会阻止刷入其它的 Bootloader 吗？<br>A: 不会，Breed 是开放的 Bootloader，不会增加任何使用上的限制。</p><div style="display:none"><p><a href="https://www.right.com.cn/forum/thread-161906-1-1.html">BREED官方</a></p></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootloader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DesignPattern设计模式</title>
      <link href="/2023/05/25/DesignPattern/01DesignPattern/"/>
      <url>/2023/05/25/DesignPattern/01DesignPattern/</url>
      
        <content type="html"><![CDATA[<h1 id="设计模式的来源"><a href="#设计模式的来源" class="headerlink" title="设计模式的来源"></a>设计模式的来源</h1><ul><li><p>设计模式（Design Pattern）是前辈们对代码开发经验的总结，是解决特定问题的一系列套路。它不是语法规定，而是一套用来提高代码可复用性、可维护性、可读性、稳健性以及安全性的解决方案。</p></li><li><p>1995 年，GoF（Gang of Four，四人组&#x2F;四人帮）合作出版了《设计模式：可复用面向对象软件的基础》一书，共收录了 23 种设计模式，从此树立了软件设计模式领域的里程碑，人称「GoF设计模式」。</p></li></ul><h1 id="设计模式的类型"><a href="#设计模式的类型" class="headerlink" title="设计模式的类型"></a>设计模式的类型</h1><p>根据设计模式的参考书 <strong>Design Patterns - Elements of Reusable Object-Oriented Software（中文译名：设计模式 - 可复用的面向对象软件元素）</strong> 中所提到的，总共有 23 种设计模式。这些模式可以分为三大类：创建型模式（Creational Patterns）、结构型模式（Structural Patterns）、行为型模式（Behavioral Patterns）。当然，我们还会讨论另一类设计模式：J2EE 设计模式。</p><table><thead><tr><th align="left">序号</th><th align="left">模式 &amp; 描述</th><th align="left">包括</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>创建型模式</strong> 这些设计模式提供了一种在创建对象的同时隐藏创建逻辑的方式，而不是使用 new 运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。</td><td align="left">工厂模式（Factory Pattern）抽象工厂模式（Abstract Factory Pattern）单例模式（Singleton Pattern）建造者模式（Builder Pattern）原型模式（Prototype Pattern）</td></tr><tr><td align="left">2</td><td align="left"><strong>结构型模式</strong> 这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义组合对象获得新功能的方式。</td><td align="left">适配器模式（Adapter Pattern）桥接模式（Bridge Pattern）过滤器模式（Filter、Criteria Pattern）组合模式（Composite Pattern）装饰器模式（Decorator Pattern）外观模式（Facade Pattern）享元模式（Flyweight Pattern）代理模式（Proxy Pattern）</td></tr><tr><td align="left">3</td><td align="left"><strong>行为型模式</strong> 这些设计模式特别关注对象之间的通信。</td><td align="left">责任链模式（Chain of Responsibility Pattern）命令模式（Command Pattern）解释器模式（Interpreter Pattern）迭代器模式（Iterator Pattern）中介者模式（Mediator Pattern）备忘录模式（Memento Pattern）观察者模式（Observer Pattern）状态模式（State Pattern）空对象模式（Null Object Pattern）策略模式（Strategy Pattern）模板模式（Template Pattern）访问者模式（Visitor Pattern）</td></tr><tr><td align="left">4</td><td align="left"><strong>J2EE 模式</strong> 这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。</td><td align="left">MVC 模式（MVC Pattern）业务代表模式（Business Delegate Pattern）组合实体模式（Composite Entity Pattern）数据访问对象模式（Data Access Object Pattern）前端控制器模式（Front Controller Pattern）拦截过滤器模式（Intercepting Filter Pattern）服务定位器模式（Service Locator Pattern）传输对象模式（Transfer Object Pattern）s</td></tr></tbody></table><div style="display:none"><ul><li>(快速记忆23种设计模式)[<a href="https://zhuanlan.zhihu.com/p/128145128]">https://zhuanlan.zhihu.com/p/128145128]</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> DesignPattern </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DesignPattern </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>USB转TTL</title>
      <link href="/2023/05/16/Hardware/01USBToTTL/"/>
      <url>/2023/05/16/Hardware/01USBToTTL/</url>
      
        <content type="html"><![CDATA[<h1 id="USB转TTL、USB转串口、USB转232的区别"><a href="#USB转TTL、USB转串口、USB转232的区别" class="headerlink" title="USB转TTL、USB转串口、USB转232的区别"></a>USB转TTL、USB转串口、USB转232的区别</h1><blockquote><p>引用自 <a href="http://www.taodudu.cc/news/show-4776682.html?action=onClick">USB转TTL、USB转串口、USB转232的区别(转)</a></p></blockquote><ul><li><p>首先，为什么要进行转换？<br>因为单片机通信接口的电平逻辑和PC机通信接口的电平逻辑不同，转换的目的是把电平转换到双方都能识别。</p></li><li><p>有什么不同？<br>PC机上的通信接口有USB接口，相应电平逻辑遵照USB原则。<br>还有DB9接口（九针口），相应电平逻辑遵照RS-232原则。<br>而我们的单片机上的串行通信通过单片机的RXD、TXD、VCC、GND四个引脚，相应电平逻辑遵照TTL原则。</p></li><li><p>为什么学习板是USB接口<br>当然，新手小白买的学习板上肯定都已经集成了类似PL2303、CP2102之类的USB转TTL芯片，相应接口也变成了USB接口；有些学习板上集成的是MAX232之类的TTL转RS-232芯片，相应的接口也变成了DB9接口。</p></li></ul><h1 id="USB转TTL常见芯片"><a href="#USB转TTL常见芯片" class="headerlink" title="USB转TTL常见芯片"></a>USB转TTL常见芯片</h1><h2 id="CH340"><a href="#CH340" class="headerlink" title="CH340"></a>CH340</h2><ul><li>CH340是国产芯片有很多版本后缀</li><li>价格： 芯片本身2-3元(2020)</li><li>优点：价格最便宜，淘宝、拼多多货源多</li><li>缺点：输出乱码的问题很多。</li><li>总结：不推荐使用。比较好的是CH340G。</li></ul><h2 id="PL2303"><a href="#PL2303" class="headerlink" title="PL2303"></a>PL2303</h2><ul><li>PL2303:台湾产</li><li>价格： 芯片本身5元以上(2020)</li><li>优点：价格和 ch340差不多，质量稍好</li><li>缺点：但是需要注意:官方最新驱动可能无法驱动某些芯片，因此如遇到此类情况请使用旧版驱动并关闭系统驱动自动更新(尤其是win系统)。</li><li>总结：由于此芯片赝品较多，如果确实遇到乱码&#x2F;无法输入&#x2F;无法使用等问题请考虑买别家的。据说hxd结尾的可以。</li></ul><h2 id="CP2102"><a href="#CP2102" class="headerlink" title="CP2102"></a>CP2102</h2><ul><li>CP2102:芯科 (Silicon Laboratories)出品，进口</li><li>价格：芯片比PL2303略贵(2020)</li><li>优点：稳定性和兼容性不错。</li><li>缺点：QFN封装</li></ul><h2 id="FT232"><a href="#FT232" class="headerlink" title="FT232"></a>FT232</h2><ul><li>FT232:FTDI出品</li><li>价格：芯片18元左右，成品线50左右(2020)</li><li>优点：稳定性好</li><li>缺点：贵一些</li><li>总结：淘宝较少且价格高。</li></ul><h1 id="USB转TTL常用作用"><a href="#USB转TTL常用作用" class="headerlink" title="USB转TTL常用作用"></a>USB转TTL常用作用</h1><ul><li>单片机</li><li>卫星机顶盒升级</li><li>路由器固件升级</li><li>硬盘固件修复</li><li>游戏机刷机</li><li>盒子固件升级</li><li>手机固件升级</li></ul><div style="display:none">- [USB转TTL、USB转串口、USB转232的区别(转)](http://www.taodudu.cc/news/show-4776682.html?action=onClick)- [USB转TTL几种芯片对比](https://www.bilibili.com/video/BV1S7411G7SN/)https://blog.csdn.net/weixin_39502839/article/details/81268856https://mp.weixin.qq.com/s?__biz=MjM5NDQ0NjM5Mg==&mid=2650524867&idx=5&sn=b0b5730b0b85f185256f982429653eed&chksm=be88c19489ff4882978e97e20c1b6d2954e2002559d11e6819d9251144853991e3b085779171&scene=27</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Amplify Shader Editor</title>
      <link href="/2023/04/20/Unity3D/07Unity_AmplifyShaderEditor/"/>
      <url>/2023/04/20/Unity3D/07Unity_AmplifyShaderEditor/</url>
      
        <content type="html"><![CDATA[<h1 id="Amplify-Shader-Editor简介"><a href="#Amplify-Shader-Editor简介" class="headerlink" title="Amplify Shader Editor简介"></a>Amplify Shader Editor简介</h1><ul><li>Amplify Shader Editor的强大之处在于它允许我们以一个已存在的Shader为基础来创建ASE Shader，这就是俗称的模板。</li><li>模板本质上是一个常规的Shader，不同之处在于一些关键点上有很多ASE的标签。这些标签是作为注释写的，所以他们不会影响着色器编译和它的默认行为。任何Shader都可以转换为模板，如果给定的着色器有多个Pass，那么每个Pass都由它自己的输出节点表示。</li></ul><h1 id="Amplify-Shader-Editor-在线网站"><a href="#Amplify-Shader-Editor-在线网站" class="headerlink" title="Amplify Shader Editor 在线网站"></a>Amplify Shader Editor 在线网站</h1><ul><li>Unity Asset Store 商店资源</li><li><a href="https://assetstore.unity.com/packages/tools/visual-scripting/amplify-shader-editor-68570">https://assetstore.unity.com/packages/tools/visual-scripting/amplify-shader-editor-68570</a></li><li>ASE Manual 百科手册</li><li><a href="http://wiki.amplify.pt/">http://wiki.amplify.pt/</a></li></ul><h1 id="ASE工作原理及优劣"><a href="#ASE工作原理及优劣" class="headerlink" title="ASE工作原理及优劣"></a>ASE工作原理及优劣</h1><ul><li>基于单个静态模板生成 .shader 文件，将节点信息以注释的形式存储于文件末尾</li></ul><h2 id="ASE优势："><a href="#ASE优势：" class="headerlink" title="ASE优势："></a>ASE优势：</h2><ul><li>官方模板可定制性强，可视化界面几乎可以覆盖 URP 的主要功能</li><li>模板修改简单直观，可轻松实现诸如多 pass 功能</li><li>生成明文代码易于调试</li><li>最终文件不需要依赖插件本体</li><li>支持管线差异化计算</li><li>不依赖管线版本</li><li>官方更新频率高</li></ul><h2 id="ASE劣势："><a href="#ASE劣势：" class="headerlink" title="ASE劣势："></a>ASE劣势：</h2><ul><li>修改模板后需要重载节点编辑界面</li><li>切换模板有可能需要重连节点</li><li>原版模板生成的 shader 无法跨管线运行</li><li>HDRP 支持度严重不够</li><li>官方模板对管线特性支持不够标准</li></ul><h1 id="Amplify-Shader-Editor-和-Shader-Graph"><a href="#Amplify-Shader-Editor-和-Shader-Graph" class="headerlink" title="Amplify Shader Editor 和 Shader Graph"></a>Amplify Shader Editor 和 Shader Graph</h1><div style="display:none">- 免费下载- https://devfreedom.club/amplify-shader-editor/- https://zhuanlan.zhihu.com/p/344496133</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> unity-plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Emojy美化Markdown文档</title>
      <link href="/2023/04/15/Markdown/04markdown/"/>
      <url>/2023/04/15/Markdown/04markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="Emojy"><a href="#Emojy" class="headerlink" title="Emojy"></a>Emojy</h2><ul><li>Markdown emoji表情合集(Github)</li><li><a href="https://gist.github.com/rxaviers/7360908">https://gist.github.com/rxaviers/7360908</a></li></ul><h2 id="People"><a href="#People" class="headerlink" title="People"></a>People</h2><table><thead><tr><th><img src="/images/Markdown/EmojyMarkdown/bowtie.png"> <code>:bowtie:</code></th><th>😄 <code>:smile:</code></th><th>😆<code>:laughing:</code></th></tr></thead><tbody><tr><td>😊 <code>:blush:</code></td><td>😃 <code>:smiley:</code></td><td>☺️ <code>:relaxed:</code></td></tr><tr><td>😏 <code>:smirk:</code></td><td>😍 <code>:heart_eyes:</code></td><td>😘 <code>:kissing_heart:</code></td></tr><tr><td>😚 <code>:kissing_closed_eyes:</code></td><td>😳 <code>:flushed:</code></td><td>😌 <code>:relieved:</code></td></tr><tr><td>😆 <code>:satisfied:</code></td><td>😁 <code>:grin:</code></td><td>😉 <code>:wink:</code></td></tr><tr><td>😜 <code>:stuck_out_tongue_winking_eye:</code></td><td>😝 <code>:stuck_out_tongue_closed_eyes:</code></td><td>😀 <code>:grinning:</code></td></tr><tr><td>😗 <code>:kissing:</code></td><td>😙 <code>:kissing_smiling_eyes:</code></td><td>😛 <code>:stuck_out_tongue:</code></td></tr><tr><td>😴 <code>:sleeping:</code></td><td>😟 <code>:worried:</code></td><td>😦 <code>:frowning:</code></td></tr><tr><td>😧 <code>:anguished:</code></td><td>😮 <code>:open_mouth:</code></td><td>😬 <code>:grimacing:</code></td></tr><tr><td>😕 <code>:confused:</code></td><td>😯 <code>:hushed:</code></td><td>😑 <code>:expressionless:</code></td></tr><tr><td>😒 <code>:unamused:</code></td><td>😅 <code>:sweat_smile:</code></td><td>😓 <code>:sweat:</code></td></tr><tr><td>😥 <code>:disappointed_relieved:</code></td><td>😩 <code>:weary:</code></td><td>😔 <code>:pensive:</code></td></tr><tr><td>😞 <code>:disappointed:</code></td><td>😖 <code>:confounded:</code></td><td>😨 <code>:fearful:</code></td></tr><tr><td>😰 <code>:cold_sweat:</code></td><td>😣 <code>:persevere:</code></td><td>😢 <code>:cry:</code></td></tr><tr><td>😭 <code>:sob:</code></td><td>😂 <code>:joy:</code></td><td>😲 <code>:astonished:</code></td></tr><tr><td>😱 <code>:scream:</code></td><td><img src="/images/Markdown/EmojyMarkdown/neckbeard.png" alt=":neckbeard:"> <code>:neckbeard:</code></td><td>😫 <code>:tired_face:</code></td></tr><tr><td>😠 <code>:angry:</code></td><td>😡 <code>:rage:</code></td><td>😤 <code>:triumph:</code></td></tr><tr><td>😪 <code>:sleepy:</code></td><td>😋 <code>:yum:</code></td><td>😷 <code>:mask:</code></td></tr><tr><td>😎 <code>:sunglasses:</code></td><td>😵 <code>:dizzy_face:</code></td><td>👿 <code>:imp:</code></td></tr><tr><td>😈 <code>:smiling_imp:</code></td><td>😐 <code>:neutral_face:</code></td><td>😶 <code>:no_mouth:</code></td></tr><tr><td>😇 <code>:innocent:</code></td><td>👽 <code>:alien:</code></td><td>💛 <code>:yellow_heart:</code></td></tr><tr><td>💙 <code>:blue_heart:</code></td><td>💜 <code>:purple_heart:</code></td><td>❤️ <code>:heart:</code></td></tr><tr><td>💚 <code>:green_heart:</code></td><td>💔 <code>:broken_heart:</code></td><td>💓 <code>:heartbeat:</code></td></tr><tr><td>💗 <code>:heartpulse:</code></td><td>💕 <code>:two_hearts:</code></td><td>💞 <code>:revolving_hearts:</code></td></tr><tr><td>💘 <code>:cupid:</code></td><td>💖 <code>:sparkling_heart:</code></td><td>✨ <code>:sparkles:</code></td></tr><tr><td>⭐ <code>:star:</code></td><td>🌟 <code>:star2:</code></td><td>💫 <code>:dizzy:</code></td></tr><tr><td>💥 <code>:boom:</code></td><td>💥 <code>:collision:</code></td><td>💢 <code>:anger:</code></td></tr><tr><td>❗ <code>:exclamation:</code></td><td>❓ <code>:question:</code></td><td>❕ <code>:grey_exclamation:</code></td></tr><tr><td>❔ <code>:grey_question:</code></td><td>💤 <code>:zzz:</code></td><td>💨 <code>:dash:</code></td></tr><tr><td>💦 <code>:sweat_drops:</code></td><td>🎶 <code>:notes:</code></td><td>🎵 <code>:musical_note:</code></td></tr><tr><td>🔥 <code>:fire:</code></td><td>💩 <code>:hankey:</code></td><td>💩 <code>:poop:</code></td></tr><tr><td>💩 <code>:shit:</code></td><td>👍 <code>:+1:</code></td><td>👍 <code>:thumbsup:</code></td></tr><tr><td>👎 <code>:-1:</code></td><td>👎 <code>:thumbsdown:</code></td><td>👌 <code>:ok_hand:</code></td></tr><tr><td>👊 <code>:punch:</code></td><td>👊 <code>:facepunch:</code></td><td>✊ <code>:fist:</code></td></tr><tr><td>✌️ <code>:v:</code></td><td>👋 <code>:wave:</code></td><td>✋ <code>:hand:</code></td></tr><tr><td>✋ <code>:raised_hand:</code></td><td>👐 <code>:open_hands:</code></td><td>☝️ <code>:point_up:</code></td></tr><tr><td>👇 <code>:point_down:</code></td><td>👈 <code>:point_left:</code></td><td>👉 <code>:point_right:</code></td></tr><tr><td>🙌 <code>:raised_hands:</code></td><td>🙏 <code>:pray:</code></td><td>👆 <code>:point_up_2:</code></td></tr><tr><td>👏 <code>:clap:</code></td><td>💪 <code>:muscle:</code></td><td>🤘 <code>:metal:</code></td></tr><tr><td>🖕 <code>:fu:</code></td><td>🚶 <code>:walking:</code></td><td>🏃 <code>:runner:</code></td></tr><tr><td>🏃 <code>:running:</code></td><td>👫 <code>:couple:</code></td><td>👪 <code>:family:</code></td></tr><tr><td>👬 <code>:two_men_holding_hands:</code></td><td>👭 <code>:two_women_holding_hands:</code></td><td>💃 <code>:dancer:</code></td></tr><tr><td>👯 <code>:dancers:</code></td><td>🙆‍♀️ <code>:ok_woman:</code></td><td>🙅 <code>:no_good:</code></td></tr><tr><td>💁 <code>:information_desk_person:</code></td><td>🙋 <code>:raising_hand:</code></td><td>👰‍♀️ <code>:bride_with_veil:</code></td></tr><tr><td>:person_with_pouting_face: <code>:person_with_pouting_face:</code></td><td>:person_frowning: <code>:person_frowning:</code></td><td>🙇 <code>:bow:</code></td></tr><tr><td>💏 <code>:couplekiss:</code></td><td>💑 <code>:couple_with_heart:</code></td><td>💆 <code>:massage:</code></td></tr><tr><td>💇 <code>:haircut:</code></td><td>💅 <code>:nail_care:</code></td><td>👦 <code>:boy:</code></td></tr><tr><td>👧 <code>:girl:</code></td><td>👩 <code>:woman:</code></td><td>👨 <code>:man:</code></td></tr><tr><td>👶 <code>:baby:</code></td><td>👵 <code>:older_woman:</code></td><td>👴 <code>:older_man:</code></td></tr><tr><td>:person_with_blond_hair: <code>:person_with_blond_hair:</code></td><td>👲 <code>:man_with_gua_pi_mao:</code></td><td>👳‍♂️ <code>:man_with_turban:</code></td></tr><tr><td>👷 <code>:construction_worker:</code></td><td>👮 <code>:cop:</code></td><td>👼 <code>:angel:</code></td></tr><tr><td>👸 <code>:princess:</code></td><td>😺 <code>:smiley_cat:</code></td><td>😸 <code>:smile_cat:</code></td></tr><tr><td>😻 <code>:heart_eyes_cat:</code></td><td>😽 <code>:kissing_cat:</code></td><td>😼 <code>:smirk_cat:</code></td></tr><tr><td>🙀 <code>:scream_cat:</code></td><td>😿 <code>:crying_cat_face:</code></td><td>😹 <code>:joy_cat:</code></td></tr><tr><td>😾 <code>:pouting_cat:</code></td><td>👹 <code>:japanese_ogre:</code></td><td>👺 <code>:japanese_goblin:</code></td></tr><tr><td>🙈 <code>:see_no_evil:</code></td><td>🙉 <code>:hear_no_evil:</code></td><td>🙊 <code>:speak_no_evil:</code></td></tr><tr><td>💂‍♂️ <code>:guardsman:</code></td><td>💀 <code>:skull:</code></td><td>🐾 <code>:feet:</code></td></tr><tr><td>👄 <code>:lips:</code></td><td>💋 <code>:kiss:</code></td><td>💧 <code>:droplet:</code></td></tr><tr><td>👂 <code>:ear:</code></td><td>👀 <code>:eyes:</code></td><td>👃 <code>:nose:</code></td></tr><tr><td>👅 <code>:tongue:</code></td><td>💌 <code>:love_letter:</code></td><td>👤 <code>:bust_in_silhouette:</code></td></tr><tr><td>👥 <code>:busts_in_silhouette:</code></td><td>💬 <code>:speech_balloon:</code></td><td>💭 <code>:thought_balloon:</code></td></tr><tr><td><img src="/images/Markdown/EmojyMarkdown/feelsgood.png" alt=":feelsgood:"> <code>:feelsgood:</code></td><td><img src="/images/Markdown/EmojyMarkdown/finnadie.png" alt=":finnadie:"> <code>:finnadie:</code></td><td><img src="/images/Markdown/EmojyMarkdown/goberserk.png" alt=":goberserk:"> <code>:goberserk:</code></td></tr><tr><td><img src="/images/Markdown/EmojyMarkdown/godmode.png" alt=":godmode:"> <code>:godmode:</code></td><td><img src="/images/Markdown/EmojyMarkdown/hurtrealbad.png" alt=":hurtrealbad:"> <code>:hurtrealbad:</code></td><td><img src="/images/Markdown/EmojyMarkdown/rage1.png" alt=":rage1:"> <code>:rage1:</code></td></tr><tr><td><img src="/images/Markdown/EmojyMarkdown/rage2.png" alt=":rage2:"> <code>:rage2:</code></td><td><img src="/images/Markdown/EmojyMarkdown/rage3.png" alt=":rage3:"> <code>:rage3:</code></td><td><img src="/images/Markdown/EmojyMarkdown/rage4.png" alt=":rage4:"> <code>:rage4:</code></td></tr><tr><td><img src="/images/Markdown/EmojyMarkdown/suspect.png" alt=":suspect:"> <code>:suspect:</code></td><td><img src="/images/Markdown/EmojyMarkdown/trollface.png" alt=":trollface:"> <code>:trollface:</code></td><td></td></tr></tbody></table><h2 id="Nature"><a href="#Nature" class="headerlink" title="Nature"></a>Nature</h2><table><thead><tr><th>☀️ <code>:sunny:</code></th><th>☔ <code>:umbrella:</code></th><th>☁️ <code>:cloud:</code></th></tr></thead><tbody><tr><td>❄️ <code>:snowflake:</code></td><td>⛄ <code>:snowman:</code></td><td>⚡ <code>:zap:</code></td></tr><tr><td>🌀 <code>:cyclone:</code></td><td>🌁 <code>:foggy:</code></td><td>🌊 <code>:ocean:</code></td></tr><tr><td>🐱 <code>:cat:</code></td><td>🐶 <code>:dog:</code></td><td>🐭 <code>:mouse:</code></td></tr><tr><td>🐹 <code>:hamster:</code></td><td>🐰 <code>:rabbit:</code></td><td>🐺 <code>:wolf:</code></td></tr><tr><td>🐸 <code>:frog:</code></td><td>🐯 <code>:tiger:</code></td><td>🐨 <code>:koala:</code></td></tr><tr><td>🐻 <code>:bear:</code></td><td>🐷 <code>:pig:</code></td><td>🐽 <code>:pig_nose:</code></td></tr><tr><td>🐮 <code>:cow:</code></td><td>🐗 <code>:boar:</code></td><td>🐵 <code>:monkey_face:</code></td></tr><tr><td>🐒 <code>:monkey:</code></td><td>🐴 <code>:horse:</code></td><td>🐎 <code>:racehorse:</code></td></tr><tr><td>🐫 <code>:camel:</code></td><td>🐑 <code>:sheep:</code></td><td>🐘 <code>:elephant:</code></td></tr><tr><td>🐼 <code>:panda_face:</code></td><td>🐍 <code>:snake:</code></td><td>🐦 <code>:bird:</code></td></tr><tr><td>🐤 <code>:baby_chick:</code></td><td>🐥 <code>:hatched_chick:</code></td><td>🐣 <code>:hatching_chick:</code></td></tr><tr><td>🐔 <code>:chicken:</code></td><td>🐧 <code>:penguin:</code></td><td>🐢 <code>:turtle:</code></td></tr><tr><td>🐛 <code>:bug:</code></td><td>🐝 <code>:honeybee:</code></td><td>🐜 <code>:ant:</code></td></tr><tr><td>🪲 <code>:beetle:</code></td><td>🐌 <code>:snail:</code></td><td>🐙 <code>:octopus:</code></td></tr><tr><td>🐠 <code>:tropical_fish:</code></td><td>🐟 <code>:fish:</code></td><td>🐳 <code>:whale:</code></td></tr><tr><td>🐋 <code>:whale2:</code></td><td>🐬 <code>:dolphin:</code></td><td>🐄 <code>:cow2:</code></td></tr><tr><td>🐏 <code>:ram:</code></td><td>🐀 <code>:rat:</code></td><td>🐃 <code>:water_buffalo:</code></td></tr><tr><td>🐅 <code>:tiger2:</code></td><td>🐇 <code>:rabbit2:</code></td><td>🐉 <code>:dragon:</code></td></tr><tr><td>🐐 <code>:goat:</code></td><td>🐓 <code>:rooster:</code></td><td>🐕 <code>:dog2:</code></td></tr><tr><td>🐖 <code>:pig2:</code></td><td>🐁 <code>:mouse2:</code></td><td>🐂 <code>:ox:</code></td></tr><tr><td>🐲 <code>:dragon_face:</code></td><td>🐡 <code>:blowfish:</code></td><td>🐊 <code>:crocodile:</code></td></tr><tr><td>🐪 <code>:dromedary_camel:</code></td><td>🐆 <code>:leopard:</code></td><td>🐈 <code>:cat2:</code></td></tr><tr><td>🐩 <code>:poodle:</code></td><td>🐾 <code>:paw_prints:</code></td><td>💐 <code>:bouquet:</code></td></tr><tr><td>🌸 <code>:cherry_blossom:</code></td><td>🌷 <code>:tulip:</code></td><td>🍀 <code>:four_leaf_clover:</code></td></tr><tr><td>🌹 <code>:rose:</code></td><td>🌻 <code>:sunflower:</code></td><td>🌺 <code>:hibiscus:</code></td></tr><tr><td>🍁 <code>:maple_leaf:</code></td><td>🍃 <code>:leaves:</code></td><td>🍂 <code>:fallen_leaf:</code></td></tr><tr><td>🌿 <code>:herb:</code></td><td>🍄 <code>:mushroom:</code></td><td>🌵 <code>:cactus:</code></td></tr><tr><td>🌴 <code>:palm_tree:</code></td><td>🌲 <code>:evergreen_tree:</code></td><td>🌳 <code>:deciduous_tree:</code></td></tr><tr><td>🌰 <code>:chestnut:</code></td><td>🌱 <code>:seedling:</code></td><td>🌼 <code>:blossom:</code></td></tr><tr><td>🌾 <code>:ear_of_rice:</code></td><td>🐚 <code>:shell:</code></td><td>🌐 <code>:globe_with_meridians:</code></td></tr><tr><td>🌞 <code>:sun_with_face:</code></td><td>🌝 <code>:full_moon_with_face:</code></td><td>🌚 <code>:new_moon_with_face:</code></td></tr><tr><td>🌑 <code>:new_moon:</code></td><td>🌒 <code>:waxing_crescent_moon:</code></td><td>🌓 <code>:first_quarter_moon:</code></td></tr><tr><td>🌔 <code>:waxing_gibbous_moon:</code></td><td>🌕 <code>:full_moon:</code></td><td>🌖 <code>:waning_gibbous_moon:</code></td></tr><tr><td>🌗 <code>:last_quarter_moon:</code></td><td>🌘 <code>:waning_crescent_moon:</code></td><td>🌜 <code>:last_quarter_moon_with_face:</code></td></tr><tr><td>🌛 <code>:first_quarter_moon_with_face:</code></td><td>🌔 <code>:moon:</code></td><td>🌍 <code>:earth_africa:</code></td></tr><tr><td>🌎 <code>:earth_americas:</code></td><td>🌏 <code>:earth_asia:</code></td><td>🌋 <code>:volcano:</code></td></tr><tr><td>🌌 <code>:milky_way:</code></td><td>⛅ <code>:partly_sunny:</code></td><td><img src="/images/Markdown/EmojyMarkdown/octocat.png" alt=":octocat:"> <code>:octocat:</code></td></tr><tr><td>:squirrel: <code>:squirrel:</code></td><td></td><td></td></tr></tbody></table><h2 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h2><table><thead><tr><th>🎍 <code>:bamboo:</code></th><th>💝 <code>:gift_heart:</code></th><th>🎎 <code>:dolls:</code></th></tr></thead><tbody><tr><td>🎒 <code>:school_satchel:</code></td><td>🎓 <code>:mortar_board:</code></td><td>🎏 <code>:flags:</code></td></tr><tr><td>🎆 <code>:fireworks:</code></td><td>🎇 <code>:sparkler:</code></td><td>🎐 <code>:wind_chime:</code></td></tr><tr><td>🎑 <code>:rice_scene:</code></td><td>🎃 <code>:jack_o_lantern:</code></td><td>👻 <code>:ghost:</code></td></tr><tr><td>🎅 <code>:santa:</code></td><td>🎄 <code>:christmas_tree:</code></td><td>🎁 <code>:gift:</code></td></tr><tr><td>🔔 <code>:bell:</code></td><td>🔕 <code>:no_bell:</code></td><td>🎋 <code>:tanabata_tree:</code></td></tr><tr><td>🎉 <code>:tada:</code></td><td>🎊 <code>:confetti_ball:</code></td><td>🎈 <code>:balloon:</code></td></tr><tr><td>🔮 <code>:crystal_ball:</code></td><td>💿 <code>:cd:</code></td><td>📀 <code>:dvd:</code></td></tr><tr><td>💾 <code>:floppy_disk:</code></td><td>📷 <code>:camera:</code></td><td>📹 <code>:video_camera:</code></td></tr><tr><td>🎥 <code>:movie_camera:</code></td><td>💻 <code>:computer:</code></td><td>📺 <code>:tv:</code></td></tr><tr><td>📱 <code>:iphone:</code></td><td>☎️ <code>:phone:</code></td><td>☎️ <code>:telephone:</code></td></tr><tr><td>📞 <code>:telephone_receiver:</code></td><td>📟 <code>:pager:</code></td><td>📠 <code>:fax:</code></td></tr><tr><td>💽 <code>:minidisc:</code></td><td>📼 <code>:vhs:</code></td><td>🔉 <code>:sound:</code></td></tr><tr><td>🔈 <code>:speaker:</code></td><td>🔇 <code>:mute:</code></td><td>📢 <code>:loudspeaker:</code></td></tr><tr><td>📣 <code>:mega:</code></td><td>⌛ <code>:hourglass:</code></td><td>⏳ <code>:hourglass_flowing_sand:</code></td></tr><tr><td>⏰ <code>:alarm_clock:</code></td><td>⌚ <code>:watch:</code></td><td>📻 <code>:radio:</code></td></tr><tr><td>📡 <code>:satellite:</code></td><td>➿ <code>:loop:</code></td><td>🔍 <code>:mag:</code></td></tr><tr><td>🔎 <code>:mag_right:</code></td><td>🔓 <code>:unlock:</code></td><td>🔒 <code>:lock:</code></td></tr><tr><td>🔏 <code>:lock_with_ink_pen:</code></td><td>🔐 <code>:closed_lock_with_key:</code></td><td>🔑 <code>:key:</code></td></tr><tr><td>💡 <code>:bulb:</code></td><td>🔦 <code>:flashlight:</code></td><td>🔆 <code>:high_brightness:</code></td></tr><tr><td>🔅 <code>:low_brightness:</code></td><td>🔌 <code>:electric_plug:</code></td><td>🔋 <code>:battery:</code></td></tr><tr><td>📲 <code>:calling:</code></td><td>📧 <code>:email:</code></td><td>📫 <code>:mailbox:</code></td></tr><tr><td>📮 <code>:postbox:</code></td><td>🛀 <code>:bath:</code></td><td>🛁 <code>:bathtub:</code></td></tr><tr><td>🚿 <code>:shower:</code></td><td>🚽 <code>:toilet:</code></td><td>🔧 <code>:wrench:</code></td></tr><tr><td>🔩 <code>:nut_and_bolt:</code></td><td>🔨 <code>:hammer:</code></td><td>💺 <code>:seat:</code></td></tr><tr><td>💰 <code>:moneybag:</code></td><td>💴 <code>:yen:</code></td><td>💵 <code>:dollar:</code></td></tr><tr><td>💷 <code>:pound:</code></td><td>💶 <code>:euro:</code></td><td>💳 <code>:credit_card:</code></td></tr><tr><td>💸 <code>:money_with_wings:</code></td><td>📧 <code>:e-mail:</code></td><td>📥 <code>:inbox_tray:</code></td></tr><tr><td>📤 <code>:outbox_tray:</code></td><td>✉️ <code>:envelope:</code></td><td>📨 <code>:incoming_envelope:</code></td></tr><tr><td>📯 <code>:postal_horn:</code></td><td>📪 <code>:mailbox_closed:</code></td><td>📬 <code>:mailbox_with_mail:</code></td></tr><tr><td>📭 <code>:mailbox_with_no_mail:</code></td><td>🚪 <code>:door:</code></td><td>🚬 <code>:smoking:</code></td></tr><tr><td>💣 <code>:bomb:</code></td><td>🔫 <code>:gun:</code></td><td>🔪 <code>:hocho:</code></td></tr><tr><td>💊 <code>:pill:</code></td><td>💉 <code>:syringe:</code></td><td>📄 <code>:page_facing_up:</code></td></tr><tr><td>📃 <code>:page_with_curl:</code></td><td>📑 <code>:bookmark_tabs:</code></td><td>📊 <code>:bar_chart:</code></td></tr><tr><td>📈 <code>:chart_with_upwards_trend:</code></td><td>📉 <code>:chart_with_downwards_trend:</code></td><td>📜 <code>:scroll:</code></td></tr><tr><td>📋 <code>:clipboard:</code></td><td>📆 <code>:calendar:</code></td><td>📅 <code>:date:</code></td></tr><tr><td>📇 <code>:card_index:</code></td><td>📁 <code>:file_folder:</code></td><td>📂 <code>:open_file_folder:</code></td></tr><tr><td>✂️ <code>:scissors:</code></td><td>📌 <code>:pushpin:</code></td><td>📎 <code>:paperclip:</code></td></tr><tr><td>✒️ <code>:black_nib:</code></td><td>✏️ <code>:pencil2:</code></td><td>📏 <code>:straight_ruler:</code></td></tr><tr><td>📐 <code>:triangular_ruler:</code></td><td>📕 <code>:closed_book:</code></td><td>📗 <code>:green_book:</code></td></tr><tr><td>📘 <code>:blue_book:</code></td><td>📙 <code>:orange_book:</code></td><td>📓 <code>:notebook:</code></td></tr><tr><td>📔 <code>:notebook_with_decorative_cover:</code></td><td>📒 <code>:ledger:</code></td><td>📚 <code>:books:</code></td></tr><tr><td>🔖 <code>:bookmark:</code></td><td>📛 <code>:name_badge:</code></td><td>🔬 <code>:microscope:</code></td></tr><tr><td>🔭 <code>:telescope:</code></td><td>📰 <code>:newspaper:</code></td><td>🏈 <code>:football:</code></td></tr><tr><td>🏀 <code>:basketball:</code></td><td>⚽ <code>:soccer:</code></td><td>⚾ <code>:baseball:</code></td></tr><tr><td>🎾 <code>:tennis:</code></td><td>🎱 <code>:8ball:</code></td><td>🏉 <code>:rugby_football:</code></td></tr><tr><td>🎳 <code>:bowling:</code></td><td>⛳ <code>:golf:</code></td><td>🚵 <code>:mountain_bicyclist:</code></td></tr><tr><td>🚴 <code>:bicyclist:</code></td><td>🏇 <code>:horse_racing:</code></td><td>🏂 <code>:snowboarder:</code></td></tr><tr><td>🏊 <code>:swimmer:</code></td><td>🏄 <code>:surfer:</code></td><td>🎿 <code>:ski:</code></td></tr><tr><td>♠️ <code>:spades:</code></td><td>♥️ <code>:hearts:</code></td><td>♣️ <code>:clubs:</code></td></tr><tr><td>♦️ <code>:diamonds:</code></td><td>💎 <code>:gem:</code></td><td>💍 <code>:ring:</code></td></tr><tr><td>🏆 <code>:trophy:</code></td><td>🎼 <code>:musical_score:</code></td><td>🎹 <code>:musical_keyboard:</code></td></tr><tr><td>🎻 <code>:violin:</code></td><td>👾 <code>:space_invader:</code></td><td>🎮 <code>:video_game:</code></td></tr><tr><td>🃏 <code>:black_joker:</code></td><td>🎴 <code>:flower_playing_cards:</code></td><td>🎲 <code>:game_die:</code></td></tr><tr><td>🎯 <code>:dart:</code></td><td>🀄 <code>:mahjong:</code></td><td>🎬 <code>:clapper:</code></td></tr><tr><td>📝 <code>:memo:</code></td><td>📝 <code>:pencil:</code></td><td>📖 <code>:book:</code></td></tr><tr><td>🎨 <code>:art:</code></td><td>🎤 <code>:microphone:</code></td><td>🎧 <code>:headphones:</code></td></tr><tr><td>🎺 <code>:trumpet:</code></td><td>🎷 <code>:saxophone:</code></td><td>🎸 <code>:guitar:</code></td></tr><tr><td>👞 <code>:shoe:</code></td><td>👡 <code>:sandal:</code></td><td>👠 <code>:high_heel:</code></td></tr><tr><td>💄 <code>:lipstick:</code></td><td>👢 <code>:boot:</code></td><td>👕 <code>:shirt:</code></td></tr><tr><td>👕 <code>:tshirt:</code></td><td>👔 <code>:necktie:</code></td><td>👚 <code>:womans_clothes:</code></td></tr><tr><td>👗 <code>:dress:</code></td><td>🎽 <code>:running_shirt_with_sash:</code></td><td>👖 <code>:jeans:</code></td></tr><tr><td>👘 <code>:kimono:</code></td><td>👙 <code>:bikini:</code></td><td>🎀 <code>:ribbon:</code></td></tr><tr><td>🎩 <code>:tophat:</code></td><td>👑 <code>:crown:</code></td><td>👒 <code>:womans_hat:</code></td></tr><tr><td>👞 <code>:mans_shoe:</code></td><td>🌂 <code>:closed_umbrella:</code></td><td>💼 <code>:briefcase:</code></td></tr><tr><td>👜 <code>:handbag:</code></td><td>👝 <code>:pouch:</code></td><td>👛 <code>:purse:</code></td></tr><tr><td>👓 <code>:eyeglasses:</code></td><td>🎣 <code>:fishing_pole_and_fish:</code></td><td>☕ <code>:coffee:</code></td></tr><tr><td>🍵 <code>:tea:</code></td><td>🍶 <code>:sake:</code></td><td>🍼 <code>:baby_bottle:</code></td></tr><tr><td>🍺 <code>:beer:</code></td><td>🍻 <code>:beers:</code></td><td>🍸 <code>:cocktail:</code></td></tr><tr><td>🍹 <code>:tropical_drink:</code></td><td>🍷 <code>:wine_glass:</code></td><td>🍴 <code>:fork_and_knife:</code></td></tr><tr><td>🍕 <code>:pizza:</code></td><td>🍔 <code>:hamburger:</code></td><td>🍟 <code>:fries:</code></td></tr><tr><td>🍗 <code>:poultry_leg:</code></td><td>🍖 <code>:meat_on_bone:</code></td><td>🍝 <code>:spaghetti:</code></td></tr><tr><td>🍛 <code>:curry:</code></td><td>🍤 <code>:fried_shrimp:</code></td><td>🍱 <code>:bento:</code></td></tr><tr><td>🍣 <code>:sushi:</code></td><td>🍥 <code>:fish_cake:</code></td><td>🍙 <code>:rice_ball:</code></td></tr><tr><td>🍘 <code>:rice_cracker:</code></td><td>🍚 <code>:rice:</code></td><td>🍜 <code>:ramen:</code></td></tr><tr><td>🍲 <code>:stew:</code></td><td>🍢 <code>:oden:</code></td><td>🍡 <code>:dango:</code></td></tr><tr><td>🥚 <code>:egg:</code></td><td>🍞 <code>:bread:</code></td><td>🍩 <code>:doughnut:</code></td></tr><tr><td>🍮 <code>:custard:</code></td><td>🍦 <code>:icecream:</code></td><td>🍨 <code>:ice_cream:</code></td></tr><tr><td>🍧 <code>:shaved_ice:</code></td><td>🎂 <code>:birthday:</code></td><td>🍰 <code>:cake:</code></td></tr><tr><td>🍪 <code>:cookie:</code></td><td>🍫 <code>:chocolate_bar:</code></td><td>🍬 <code>:candy:</code></td></tr><tr><td>🍭 <code>:lollipop:</code></td><td>🍯 <code>:honey_pot:</code></td><td>🍎 <code>:apple:</code></td></tr><tr><td>🍏 <code>:green_apple:</code></td><td>🍊 <code>:tangerine:</code></td><td>🍋 <code>:lemon:</code></td></tr><tr><td>🍒 <code>:cherries:</code></td><td>🍇 <code>:grapes:</code></td><td>🍉 <code>:watermelon:</code></td></tr><tr><td>🍓 <code>:strawberry:</code></td><td>🍑 <code>:peach:</code></td><td>🍈 <code>:melon:</code></td></tr><tr><td>🍌 <code>:banana:</code></td><td>🍐 <code>:pear:</code></td><td>🍍 <code>:pineapple:</code></td></tr><tr><td>🍠 <code>:sweet_potato:</code></td><td>🍆 <code>:eggplant:</code></td><td>🍅 <code>:tomato:</code></td></tr><tr><td>🌽 <code>:corn:</code></td><td></td><td></td></tr></tbody></table><h2 id="Places"><a href="#Places" class="headerlink" title="Places"></a>Places</h2><table><thead><tr><th>🏠 <code>:house:</code></th><th>🏡 <code>:house_with_garden:</code></th><th>🏫 <code>:school:</code></th></tr></thead><tbody><tr><td>🏢 <code>:office:</code></td><td>🏣 <code>:post_office:</code></td><td>🏥 <code>:hospital:</code></td></tr><tr><td>🏦 <code>:bank:</code></td><td>🏪 <code>:convenience_store:</code></td><td>🏩 <code>:love_hotel:</code></td></tr><tr><td>🏨 <code>:hotel:</code></td><td>💒 <code>:wedding:</code></td><td>⛪ <code>:church:</code></td></tr><tr><td>🏬 <code>:department_store:</code></td><td>🏤 <code>:european_post_office:</code></td><td>🌇 <code>:city_sunrise:</code></td></tr><tr><td>🌆 <code>:city_sunset:</code></td><td>🏯 <code>:japanese_castle:</code></td><td>🏰 <code>:european_castle:</code></td></tr><tr><td>⛺ <code>:tent:</code></td><td>🏭 <code>:factory:</code></td><td>🗼 <code>:tokyo_tower:</code></td></tr><tr><td>🗾 <code>:japan:</code></td><td>🗻 <code>:mount_fuji:</code></td><td>🌄 <code>:sunrise_over_mountains:</code></td></tr><tr><td>🌅 <code>:sunrise:</code></td><td>🌠 <code>:stars:</code></td><td>🗽 <code>:statue_of_liberty:</code></td></tr><tr><td>🌉 <code>:bridge_at_night:</code></td><td>🎠 <code>:carousel_horse:</code></td><td>🌈 <code>:rainbow:</code></td></tr><tr><td>🎡 <code>:ferris_wheel:</code></td><td>⛲ <code>:fountain:</code></td><td>🎢 <code>:roller_coaster:</code></td></tr><tr><td>🚢 <code>:ship:</code></td><td>🚤 <code>:speedboat:</code></td><td>⛵ <code>:boat:</code></td></tr><tr><td>⛵ <code>:sailboat:</code></td><td>🚣 <code>:rowboat:</code></td><td>⚓ <code>:anchor:</code></td></tr><tr><td>🚀 <code>:rocket:</code></td><td>✈️ <code>:airplane:</code></td><td>🚁 <code>:helicopter:</code></td></tr><tr><td>🚂 <code>:steam_locomotive:</code></td><td>🚊 <code>:tram:</code></td><td>🚞 <code>:mountain_railway:</code></td></tr><tr><td>🚲 <code>:bike:</code></td><td>🚡 <code>:aerial_tramway:</code></td><td>🚟 <code>:suspension_railway:</code></td></tr><tr><td>🚠 <code>:mountain_cableway:</code></td><td>🚜 <code>:tractor:</code></td><td>🚙 <code>:blue_car:</code></td></tr><tr><td>🚘 <code>:oncoming_automobile:</code></td><td>🚗 <code>:car:</code></td><td>🚗 <code>:red_car:</code></td></tr><tr><td>🚕 <code>:taxi:</code></td><td>🚖 <code>:oncoming_taxi:</code></td><td>🚛 <code>:articulated_lorry:</code></td></tr><tr><td>🚌 <code>:bus:</code></td><td>🚍 <code>:oncoming_bus:</code></td><td>🚨 <code>:rotating_light:</code></td></tr><tr><td>🚓 <code>:police_car:</code></td><td>🚔 <code>:oncoming_police_car:</code></td><td>🚒 <code>:fire_engine:</code></td></tr><tr><td>🚑 <code>:ambulance:</code></td><td>🚐 <code>:minibus:</code></td><td>🚚 <code>:truck:</code></td></tr><tr><td>🚋 <code>:train:</code></td><td>🚉 <code>:station:</code></td><td>🚆 <code>:train2:</code></td></tr><tr><td>🚅 <code>:bullettrain_front:</code></td><td>🚄 <code>:bullettrain_side:</code></td><td>🚈 <code>:light_rail:</code></td></tr><tr><td>🚝 <code>:monorail:</code></td><td>🚃 <code>:railway_car:</code></td><td>🚎 <code>:trolleybus:</code></td></tr><tr><td>🎫 <code>:ticket:</code></td><td>⛽ <code>:fuelpump:</code></td><td>🚦 <code>:vertical_traffic_light:</code></td></tr><tr><td>🚥 <code>:traffic_light:</code></td><td>⚠️ <code>:warning:</code></td><td>🚧 <code>:construction:</code></td></tr><tr><td>🔰 <code>:beginner:</code></td><td>🏧 <code>:atm:</code></td><td>🎰 <code>:slot_machine:</code></td></tr><tr><td>🚏 <code>:busstop:</code></td><td>💈 <code>:barber:</code></td><td>♨️ <code>:hotsprings:</code></td></tr><tr><td>🏁 <code>:checkered_flag:</code></td><td>🎌 <code>:crossed_flags:</code></td><td>🏮 <code>:izakaya_lantern:</code></td></tr><tr><td>🗿 <code>:moyai:</code></td><td>🎪 <code>:circus_tent:</code></td><td>🎭 <code>:performing_arts:</code></td></tr><tr><td>📍 <code>:round_pushpin:</code></td><td>🚩 <code>:triangular_flag_on_post:</code></td><td>🇯🇵 <code>:jp:</code></td></tr><tr><td>🇰🇷 <code>:kr:</code></td><td>🇨🇳 <code>:cn:</code></td><td>🇺🇸 <code>:us:</code></td></tr><tr><td>🇫🇷 <code>:fr:</code></td><td>🇪🇸 <code>:es:</code></td><td>🇮🇹 <code>:it:</code></td></tr><tr><td>🇷🇺 <code>:ru:</code></td><td>🇬🇧 <code>:gb:</code></td><td>🇬🇧 <code>:uk:</code></td></tr><tr><td>🇩🇪 <code>:de:</code></td><td></td><td></td></tr></tbody></table><h2 id="Symbols"><a href="#Symbols" class="headerlink" title="Symbols"></a>Symbols</h2><table><thead><tr><th>1️⃣ <code>:one:</code></th><th>2️⃣ <code>:two:</code></th><th>3️⃣ <code>:three:</code></th></tr></thead><tbody><tr><td>4️⃣ <code>:four:</code></td><td>5️⃣ <code>:five:</code></td><td>6️⃣ <code>:six:</code></td></tr><tr><td>7️⃣ <code>:seven:</code></td><td>8️⃣ <code>:eight:</code></td><td>9️⃣ <code>:nine:</code></td></tr><tr><td>🔟 <code>:keycap_ten:</code></td><td>🔢 <code>:1234:</code></td><td>0️⃣ <code>:zero:</code></td></tr><tr><td>#️⃣ <code>:hash:</code></td><td>🔣 <code>:symbols:</code></td><td>◀️ <code>:arrow_backward:</code></td></tr><tr><td>⬇️ <code>:arrow_down:</code></td><td>▶️ <code>:arrow_forward:</code></td><td>⬅️ <code>:arrow_left:</code></td></tr><tr><td>🔠 <code>:capital_abcd:</code></td><td>🔡 <code>:abcd:</code></td><td>🔤 <code>:abc:</code></td></tr><tr><td>↙️ <code>:arrow_lower_left:</code></td><td>↘️ <code>:arrow_lower_right:</code></td><td>➡️ <code>:arrow_right:</code></td></tr><tr><td>⬆️ <code>:arrow_up:</code></td><td>↖️ <code>:arrow_upper_left:</code></td><td>↗️ <code>:arrow_upper_right:</code></td></tr><tr><td>⏬ <code>:arrow_double_down:</code></td><td>⏫ <code>:arrow_double_up:</code></td><td>🔽 <code>:arrow_down_small:</code></td></tr><tr><td>⤵️ <code>:arrow_heading_down:</code></td><td>⤴️ <code>:arrow_heading_up:</code></td><td>↩️ <code>:leftwards_arrow_with_hook:</code></td></tr><tr><td>↪️ <code>:arrow_right_hook:</code></td><td>↔️ <code>:left_right_arrow:</code></td><td>↕️ <code>:arrow_up_down:</code></td></tr><tr><td>🔼 <code>:arrow_up_small:</code></td><td>🔃 <code>:arrows_clockwise:</code></td><td>🔄 <code>:arrows_counterclockwise:</code></td></tr><tr><td>⏪ <code>:rewind:</code></td><td>⏩ <code>:fast_forward:</code></td><td>ℹ️ <code>:information_source:</code></td></tr><tr><td>🆗 <code>:ok:</code></td><td>🔀 <code>:twisted_rightwards_arrows:</code></td><td>🔁 <code>:repeat:</code></td></tr><tr><td>🔂 <code>:repeat_one:</code></td><td>🆕 <code>:new:</code></td><td>🔝 <code>:top:</code></td></tr><tr><td>🆙 <code>:up:</code></td><td>🆒 <code>:cool:</code></td><td>🆓 <code>:free:</code></td></tr><tr><td>🆖 <code>:ng:</code></td><td>🎦 <code>:cinema:</code></td><td>🈁 <code>:koko:</code></td></tr><tr><td>📶 <code>:signal_strength:</code></td><td>🈹 <code>:u5272:</code></td><td>🈴 <code>:u5408:</code></td></tr><tr><td>🈺 <code>:u55b6:</code></td><td>🈯 <code>:u6307:</code></td><td>🈷️ <code>:u6708:</code></td></tr><tr><td>🈶 <code>:u6709:</code></td><td>🈵 <code>:u6e80:</code></td><td>🈚 <code>:u7121:</code></td></tr><tr><td>🈸 <code>:u7533:</code></td><td>🈳 <code>:u7a7a:</code></td><td>🈲 <code>:u7981:</code></td></tr><tr><td>🈂️ <code>:sa:</code></td><td>🚻 <code>:restroom:</code></td><td>🚹 <code>:mens:</code></td></tr><tr><td>🚺 <code>:womens:</code></td><td>🚼 <code>:baby_symbol:</code></td><td>🚭 <code>:no_smoking:</code></td></tr><tr><td>🅿️ <code>:parking:</code></td><td>♿ <code>:wheelchair:</code></td><td>🚇 <code>:metro:</code></td></tr><tr><td>🛄 <code>:baggage_claim:</code></td><td>🉑 <code>:accept:</code></td><td>🚾 <code>:wc:</code></td></tr><tr><td>🚰 <code>:potable_water:</code></td><td>🚮 <code>:put_litter_in_its_place:</code></td><td>㊙️ <code>:secret:</code></td></tr><tr><td>㊗️ <code>:congratulations:</code></td><td>Ⓜ️ <code>:m:</code></td><td>🛂 <code>:passport_control:</code></td></tr><tr><td>🛅 <code>:left_luggage:</code></td><td>🛃 <code>:customs:</code></td><td>🉐 <code>:ideograph_advantage:</code></td></tr><tr><td>🆑 <code>:cl:</code></td><td>🆘 <code>:sos:</code></td><td>🆔 <code>:id:</code></td></tr><tr><td>🚫 <code>:no_entry_sign:</code></td><td>🔞 <code>:underage:</code></td><td>📵 <code>:no_mobile_phones:</code></td></tr><tr><td>🚯 <code>:do_not_litter:</code></td><td>🚱 <code>:non-potable_water:</code></td><td>🚳 <code>:no_bicycles:</code></td></tr><tr><td>🚷 <code>:no_pedestrians:</code></td><td>🚸 <code>:children_crossing:</code></td><td>⛔ <code>:no_entry:</code></td></tr><tr><td>✳️ <code>:eight_spoked_asterisk:</code></td><td>✴️ <code>:eight_pointed_black_star:</code></td><td>💟 <code>:heart_decoration:</code></td></tr><tr><td>🆚 <code>:vs:</code></td><td>📳 <code>:vibration_mode:</code></td><td>📴 <code>:mobile_phone_off:</code></td></tr><tr><td>💹 <code>:chart:</code></td><td>💱 <code>:currency_exchange:</code></td><td>♈ <code>:aries:</code></td></tr><tr><td>♉ <code>:taurus:</code></td><td>♊ <code>:gemini:</code></td><td>♋ <code>:cancer:</code></td></tr><tr><td>♌ <code>:leo:</code></td><td>♍ <code>:virgo:</code></td><td>♎ <code>:libra:</code></td></tr><tr><td>♏ <code>:scorpius:</code></td><td>♐ <code>:sagittarius:</code></td><td>♑ <code>:capricorn:</code></td></tr><tr><td>♒ <code>:aquarius:</code></td><td>♓ <code>:pisces:</code></td><td>⛎ <code>:ophiuchus:</code></td></tr><tr><td>🔯 <code>:six_pointed_star:</code></td><td>❎ <code>:negative_squared_cross_mark:</code></td><td>🅰️ <code>:a:</code></td></tr><tr><td>🅱️ <code>:b:</code></td><td>🆎 <code>:ab:</code></td><td>🅾️ <code>:o2:</code></td></tr><tr><td>💠 <code>:diamond_shape_with_a_dot_inside:</code></td><td>♻️ <code>:recycle:</code></td><td>🔚 <code>:end:</code></td></tr><tr><td>🔛 <code>:on:</code></td><td>🔜 <code>:soon:</code></td><td>🕐 <code>:clock1:</code></td></tr><tr><td>🕜 <code>:clock130:</code></td><td>🕙 <code>:clock10:</code></td><td>🕥 <code>:clock1030:</code></td></tr><tr><td>🕚 <code>:clock11:</code></td><td>🕦 <code>:clock1130:</code></td><td>🕛 <code>:clock12:</code></td></tr><tr><td>🕧 <code>:clock1230:</code></td><td>🕑 <code>:clock2:</code></td><td>🕝 <code>:clock230:</code></td></tr><tr><td>🕒 <code>:clock3:</code></td><td>🕞 <code>:clock330:</code></td><td>🕓 <code>:clock4:</code></td></tr><tr><td>🕟 <code>:clock430:</code></td><td>🕔 <code>:clock5:</code></td><td>🕠 <code>:clock530:</code></td></tr><tr><td>🕕 <code>:clock6:</code></td><td>🕡 <code>:clock630:</code></td><td>🕖 <code>:clock7:</code></td></tr><tr><td>🕢 <code>:clock730:</code></td><td>🕗 <code>:clock8:</code></td><td>🕣 <code>:clock830:</code></td></tr><tr><td>🕘 <code>:clock9:</code></td><td>🕤 <code>:clock930:</code></td><td>💲 <code>:heavy_dollar_sign:</code></td></tr><tr><td>©️ <code>:copyright:</code></td><td>®️ <code>:registered:</code></td><td>™️ <code>:tm:</code></td></tr><tr><td>❌ <code>:x:</code></td><td>❗ <code>:heavy_exclamation_mark:</code></td><td>‼️ <code>:bangbang:</code></td></tr><tr><td>⁉️ <code>:interrobang:</code></td><td>⭕ <code>:o:</code></td><td>✖️ <code>:heavy_multiplication_x:</code></td></tr><tr><td>➕ <code>:heavy_plus_sign:</code></td><td>➖ <code>:heavy_minus_sign:</code></td><td>➗ <code>:heavy_division_sign:</code></td></tr><tr><td>💮 <code>:white_flower:</code></td><td>💯 <code>:100:</code></td><td>✔️ <code>:heavy_check_mark:</code></td></tr><tr><td>☑️ <code>:ballot_box_with_check:</code></td><td>🔘 <code>:radio_button:</code></td><td>🔗 <code>:link:</code></td></tr><tr><td>➰ <code>:curly_loop:</code></td><td>〰️ <code>:wavy_dash:</code></td><td>〽️ <code>:part_alternation_mark:</code></td></tr><tr><td>🔱 <code>:trident:</code></td><td>:black_square: <code>:black_square:</code></td><td>:white_square: <code>:white_square:</code></td></tr><tr><td>✅ <code>:white_check_mark:</code></td><td>🔲 <code>:black_square_button:</code></td><td>🔳 <code>:white_square_button:</code></td></tr><tr><td>⚫ <code>:black_circle:</code></td><td>⚪ <code>:white_circle:</code></td><td>🔴 <code>:red_circle:</code></td></tr><tr><td>🔵 <code>:large_blue_circle:</code></td><td>🔷 <code>:large_blue_diamond:</code></td><td>🔶 <code>:large_orange_diamond:</code></td></tr><tr><td>🔹 <code>:small_blue_diamond:</code></td><td>🔸 <code>:small_orange_diamond:</code></td><td>🔺 <code>:small_red_triangle:</code></td></tr><tr><td>🔻 <code>:small_red_triangle_down:</code></td><td><img src="/images/Markdown/EmojyMarkdown/shipit.png" alt=":shipit:"> <code>:shipit:</code></td><td></td></tr></tbody></table><div style="display:none"><ul><li><a href="https://zhuanlan.zhihu.com/p/173610322">https://zhuanlan.zhihu.com/p/173610322</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯QQ</title>
      <link href="/2023/04/10/Sofeware/01QQ/"/>
      <url>/2023/04/10/Sofeware/01QQ/</url>
      
        <content type="html"><![CDATA[<h1 id="腾讯QQ"><a href="#腾讯QQ" class="headerlink" title="腾讯QQ"></a>腾讯QQ</h1><ul><li>QQ，是腾讯QQ的简称，是腾讯公司推出的一款基于互联网的即时通信软件。</li><li>QQ以前是模仿ICQ来的，ICQ是国际的一个聊天工具，是<code>I seek you（我寻找你）</code>的意思，OICQ模仿ICQ它在ICQ前加了一个字母O，意为opening I seek you，意思是“开放的ICQ”。但被指出侵权行为，2000年11月腾讯推出QQ2000版本，OICQ正式更名为QQ。</li></ul><h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="QQ图片路径-缓存"><a href="#QQ图片路径-缓存" class="headerlink" title="QQ图片路径(缓存)"></a>QQ图片路径(缓存)</h2><h3 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h3><ol><li>xxx代表Windows用户名xxxxxxxxx代表QQ号</li></ol><ul><li><span style="color:#4185c4;">C:\Users\xxx\Documents\Tencent Files\xxxxxxxxx\Image\C2C</span></li></ul><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ol><li>首先打开手机文件管理器。</li><li>在文件夹浏览模式选择隐藏文件(一般)</li></ol><ul><li>荣耀V20&#x2F;小米&#x2F;红米</li><li><span style="color:#4185c4;">&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;Android&#x2F;data&#x2F;com.tencent.mobileqq&#x2F;Tencent&#x2F;MobileQQ&#x2F;chatpic&#x2F;chatimg</span></li><li><span style="color:#4185c4;">&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;Android&#x2F;data&#x2F;com.tencent.mobileqq&#x2F;Tencent&#x2F;MobileQQ&#x2F;diskcache</span></li></ul><div style="display:none">https://zhidao.baidu.com/question/505966448164071604.html</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Sofeware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sofeware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站工具箱</title>
      <link href="/2023/03/12/AI/01WebTools/"/>
      <url>/2023/03/12/AI/01WebTools/</url>
      
        <content type="html"><![CDATA[<h1 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h1><h1 id="图像处理"><a href="#图像处理" class="headerlink" title="图像处理"></a>图像处理</h1><table><thead><tr><th>网站名称</th><th>网址</th><th>备注</th></tr></thead><tbody><tr><td>Tiny</td><td><a href="https://tinypng.com/">https://tinypng.com/</a></td><td>图片无损压缩WebP&#x2F;PNG&#x2F;JPEG</td></tr><tr><td>waifu2x</td><td><a href="https://waifu2x.udp.jp/">https://waifu2x.udp.jp/</a></td><td>本程序使用卷积神经网络对动漫风格的图片进行放大操作（支持照片）</td></tr></tbody></table><h1 id="虚拟手机号码"><a href="#虚拟手机号码" class="headerlink" title="虚拟手机号码"></a>虚拟手机号码</h1><h2 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h2><table><thead><tr><th>网站名称</th><th>网址</th><th>备注</th></tr></thead><tbody><tr><td>SuperCloud SMS™</td><td>supercloudsms.com</td><td></td></tr><tr><td>SuperCloud SMS™</td><td><a href="http://www.yunduanxin.xyz/">www.yunduanxin.xyz</a></td><td></td></tr><tr><td>SuperCloud SMS™</td><td><a href="http://www.yunjiema.top/">www.yunjiema.top</a></td><td></td></tr></tbody></table><h2 id="国外"><a href="#国外" class="headerlink" title="国外"></a>国外</h2><table><thead><tr><th>网站名称</th><th>网址</th><th>备注</th></tr></thead><tbody><tr><td>SuperCloud SMS™</td><td><a href="http://www.free-sms-receive.com/">www.free-sms-receive.com</a></td><td></td></tr><tr><td>SuperCloud SMS™</td><td>sms-receive-online.com</td><td></td></tr><tr><td>quackr.io</td><td><a href="https://quackr.io/">https://quackr.io/</a></td><td></td></tr></tbody></table><div style="display:none">- [有沒有虚拟手机号码可以接收短信验证码？](https://www.zhihu.com/question/68221729/answer/2662742635)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Notion笔记软件及NotionAI</title>
      <link href="/2023/03/12/AI/02NotionAI/"/>
      <url>/2023/03/12/AI/02NotionAI/</url>
      
        <content type="html"><![CDATA[<h1 id="Notion"><a href="#Notion" class="headerlink" title="Notion"></a>Notion</h1><ul><li>A unified &amp; collaborative workspace for your notes, wikis, and tasks. 将笔记、知识库和任务管理无缝整合的协作平台</li></ul><h1 id="Notion-AI"><a href="#Notion-AI" class="headerlink" title="Notion AI"></a>Notion AI</h1><ul><li>Notion AI提供20次免费试用响应次数，超出后需要购买服务。其付费价格为每人每月10美元，如果按年订购则享有8折优惠。</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="http://www.notion.so/">www.notion.so</a></li><li><a href="http://www.notion.so/product/ai">www.notion.so/product/ai</a></li></ul><h1 id="Notion-AI的使用"><a href="#Notion-AI的使用" class="headerlink" title="Notion AI的使用"></a>Notion AI的使用</h1><ul><li>打开的工具栏，选择星星标志✨ <code>:sparkles:</code></li></ul><div style="display:none">- [notion怎么用Ai？](https://www.bilibili.com/read/cv22189381)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> new bing </tag>
            
            <tag> ai </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT和NewBing申请记录</title>
      <link href="/2023/02/22/AI/01NewBing/"/>
      <url>/2023/02/22/AI/01NewBing/</url>
      
        <content type="html"><![CDATA[<h1 id="ChatGPT和NewBing基本介绍"><a href="#ChatGPT和NewBing基本介绍" class="headerlink" title="ChatGPT和NewBing基本介绍"></a>ChatGPT和NewBing基本介绍</h1><ul><li><p>New Bing基于GPT4模型，并且集成了Edge浏览器的数据资源，功能更加强大。</p></li><li><p>ChatGPT的GPT3.5模型。 <a href="https://beta.openai.com/docs/model-index-for-researchers">GPT3.5文档</a>。</p></li><li><p>ChatGPT：优化对话的语言模型。 <a href="https://openai.com/blog/chatgpt/">OpenAI关于ChatGPT介绍</a>。</p></li></ul><h1 id="加入ChatGPT-OpenAI"><a href="#加入ChatGPT-OpenAI" class="headerlink" title="加入ChatGPT(OpenAI)"></a>加入ChatGPT(OpenAI)</h1><ol><li>解决网络问题</li><li>准备微软&#x2F;谷歌账号</li><li>一个可以接收到短信的电话卡</li></ol><details class="toggle" ><summary class="toggle-button" style="">P.S.</summary><div class="toggle-content"><ul><li>需要能接收到验证码，即非大陆地区的手机号 （OpenAI 的服务在您所在的国家&#x2F;地区不可用。）</li><li>可以使用虚拟手机号&#x2F;购买私人号码 （OpenAI：此电话号码已链接到最大帐户数！！！）</li><li>推荐最好有张新加坡或者日本的电话卡</li><li><a href=""></a></li></ul></div></details><h2 id="OpenAI‘s-services-are-not-available-in-your-country"><a href="#OpenAI‘s-services-are-not-available-in-your-country" class="headerlink" title="OpenAI‘s services are not available in your country"></a>OpenAI‘s services are not available in your country</h2><blockquote><p><a href="https://cloud.tencent.com/developer/article/2190198">解决方案</a></p></blockquote><p>检查–&gt;控制台&#x2F;Console  清除浏览器缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window.localStorage.removeItem(Object.keys(window.localStorage).find(i=&gt;i.startsWith(&#x27;@@auth0spajs&#x27;)))</span><br></pre></td></tr></table></figure><h1 id="加入NewBing的准备"><a href="#加入NewBing的准备" class="headerlink" title="加入NewBing的准备"></a>加入NewBing的准备</h1><ol><li>解决网络问题</li><li>选择一个网络重定向插件(国内会自动重定向到cn)。新必应访问网址：<a href="https://www.bing.com/new">https://www.bing.com/new</a></li><li>有一个活跃的微软账号（经常用bing搜索引擎）</li><li>推荐：新注册一个微软账号（新账号申请的很顺利）</li><li>等待加入候补名单</li></ol><h1 id="加入NewBing流程图文"><a href="#加入NewBing流程图文" class="headerlink" title="加入NewBing流程图文"></a>加入NewBing流程图文</h1><ol><li><p>下载扩展：ModHeader。在Edge或Chrome的扩展商店均可下载，（模拟国外IP访问必应）</p></li><li><p>设置ModHeader扩展</p></li></ol><p><img src="/images/AI/NewBing/24609.png" alt="设置ModHeader扩展" title="设置ModHeader扩展"></p><p>Request headers<br>填写字段一：<code>X-Forwarded-For</code></p><p>填写字段二 IP备选：<br>微软：<code>4.2.2.2</code><br>谷歌：<code>8.8.8.8</code></p><p>Request URL filters<br>填写字段三：<br><code>.*://www.bing.com/.*</code></p><ol start="3"><li><p>访问NewBing，点击加入候补名单。<br><img src="/images/AI/NewBing/22153.png" alt="点击加入候补名单" title="点击加入候补名单"></p></li><li><p>可能报错，如图所示。B站网友分析是：微软奖励积分计划 (Microsoft Rewards)的锅。 参考： <a href="https://www.bilibili.com/video/BV1BM4y1f7na">视频链接</a><br><img src="/images/AI/NewBing/22233.png" alt="报错" title="报错"></p></li><li><p>注册一个微软账号，然后点击加入候补名单，然后如图所示就成功了<br><img src="/images/AI/NewBing/22455.png" alt="成功加入候补名单" title="加入候补名单"></p></li><li><p>注册邮箱会收到邮件，然后就可以等待NewBing的到来。<br><img src="/images/AI/NewBing/22505.jpg" alt="成功加入候补名单的邮件" title="成功加入候补名单的邮件"></p></li></ol><h1 id="更快地访问新必应"><a href="#更快地访问新必应" class="headerlink" title="更快地访问新必应"></a>更快地访问新必应</h1><p>官网解决方案: <a href="https://www.bing.com/new/fastaccess?form=MY0291&OCID=MY0291">更快地访问新必应</a></p><p>省流结论 ： </p><ol><li>微软官方帮你重置一下默认浏览器</li><li>在手机的Google商店上下载一个 微软必应搜索（还是得排队）</li><li>没什么用，还是需要排队等微软审核。</li><li>尽量提高Bing的活跃度吧</li></ol><div style="display:none"></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> new bing </tag>
            
            <tag> ai </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora常用设置指南</title>
      <link href="/2023/02/20/Hexo/23HexoTypora/"/>
      <url>/2023/02/20/Hexo/23HexoTypora/</url>
      
        <content type="html"><![CDATA[<h1 id="图像相关设置"><a href="#图像相关设置" class="headerlink" title="图像相关设置"></a>图像相关设置</h1><ul><li>问题描述：<code>.md</code>中的图片丢失，将文章放到github&#x2F;gitee上，张图片会因为路径错误而无法读取</li><li>解决方案：绝对路径——变成相对路径</li><li>解决方案：网络图片转存为本地图片</li></ul><p><img src="/images/Typora/20230310144845.png" alt="点击偏好设置" title="偏好设置"><br><img src="/images/Typora/20230310144908.png" alt="图像相关设置 " title="图像相关设置 "></p><div style="display:none">- [复制Typora书写笔记中内容（包含图片）到其他地方时 笔记中的图片无法显示的问题（初级解决方法 绝对路径—＞相对路径）](https://blog.csdn.net/qq_45704942/article/details/113705250)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客:HideToggle标签异常加载</title>
      <link href="/2023/02/17/Hexo/22HideToggleX/"/>
      <url>/2023/02/17/Hexo/22HideToggleX/</url>
      
        <content type="html"><![CDATA[<h1 id="HideToggle标签异常加载"><a href="#HideToggle标签异常加载" class="headerlink" title="HideToggle标签异常加载"></a>HideToggle标签异常加载</h1><ol><li><p>问题表现<br><img src="/images/HEXO/HideToggleX/01problem.png" alt="HideToggle标签异常加载" title="HideToggle标签异常加载"></p></li><li><p>正常加载<br><img src="/images/HEXO/HideToggleX/02normal.png" alt="正常加载" title="HideToggle正常加载"></p></li><li><p>对博客进行编译，F12 查看网页控制台，看报错异常</p></li></ol><p><img src="/images/HEXO/HideToggleX/03console.png" alt="控制台错误描述" title="控制台错误描述"></p><h1 id="异常成因猜想"><a href="#异常成因猜想" class="headerlink" title="异常成因猜想"></a>异常成因猜想</h1><ol><li>根据报错异常，猜测是pjax的问题</li><li>npm命令更新插件带来的组件异常（因网络原因）</li><li>HideToggle标签更新带来的异常</li><li>程序的bug</li></ol><h1 id="解决思路与验证"><a href="#解决思路与验证" class="headerlink" title="解决思路与验证"></a>解决思路与验证</h1><h2 id="pjax组件开关进行编译测试"><a href="#pjax组件开关进行编译测试" class="headerlink" title="pjax组件开关进行编译测试"></a>pjax组件开关进行编译测试</h2><ol><li>进行设置</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pjax:</span><br><span class="line">  enable: true  # true改为false</span><br><span class="line">  exclude:</span><br><span class="line">    # - xxxx</span><br><span class="line">    # - xxxx</span><br></pre></td></tr></table></figure><ol start="2"><li>编译结果还是异常，排除</li></ol><h2 id="npm命令更新插件带来的组件异常（因网络原因）"><a href="#npm命令更新插件带来的组件异常（因网络原因）" class="headerlink" title="npm命令更新插件带来的组件异常（因网络原因）"></a>npm命令更新插件带来的组件异常（因网络原因）</h2><ol><li>将npm缓存清除</li><li>更新淘宝镜像源</li><li>重新下载</li><li>编译结果还是异常，排除</li></ol><h2 id="HideToggle标签更新带来的异常"><a href="#HideToggle标签更新带来的异常" class="headerlink" title="HideToggle标签更新带来的异常"></a>HideToggle标签更新带来的异常</h2><ol><li>查看Github issue，无相关问题讨论</li><li>查看更新说明,无特别说明</li><li>删除HideToggle标签，网页显示正常，如果重新加入HideToggle标签则显示异常</li><li>编译结果还是异常，排除</li></ol><h2 id="程序的BUG，重新安装环境测试"><a href="#程序的BUG，重新安装环境测试" class="headerlink" title="程序的BUG，重新安装环境测试"></a>程序的BUG，重新安装环境测试</h2><ol><li>删除本地文件</li><li>重新从Github拉取文件</li><li>重新安装依赖环境</li><li>编译结果还是异常，排除</li></ol><h2 id="灵光一现"><a href="#灵光一现" class="headerlink" title="灵光一现"></a>灵光一现</h2><ol><li>将<code>about</code>目录下内容全删除，复制一份新的，重新修改一遍HideToggle的内容</li><li>令人惊讶的是排版、格式、输入法都是一致的情况下</li><li>编译结果显示正常</li></ol><h1 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h1><ol><li>有些bug真的就是莫名其妙</li><li>排查的时候注意顺序</li><li>缓存异常？Ctrl F5更新也不管用，试试先把某个模块先删了，重置一遍。</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年2月份国产网络游戏审批信息</title>
      <link href="/2023/02/12/News/01GameNews/"/>
      <url>/2023/02/12/News/01GameNews/</url>
      
        <content type="html"><![CDATA[<h1 id="2023年2月份国产网络游戏审批信息"><a href="#2023年2月份国产网络游戏审批信息" class="headerlink" title="2023年2月份国产网络游戏审批信息"></a>2023年2月份国产网络游戏审批信息</h1><p>2023-02-10 发布</p><table><thead><tr><th>序号</th><th>名称</th><th>申报类别</th><th>出版单位</th><th>运营单位</th><th>文号</th><th>出版物号</th><th>时间</th></tr></thead><tbody><tr><td>1</td><td>欢乐美食家</td><td>移动-休闲益智</td><td>广东音像出版社有限公司</td><td>深圳传趣网络技术有限公司</td><td>国新出审〔2023〕210号</td><td>ISBN 978-7-498-10182-2</td><td>2023年02月10日</td></tr><tr><td>2</td><td>小兵大作战</td><td>移动</td><td>方圆电子音像出版社有限责任公司</td><td>海南旭游科技有限公司</td><td>国新出审〔2023〕209号</td><td>ISBN 978-7-498-10181-5</td><td>2023年02月10日</td></tr><tr><td>3</td><td>九牧之野</td><td>移动</td><td>海南省电子音像出版社有限公司</td><td>海南灵游网络科技有限公司</td><td>国新出审〔2023〕208号</td><td>ISBN 978-7-498-10180-8</td><td>2023年02月10日</td></tr><tr><td>4</td><td>葫芦娃大作战</td><td>移动</td><td>黑龙江龙华数字出版股份有限公司</td><td>深圳市大梦龙途文化传播有限公司</td><td>国新出审〔2023〕207号</td><td>ISBN 978-7-498-10179-2</td><td>2023年02月10日</td></tr><tr><td>5</td><td>魔典秘闻</td><td>移动</td><td>四川数字出版传媒有限公司</td><td>深圳市凉屋游戏科技有限公司</td><td>国新出审〔2023〕206号</td><td>ISBN 978-7-498-10178-5</td><td>2023年02月10日</td></tr><tr><td>6</td><td>棋兵斗阵</td><td>移动</td><td>方圆电子音像出版社有限责任公司</td><td>深圳市游帆互动科技有限公司</td><td>国新出审〔2023〕204号</td><td>ISBN 978-7-498-10177-8</td><td>2023年02月10日</td></tr><tr><td>7</td><td>盟主大作战</td><td>移动</td><td>广州谷得网络科技有限公司</td><td>北京比特漫步科技有限公司</td><td>国新出审〔2023〕203号</td><td>ISBN 978-7-498-10176-1</td><td>2023年02月10日</td></tr><tr><td>8</td><td>银河境界线</td><td>移动</td><td>宁波东海岸电子音像出版社有限公司</td><td>上海掌致信息科技有限公司</td><td>国新出审〔2023〕202号</td><td>ISBN 978-7-498-10175-4</td><td>2023年02月10日</td></tr><tr><td>9</td><td>街篮</td><td>客户端</td><td>北京目标在线科技有限公司</td><td>北京目标在线科技有限公司</td><td>国新出审〔2023〕201号</td><td>ISBN 978-7-498-10174-7</td><td>2023年02月10日</td></tr><tr><td>10</td><td>封神幻想世界</td><td>移动</td><td>厦门雷霆互动网络有限公司</td><td>深圳雷霆信息技术有限公司</td><td>国新出审〔2023〕198号</td><td>ISBN 978-7-498-10173-0</td><td>2023年02月10日</td></tr><tr><td>11</td><td>英雄之冠</td><td>移动</td><td>深圳中青宝互动网络股份有限公司</td><td>深圳市苏摩科技有限公司</td><td>国新出审〔2023〕197号</td><td>ISBN 978-7-498-10172-3</td><td>2023年02月10日</td></tr><tr><td>12</td><td>荒古与魔法</td><td>移动</td><td>上海商国网络科技发展有限公司</td><td>上海云履网络科技有限公司</td><td>国新出审〔2023〕196号</td><td>ISBN 978-7-498-10171-6</td><td>2023年02月10日</td></tr><tr><td>13</td><td>奇幻部落</td><td>移动</td><td>湖北省扬子江影音有限责任公司</td><td>海南新游网络科技有限公司</td><td>国新出审〔2023〕195号</td><td>ISBN 978-7-498-10170-9</td><td>2023年02月10日</td></tr><tr><td>14</td><td>圣塔纪元</td><td>移动</td><td>成都盈众九州网络科技有限公司</td><td>成都奇迹世界科技有限公司</td><td>国新出审〔2023〕194号</td><td>ISBN 978-7-498-10169-3</td><td>2023年02月10日</td></tr><tr><td>15</td><td>召唤师盛典</td><td>移动</td><td>成都盈众九州网络科技有限公司</td><td>海南舜杰网络科技有限公司</td><td>国新出审〔2023〕192号</td><td>ISBN 978-7-498-10168-6</td><td>2023年02月10日</td></tr><tr><td>16</td><td>冲啊原始人</td><td>移动</td><td>天津电子出版社有限公司</td><td>波克斯（北京）科技有限公司</td><td>国新出审〔2023〕191号</td><td>ISBN 978-7-498-10167-9</td><td>2023年02月10日</td></tr><tr><td>17</td><td>中国台球</td><td>移动-休闲益智</td><td>辽宁电子出版社有限责任公司</td><td>北京智胜万合台球文化发展有限公司</td><td>国新出审〔2023〕141号</td><td>ISBN 978-7-498-10166-2</td><td>2023年02月10日</td></tr><tr><td>18</td><td>尘星之息</td><td>移动</td><td>重庆聚购科技发展有限公司</td><td>重庆环游者网络科技有限公司</td><td>国新出审〔2023〕190号</td><td>ISBN 978-7-498-10165-5</td><td>2023年02月10日</td></tr><tr><td>19</td><td>洪荒传说</td><td>移动</td><td>安徽新华电子音像出版社</td><td>芜湖光联文化传媒有限公司</td><td>国新出审〔2023〕189号</td><td>ISBN 978-7-498-10164-8</td><td>2023年02月10日</td></tr><tr><td>20</td><td>三国小将</td><td>移动</td><td>上海双盟网络科技有限公司</td><td>上海双盟网络科技有限公司</td><td>国新出审〔2023〕188号</td><td>ISBN 978-7-498-10163-1</td><td>2023年02月10日</td></tr><tr><td>21</td><td>山海记</td><td>移动</td><td>杭州渡口网络科技有限公司</td><td>杭州有欧气网络科技有限公司</td><td>国新出审〔2023〕187号</td><td>ISBN 978-7-498-10162-4</td><td>2023年02月10日</td></tr><tr><td>22</td><td>这城有良田</td><td>移动</td><td>广东海燕电子音像出版社有限公司</td><td>益世界网络科技（广东）有限公司</td><td>国新出审〔2023〕186号</td><td>ISBN 978-7-498-10161-7</td><td>2023年02月10日</td></tr><tr><td>23</td><td>深渊之下</td><td>移动</td><td>江苏凤凰数字传媒有限公司</td><td>杭州祈点信息技术有限责任公司</td><td>国新出审〔2023〕185号</td><td>ISBN 978-7-498-10160-0</td><td>2023年02月10日</td></tr><tr><td>24</td><td>时序残响</td><td>移动</td><td>广州百田信息科技有限公司</td><td>广州天梯网络科技有限公司</td><td>国新出审〔2023〕184号</td><td>ISBN 978-7-498-10159-4</td><td>2023年02月10日</td></tr><tr><td>25</td><td>离火之境</td><td>移动</td><td>天津电子出版社有限公司</td><td>海南离火网络有限公司</td><td>国新出审〔2023〕183号</td><td>ISBN 978-7-498-10158-7</td><td>2023年02月10日</td></tr><tr><td>26</td><td>神魂契约</td><td>移动</td><td>杭州润趣科技有限公司</td><td>深圳闲时游戏有限公司</td><td>国新出审〔2023〕181号</td><td>ISBN 978-7-498-10157-0</td><td>2023年02月10日</td></tr><tr><td>27</td><td>九州英杰录</td><td>客户端</td><td>上海方寸信息科技有限公司</td><td>上海都萌网络科技有限公司</td><td>国新出审〔2023〕180号</td><td>ISBN 978-7-498-10156-3</td><td>2023年02月10日</td></tr><tr><td>28</td><td>向往的生活</td><td>移动</td><td>湖南快乐芒果互娱科技有限公司</td><td>湖南快乐芒果互娱科技有限公司</td><td>国新出审〔2023〕179号</td><td>ISBN 978-7-498-10155-6</td><td>2023年02月10日</td></tr><tr><td>29</td><td>重启：黎明之所</td><td>移动</td><td>安徽新华电子音像出版社</td><td>广州火羽信息科技有限公司</td><td>国新出审〔2023〕177号</td><td>ISBN 978-7-498-10154-9</td><td>2023年02月10日</td></tr><tr><td>30</td><td>狩游世界·起源</td><td>移动</td><td>河北冠林数字出版有限公司</td><td>深圳市狩游网络科技有限公司</td><td>国新出审〔2023〕176号</td><td>ISBN 978-7-498-10153-2</td><td>2023年02月10日</td></tr><tr><td>31</td><td>动物星球</td><td>客户端</td><td>北京光宇在线科技有限责任公司</td><td>北京光宇在线科技有限责任公司</td><td>国新出审〔2023〕175号</td><td>ISBN 978-7-498-10152-5</td><td>2023年02月10日</td></tr><tr><td>32</td><td>王者万象棋</td><td>移动</td><td>重庆天健电子音像出版有限公司</td><td>重庆市腾讯计算机系统有限公司</td><td>国新出审〔2023〕174号</td><td>ISBN 978-7-498-10151-8</td><td>2023年02月10日</td></tr><tr><td>33</td><td>指尖征战</td><td>移动</td><td>杭州美盛游戏技术开发有限公司</td><td>四川水果互动科技有限公司</td><td>国新出审〔2023〕173号</td><td>ISBN 978-7-498-10150-1</td><td>2023年02月10日</td></tr><tr><td>34</td><td>圣光战纪</td><td>移动</td><td>浙江出版集团数字传媒有限公司</td><td>绍兴方趣网络科技有限公司</td><td>国新出审〔2023〕171号</td><td>ISBN 978-7-498-10149-5</td><td>2023年02月10日</td></tr><tr><td>35</td><td>原始奇兵</td><td>移动</td><td>广州四三九九信息科技有限公司</td><td>广州四三九九信息科技有限公司</td><td>国新出审〔2023〕170号</td><td>ISBN 978-7-498-10148-8</td><td>2023年02月10日</td></tr><tr><td>36</td><td>动脑风暴挑战</td><td>移动-休闲益智</td><td>吉林音像出版社有限责任公司</td><td>北京掌上易游科技有限公司</td><td>国新出审〔2023〕160号</td><td>ISBN 978-7-498-10147-1</td><td>2023年02月10日</td></tr><tr><td>37</td><td>战梦时空</td><td>移动</td><td>成都超级梦网络技术股份有限公司</td><td>上海雨玩网络科技有限公司</td><td>国新出审〔2023〕169号</td><td>ISBN 978-7-498-10146-4</td><td>2023年02月10日</td></tr><tr><td>38</td><td>捉妖小队</td><td>移动</td><td>杭州群游科技有限公司</td><td>福州易酷网络科技有限公司</td><td>国新出审〔2023〕168号</td><td>ISBN 978-7-498-10145-7</td><td>2023年02月10日</td></tr><tr><td>39</td><td>逆袭的仙王</td><td>移动</td><td>成都超级梦网络技术股份有限公司</td><td>海南元辉网络科技有限公司</td><td>国新出审〔2023〕167号</td><td>ISBN 978-7-498-10144-0</td><td>2023年02月10日</td></tr><tr><td>40</td><td>弈战国</td><td>移动</td><td>北京联合出版有限责任公司</td><td>北京掌印互动科技有限公司</td><td>国新出审〔2023〕165号</td><td>ISBN 978-7-498-10143-3</td><td>2023年02月10日</td></tr><tr><td>41</td><td>动物星友会</td><td>移动</td><td>湖北省扬子江影音有限责任公司</td><td>海南云趣网络科技有限公司</td><td>国新出审〔2023〕164号</td><td>ISBN 978-7-498-10142-6</td><td>2023年02月10日</td></tr><tr><td>42</td><td>超能力套环</td><td>移动-休闲益智</td><td>华中科技大学电子音像出版社</td><td>南京原极信息科技有限公司</td><td>国新出审〔2023〕166号</td><td>ISBN 978-7-498-10141-9</td><td>2023年02月10日</td></tr><tr><td>43</td><td>蛮荒冲突</td><td>移动</td><td>杭州群游科技有限公司</td><td>万界（上海）网络股份有限公司</td><td>国新出审〔2023〕163号</td><td>ISBN 978-7-498-10140-2</td><td>2023年02月10日</td></tr><tr><td>44</td><td>城主天下</td><td>移动</td><td>杭州润趣科技有限公司</td><td>海南臻友网络科技有限公司</td><td>国新出审〔2023〕162号</td><td>ISBN 978-7-498-10139-6</td><td>2023年02月10日</td></tr><tr><td>45</td><td>动物防线</td><td>移动</td><td>杭州烈焰网络技术有限公司</td><td>上海灵刃网络科技有限公司</td><td>国新出审〔2023〕161号</td><td>ISBN 978-7-498-10138-9</td><td>2023年02月10日</td></tr><tr><td>46</td><td>驯龙之旅</td><td>移动</td><td>上海同济大学电子音像出版社有限公司</td><td>上海歆瑷网络科技有限公司</td><td>国新出审〔2023〕159号</td><td>ISBN 978-7-498-10137-2</td><td>2023年02月10日</td></tr><tr><td>47</td><td>龙域争霸</td><td>移动</td><td>上海科学技术文献出版社有限公司</td><td>上海常游网络科技有限公司</td><td>国新出审〔2023〕158号</td><td>ISBN 978-7-498-10136-5</td><td>2023年02月10日</td></tr><tr><td>48</td><td>秘境消除故事</td><td>移动-休闲益智</td><td>广州盈正信息技术有限公司</td><td>合肥乐攸信息科技有限公司</td><td>国新出审〔2023〕172号</td><td>ISBN 978-7-498-10135-8</td><td>2023年02月10日</td></tr><tr><td>49</td><td>卡噗拉契约</td><td>移动</td><td>杭州电魂网络科技股份有限公司</td><td>杭州电魂网络科技股份有限公司</td><td>国新出审〔2023〕157号</td><td>ISBN 978-7-498-10134-1</td><td>2023年02月10日</td></tr><tr><td>50</td><td>神奇生物学</td><td>移动</td><td>上海众源网络有限公司</td><td>上海众源网络有限公司</td><td>国新出审〔2023〕156号</td><td>ISBN 978-7-498-10133-4</td><td>2023年02月10日</td></tr><tr><td>51</td><td>墨影侠踪</td><td>客户端</td><td>江苏凤凰电子音像出版社有限公司</td><td>南京市玩趣互动科技有限公司</td><td>国新出审〔2023〕155号</td><td>ISBN 978-7-498-10132-7</td><td>2023年02月10日</td></tr><tr><td>52</td><td>狩猎吧！原始人</td><td>移动</td><td>北京目标在线科技有限公司</td><td>北京微游互动网络科技有限公司</td><td>国新出审〔2023〕154号</td><td>ISBN 978-7-498-10131-0</td><td>2023年02月10日</td></tr><tr><td>53</td><td>龙与魔法城</td><td>移动</td><td>深圳中青宝互动网络股份有限公司</td><td>广州互娱网络科技有限公司</td><td>国新出审〔2023〕153号</td><td>ISBN 978-7-498-10130-3</td><td>2023年02月10日</td></tr><tr><td>54</td><td>奔月的糯米团</td><td>移动-休闲益智</td><td>杭州乐港科技有限公司</td><td>宿州手游互联信息技术有限公司</td><td>国新出审〔2023〕178号</td><td>ISBN 978-7-498-10129-7</td><td>2023年02月10日</td></tr><tr><td>55</td><td>新天龙八部</td><td>移动</td><td>北京畅游时代数码技术有限公司</td><td>北京卓意麦斯科技有限公司</td><td>国新出审〔2023〕152号</td><td>ISBN 978-7-498-10128-0</td><td>2023年02月10日</td></tr><tr><td>56</td><td>万世镜</td><td>移动</td><td>山东科学技术出版社有限公司</td><td>深圳市畅玩网络科技有限公司</td><td>国新出审〔2023〕151号</td><td>ISBN 978-7-498-10127-3</td><td>2023年02月10日</td></tr><tr><td>57</td><td>边境传说</td><td>移动</td><td>杭州紫府网络科技有限公司</td><td>南京迈乐游信息技术有限公司</td><td>国新出审〔2023〕150号</td><td>ISBN 978-7-498-10126-6</td><td>2023年02月10日</td></tr><tr><td>58</td><td>努力走出去</td><td>移动-休闲益智</td><td>杭州乐港科技有限公司</td><td>北京乐杰轮科技有限公司</td><td>国新出审〔2023〕182号</td><td>ISBN 978-7-498-10125-9</td><td>2023年02月10日</td></tr><tr><td>59</td><td>春秋玄奇</td><td>移动</td><td>广州市动景计算机科技有限公司</td><td>广州灵犀互动娱乐有限公司</td><td>国新出审〔2023〕149号</td><td>ISBN 978-7-498-10124-2</td><td>2023年02月10日</td></tr><tr><td>60</td><td>七千兆亿的星空</td><td>移动</td><td>上海科学技术文献出版社有限公司</td><td>上海盛展网络科技有限公司</td><td>国新出审〔2023〕148号</td><td>ISBN 978-7-498-10123-5</td><td>2023年02月10日</td></tr><tr><td>61</td><td>时间之钥</td><td>移动</td><td>黑龙江科学技术出版社有限公司</td><td>成都心游良品科技有限公司</td><td>国新出审〔2023〕147号</td><td>ISBN 978-7-498-10122-8</td><td>2023年02月10日</td></tr><tr><td>62</td><td>一花织境</td><td>移动</td><td>上海同济大学电子音像出版社有限公司</td><td>上海玄星网络科技有限公司</td><td>国新出审〔2023〕146号</td><td>ISBN 978-7-498-10121-1</td><td>2023年02月10日</td></tr><tr><td>63</td><td>虚空战争</td><td>移动</td><td>上海电子出版有限公司</td><td>上海沪首网络科技有限公司</td><td>国新出审〔2023〕145号</td><td>ISBN 978-7-498-10120-4</td><td>2023年02月10日</td></tr><tr><td>64</td><td>森友突击队</td><td>移动</td><td>咪咕互动娱乐有限公司</td><td>咪咕文化科技有限公司</td><td>国新出审〔2023〕144号</td><td>ISBN 978-7-498-10119-8</td><td>2023年02月10日</td></tr><tr><td>65</td><td>小镇冒险家</td><td>移动</td><td>海南省电子音像出版社有限公司</td><td>海南高图网络科技有限公司</td><td>国新出审〔2023〕143号</td><td>ISBN 978-7-498-10118-1</td><td>2023年02月10日</td></tr><tr><td>66</td><td>天使之歌</td><td>移动</td><td>辽宁电子出版社有限责任公司</td><td>中传互动（湖北）信息技术有限公司</td><td>国新出审〔2023〕142号</td><td>ISBN 978-7-498-10117-4</td><td>2023年02月10日</td></tr><tr><td>67</td><td>快到碗里来</td><td>游戏机-Switch</td><td>上海电子出版有限公司</td><td>上海盛齐信息技术有限公司</td><td>国新出审〔2023〕140号</td><td>ISBN 978-7-498-10116-7</td><td>2023年02月10日</td></tr><tr><td>68</td><td>龙魂：学院奇闻</td><td>客户端</td><td>江苏凤凰数字传媒有限公司</td><td>烽火连城（北京）科技有限公司</td><td>国新出审〔2023〕139号</td><td>ISBN 978-7-498-10115-0</td><td>2023年02月10日</td></tr><tr><td>69</td><td>模拟水族箱</td><td>移动-休闲益智</td><td>合肥乐堂动漫信息技术有限公司</td><td>合肥乐堂动漫信息技术有限公司</td><td>国新出审〔2023〕193号</td><td>ISBN 978-7-498-10114-3</td><td>2023年02月10日</td></tr><tr><td>70</td><td>星之觉醒</td><td>移动</td><td>华东师范大学电子音像出版社有限公司</td><td>上海敢客网络科技有限公司</td><td>国新出审〔2023〕138号</td><td>ISBN 978-7-498-10113-6</td><td>2023年02月10日</td></tr><tr><td>71</td><td>史莱姆与地下城</td><td>移动</td><td>杭州紫府网络科技有限公司</td><td>海南龙晴游戏科技有限公司</td><td>国新出审〔2023〕137号</td><td>ISBN 978-7-498-10112-9</td><td>2023年02月10日</td></tr><tr><td>72</td><td>梦蝶</td><td>移动-休闲益智</td><td>广州盈正信息技术有限公司</td><td>海南星嘉科技有限公司</td><td>国新出审〔2023〕136号</td><td>ISBN 978-7-498-10111-2</td><td>2023年02月10日</td></tr><tr><td>73</td><td>超链勇者之诗</td><td>移动</td><td>杭州美盛游戏技术开发有限公司</td><td>深圳顺源网络科技有限公司</td><td>国新出审〔2023〕135号</td><td>ISBN 978-7-498-10110-5</td><td>2023年02月10日</td></tr><tr><td>74</td><td>战道</td><td>移动</td><td>上海商国网络科技发展有限公司</td><td>上海曲蔺网络科技有限公司</td><td>国新出审〔2023〕134号</td><td>ISBN 978-7-498-10109-9</td><td>2023年02月10日</td></tr><tr><td>75</td><td>梦幻西游：时空</td><td>客户端</td><td>广州网易计算机系统有限公司</td><td>杭州网易雷火科技有限公司</td><td>国新出审〔2023〕199号</td><td>ISBN 978-7-498-10108-2</td><td>2023年02月10日</td></tr><tr><td>76</td><td>趣味动脑大冒险</td><td>移动-休闲益智</td><td>浙江文艺音像出版社有限公司</td><td>北京光耀大地科技有限公司</td><td>国新出审〔2023〕200号</td><td>ISBN 978-7-498-10107-5</td><td>2023年02月10日</td></tr><tr><td>77</td><td>浮生忆玲珑</td><td>移动</td><td>江苏凤凰电子音像出版社有限公司</td><td>苏州沁游网络科技有限公司</td><td>国新出审〔2023〕133号</td><td>ISBN 978-7-498-10106-8</td><td>2023年02月10日</td></tr><tr><td>78</td><td>新不良人</td><td>移动</td><td>宁波东海岸电子音像出版社有限公司</td><td>海南侠义文化科技有限公司</td><td>国新出审〔2023〕132号</td><td>ISBN 978-7-498-10105-1</td><td>2023年02月10日</td></tr><tr><td>79</td><td>开心大碰撞</td><td>移动</td><td>黑龙江龙华数字出版股份有限公司</td><td>厦门御长风网络科技有限公司</td><td>国新出审〔2023〕131号</td><td>ISBN 978-7-498-10104-4</td><td>2023年02月10日</td></tr><tr><td>80</td><td>超瞬息联结</td><td>移动</td><td>华东师范大学电子音像出版社有限公司</td><td>北京有爱互娱科技有限公司</td><td>国新出审〔2023〕130号</td><td>ISBN 978-7-498-10103-7</td><td>2023年02月10日</td></tr><tr><td>81</td><td>魔法连环消</td><td>移动-休闲益智</td><td>杭州边锋网络技术有限公司</td><td>杭州边锋网络技术有限公司</td><td>国新出审〔2023〕205号</td><td>ISBN 978-7-498-10102-0</td><td>2023年02月10日</td></tr><tr><td>82</td><td>香肠派对</td><td>客户端</td><td>上海隐志网络科技有限公司</td><td>心动网络股份有限公司</td><td>国新出审〔2023〕129号</td><td>ISBN 978-7-498-10101-3</td><td>2023年02月10日</td></tr><tr><td>83</td><td>矩阵临界：失控边缘</td><td>移动</td><td>浙江出版集团数字传媒有限公司</td><td>海南里游互娱科技有限公司</td><td>国新出审〔2023〕128号</td><td>ISBN 978-7-498-10100-6</td><td>2023年02月10日</td></tr><tr><td>84</td><td>璃芯溯源</td><td>移动</td><td>杭州烈焰网络技术有限公司</td><td>汐轩阁（天津）科技有限公司</td><td>国新出审〔2023〕127号</td><td>ISBN 978-7-498-10099-3</td><td>2023年02月10日</td></tr><tr><td>85</td><td>豆豆的村庄</td><td>移动</td><td>西安交通大学出版社有限责任公司</td><td>西安乐推网络科技有限公司</td><td>国新出审〔2023〕126号</td><td>ISBN 978-7-498-10098-6</td><td>2023年02月10日</td></tr><tr><td>86</td><td>雷电：觉醒</td><td>移动</td><td>三辰影库音像出版社有限公司</td><td>上海蜂驰网络科技有限公司</td><td>国新出审〔2023〕125号</td><td>ISBN 978-7-498-10097-9</td><td>2023年02月10日</td></tr><tr><td>87</td><td>青青农场</td><td>移动</td><td>北京青年报网际传播技术有限公司</td><td>北京优路互娱科技有限公司</td><td>国新出审〔2023〕124号</td><td>ISBN 978-7-498-10096-2</td><td>2023年02月10日</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 资讯杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> news </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Steam集换式卡牌及ASF挂卡</title>
      <link href="/2022/12/12/Game/ASF/"/>
      <url>/2022/12/12/Game/ASF/</url>
      
        <content type="html"><![CDATA[<h1 id="Steam集换式卡牌"><a href="#Steam集换式卡牌" class="headerlink" title="Steam集换式卡牌"></a>Steam集换式卡牌</h1><h2 id="什么是集换式卡牌？"><a href="#什么是集换式卡牌？" class="headerlink" title="什么是集换式卡牌？"></a>什么是集换式卡牌？</h2><ul><li>Steam 集换式卡牌是一种虚拟卡牌，玩家可以通过在 Steam 上购买并玩游戏来获得这些卡牌，并可使用获得到的这些卡牌来合成对应的游戏徽章，获取奖励。 集齐一套卡牌用于合成徽章并且可以获取到游戏相关的物品，这些物品可用于自定义您的个人资料并向其他玩家展示玩游戏的情况。</li></ul><h2 id="如何获得集换式卡牌？"><a href="#如何获得集换式卡牌？" class="headerlink" title="如何获得集换式卡牌？"></a>如何获得集换式卡牌？</h2><ul><li>玩家们只需要玩任意一款支持集换式卡牌的游戏便就能获得这些集换式卡牌。 玩游戏时（或者是关闭游戏时），会偶尔收到掉落的集换式卡牌，这些卡牌将存放到玩家自己的 Steam 库存中。</li></ul><h2 id="集换式卡牌的掉落机制"><a href="#集换式卡牌的掉落机制" class="headerlink" title="集换式卡牌的掉落机制"></a>集换式卡牌的掉落机制</h2><ul><li>首先就是每个游戏的卡牌数量不一样，有多有少，但玩游戏只能掉落部分卡牌（小于等于一半或者向上取整），比如一个游戏有7张卡牌，玩游戏只会掉落四张（可能会掉重复的卡牌，是谁运气不好我不说），剩下的卡牌可以通过市场购买（需要开通市场，也就是steam上消费或者充值5美元），补充包制作或者去与好友交易来获取得到。</li></ul><h2 id="集换式卡牌的作用用途"><a href="#集换式卡牌的作用用途" class="headerlink" title="集换式卡牌的作用用途"></a>集换式卡牌的作用用途</h2><ul><li>基本用途就是合成徽章并提升steam等级，获得一些游戏相关的steam表情，steam个人装扮背景，再就是可以售卖用来回血（把卡牌变成余额，下次购买游戏时候，可以用于抵消）或者转换成宝石，用于买卡片组合包，开卡抽卡。</li></ul><h1 id="ASF挂卡步骤简述"><a href="#ASF挂卡步骤简述" class="headerlink" title="ASF挂卡步骤简述"></a>ASF挂卡步骤简述</h1><ul><li><p>第1步：下载ASF：<a href="https://github.com/JustArchi/ArchiSteamFarm/releases">https://github.com/JustArchi/ArchiSteamFarm/releases</a></p></li><li><p>第2步：解压下载的文件。</p></li><li><p>第3步：去这个网站生成配置文件：<a href="https://justarchi.github.io/ArchiSteamFarm/#/bot">https://justarchi.github.io/ArchiSteamFarm/#/bot</a></p></li><li><p>第4步：把生成的文件拖入“config”文件夹中。</p></li><li><p>第5步：享受挂卡的乐趣。</p></li></ul><h2 id="网站生成配置文件"><a href="#网站生成配置文件" class="headerlink" title="网站生成配置文件"></a>网站生成配置文件</h2><ul><li>第一个空就是你的机器人id，(如我的叫asf_bot,自己喜欢就行)</li><li>第二个是steam账号,</li><li>第三个是steam密码,</li><li>第四个不用填</li><li>点√（enable）</li><li>然后下载，会生成一个json文件</li><li>将下载到的json文件移到ASF的config目录</li></ul><h2 id="设置游戏挂卡时长"><a href="#设置游戏挂卡时长" class="headerlink" title="设置游戏挂卡时长"></a>设置游戏挂卡时长</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;CustomGamePlayedWhileFarming&quot;</span><span class="punctuation">:</span> <span class="string">&quot;挂卡时显示正在进行的游戏&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CustomGamePlayedWhileIdle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;挂游戏时间时显示正在进行的游戏&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SteamLogin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的steam账号&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SteamPassword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你的steam密码&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;GamesPlayedWhileIdle&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    挂游戏时间<span class="punctuation">,</span>像这样写入游戏id<span class="punctuation">,</span></span><br><span class="line">    <span class="number">214490</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">431960</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">105600</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">477160</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><div style="display:none"><ul><li><p><a href="https://www.bilibili.com/read/cv20533514">Steam集换式卡牌相关问题</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/25326798">蒸汽帮挂卡教程 - 教你如何挂机自动挂卡</a></p></li><li><p><a href="https://www.bilibili.com/read/cv161719/">Steam使用ASF挂卡的方法（图文版）</a></p></li><li><p><a href="https://www.bilibili.com/read/cv14715963">steam++&#x2F;ASF自动挂卡傻瓜攻略</a></p></li><li><p><a href="https://www.bilibili.com/read/cv5963732">Steam[ASF]挂卡(挂游戏时间)纯新手教学</a></p></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用笔记目录</title>
      <link href="/2022/12/12/Hexo/01Hexo/"/>
      <url>/2022/12/12/Hexo/01Hexo/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="/2022/02/15/Hexo/01hello-world/" title="Hello World">Hello World</a></li><li><a href="/2022/02/16/Hexo/02HexoStart/" title="HEXO博客搭建(1):博客搭建">HEXO博客搭建(1):博客搭建</a></li><li><a href="/2022/02/17/Hexo/03HexoGit/" title="HEXO博客搭建(2):博客配置GIT及备份">HEXO博客搭建(2):博客配置GIT及备份</a></li><li><a href="/2022/02/17/Hexo/04HexoTheme/" title="HEXO博客搭建(3):主题配置">HEXO博客搭建(3):主题配置</a></li><li><a href="/2022/02/18/Hexo/05HexoPWA/" title="HEXO网页更加丝滑(PWA)">HEXO网页更加丝滑(PWA)</a></li><li><a href="/2022/02/18/Hexo/06HexoYAML/" title="关于yaml语法">关于yaml语法</a></li><li><a href="/2022/02/19/Hexo/07HexoLive2d/" title="HEXO博客配置Live2D">HEXO博客配置Live2D</a></li><li><a href="/2022/02/19/Hexo/08HexoWWWTop01/" title="运维博客常用网站汇总">运维博客常用网站汇总</a></li><li><a href="/2022/02/19/Hexo/09HexoInject/" title="通过Inject添加样式表魔改主题">通过Inject添加样式表魔改主题</a></li><li><a href="/2022/02/19/Hexo/10HexoComments/" title="HEXO博客评论区">HEXO博客评论区</a></li><li><a href="/2022/02/19/Hexo/11HexoRepair/" title="解决关于Hexo博客浏览卡顿的记录">解决关于Hexo博客浏览卡顿的记录</a></li><li><a href="/2022/02/20/Hexo/12HexoCDN/" title="HEXO博客的CDN多线优化">HEXO博客的CDN多线优化</a></li><li><a href="/2022/02/20/Hexo/13HexoPlugin/" title="HEXO博客常用插件">HEXO博客常用插件</a></li><li><a href="/2022/02/20/Hexo/14HexoPicHost/" title="HEXO博客图床">HEXO博客图床</a></li><li><a href="/2022/02/19/Hexo/15TencentCloud/" title="腾讯云相关问题与解决方案">腾讯云相关问题与解决方案</a></li><li><a href="/2022/03/01/Hexo/16HexoGitee/" title="HEXO博客:gitee部署及样式无法显示的问题">HEXO博客:gitee部署及样式无法显示的问题</a></li><li><a href="/2022/09/01/Hexo/17HexoBug/" title="HEXO博客:常见问题集合">HEXO博客:常见问题集合</a></li><li><a href="/2022/09/01/Hexo/18HexoBlog/" title="HEXO博客:常见的动、静态博客">HEXO博客:常见的动、静态博客</a></li><li><a href="/2022/10/01/Hexo/19HexoUpdate/" title="HEXO框架等更新">HEXO框架等更新</a></li><li><a href="/2022/10/11/Hexo/20Hexo_Link/" title="HEXO博客:引用站内文章(锚点)">HEXO博客:引用站内文章(锚点)</a></li><li><a href="/2022/10/20/Hexo/21HexoMind/" title="HEXO博客:思维导图插件">HEXO博客:思维导图插件</a></li><li><a href="/2023/02/17/Hexo/22HideToggleX/" title="HEXO博客:HideToggle标签异常加载">HEXO博客:HideToggle标签异常加载</a></li><li><a href="/2023/02/20/Hexo/23HexoTypora/" title="Typora常用设置指南">Typora常用设置指南</a></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客:思维导图插件</title>
      <link href="/2022/10/20/Hexo/21HexoMind/"/>
      <url>/2022/10/20/Hexo/21HexoMind/</url>
      
        <content type="html"><![CDATA[<h1 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h1><ul><li><a href="https://github.com/markmap/markmap">markmap</a></li><li>百度脑图的开源库 kityminder</li><li><a href="https://github.com/fex-team/kityminder">kityminder</a></li></ul><h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="hexo-simple-mindmap"><a href="#hexo-simple-mindmap" class="headerlink" title="hexo-simple-mindmap"></a>hexo-simple-mindmap</h2><ul><li><a href="https://hunterx.xyz/use-mindmap-in-hexo.html">说明文档</a></li><li><a href="https://github.com/HunterXuan/hexo-simple-mindmap">hexo-simple-mindmap</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-simple-mindmap</span><br></pre></td></tr></table></figure><h2 id="hexo-markmap"><a href="#hexo-markmap" class="headerlink" title="hexo-markmap"></a>hexo-markmap</h2><ul><li><a href="https://github.com/MaxChang3/hexo-markmap">hexo-markmap</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-markmap</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub首页美化</title>
      <link href="/2022/10/15/Git/04GitBeauty/"/>
      <url>/2022/10/15/Git/04GitBeauty/</url>
      
        <content type="html"><![CDATA[<h2 id="Metrics（GitHub-信息统计）"><a href="#Metrics（GitHub-信息统计）" class="headerlink" title="Metrics（GitHub 信息统计）"></a>Metrics（GitHub 信息统计）</h2><h2 id="GitHub-Stats-Card（GitHub-统计卡片）"><a href="#GitHub-Stats-Card（GitHub-统计卡片）" class="headerlink" title="GitHub Stats Card（GitHub 统计卡片）"></a>GitHub Stats Card（GitHub 统计卡片）</h2><h2 id="Most-used-languages（GitHub-使用语言统计）"><a href="#Most-used-languages（GitHub-使用语言统计）" class="headerlink" title="Most used languages（GitHub 使用语言统计）"></a>Most used languages（GitHub 使用语言统计）</h2><h2 id="Github-Profile-Trophy（GitHub-资料奖杯）"><a href="#Github-Profile-Trophy（GitHub-资料奖杯）" class="headerlink" title="Github Profile Trophy（GitHub 资料奖杯）"></a>Github Profile Trophy（GitHub 资料奖杯）</h2><h2 id="Shields（GitHub-徽章）"><a href="#Shields（GitHub-徽章）" class="headerlink" title="Shields（GitHub 徽章）"></a>Shields（GitHub 徽章）</h2><h2 id="Visitor-Badge（GitHub-访客徽章）"><a href="#Visitor-Badge（GitHub-访客徽章）" class="headerlink" title="Visitor Badge（GitHub 访客徽章）"></a>Visitor Badge（GitHub 访客徽章）</h2><h2 id="GitHub-Readme-Activity-Graph-（GitHub-活动统计图）"><a href="#GitHub-Readme-Activity-Graph-（GitHub-活动统计图）" class="headerlink" title="GitHub Readme Activity Graph （GitHub 活动统计图）"></a>GitHub Readme Activity Graph （GitHub 活动统计图）</h2><h2 id="GitHub-streak（GitHub-连续打卡）"><a href="#GitHub-streak（GitHub-连续打卡）" class="headerlink" title="GitHub streak（GitHub 连续打卡）"></a>GitHub streak（GitHub 连续打卡）</h2><h2 id="社交统计"><a href="#社交统计" class="headerlink" title="社交统计"></a>社交统计</h2><h2 id="打字特效"><a href="#打字特效" class="headerlink" title="打字特效"></a>打字特效</h2><div style="display:none">- [Github 首页美化教程](https://zhuanlan.zhihu.com/p/454597068)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客:引用站内文章(锚点)</title>
      <link href="/2022/10/11/Hexo/20Hexo_Link/"/>
      <url>/2022/10/11/Hexo/20Hexo_Link/</url>
      
        <content type="html"><![CDATA[<h1 id="post-link"><a href="#post-link" class="headerlink" title="post_link"></a>post_link</h1><ul><li>在写文章的过程中，有时候需要引用站内的其他文章。可以通过内置的标签插件的语法 <code>post_link</code>来实现引用。</li><li>这里默认的路径是在 <code>_post</code> 路径下，如果不是默认路径，需要写上相对路径。</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link <span class="string">&#x27;文章文件名(不要后缀)&#x27;</span> <span class="string">&#x27;文章标题(可选)&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure><h2 id="实例-链接使用文章的标题"><a href="#实例-链接使用文章的标题" class="headerlink" title="实例-链接使用文章的标题"></a>实例-链接使用文章的标题</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link <span class="string">&#x27;Hexo/01hello-world&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure><ul><li>效果</li><li><a href="/2022/02/15/Hexo/01hello-world/" title="Hello World">Hello World</a></li></ul><h2 id="实例-链接使用自定义文字"><a href="#实例-链接使用自定义文字" class="headerlink" title="实例-链接使用自定义文字"></a>实例-链接使用自定义文字</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_link <span class="string">&#x27;Hexo/01hello-world&#x27;</span> <span class="string">&#x27;你好，世界&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure><ul><li>效果</li><li><a href="/2022/02/15/Hexo/01hello-world/" title="Hello World">你好，世界</a></li></ul><h1 id="post-path"><a href="#post-path" class="headerlink" title="post_path"></a>post_path</h1><ul><li>用来获取文章的链接地址，但是不是链接</li><li>可以用markdown语法直接插入文件链接，也很方便。</li></ul><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path filename %&#125;</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path <span class="title class_">Hexo</span>/01hello-world %&#125;</span><br><span class="line">[你好，世界](<span class="regexp">/2022/</span><span class="number">02</span>/<span class="number">15</span>/<span class="title class_">Hexo</span>/01hello-world/)</span><br></pre></td></tr></table></figure><ul><li>/2022/02/15/Hexo/01hello-world/</li><li><a href="/2022/02/15/Hexo/01hello-world/">你好，世界</a></li></ul><h1 id="hexo-链接到站内文章指定锚点"><a href="#hexo-链接到站内文章指定锚点" class="headerlink" title="hexo 链接到站内文章指定锚点"></a>hexo 链接到站内文章指定锚点</h1><h2 id="当前文章锚点跳转"><a href="#当前文章锚点跳转" class="headerlink" title="当前文章锚点跳转"></a>当前文章锚点跳转</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[跳转到本文锚点](#hexo-标题与-id-关系)</span><br></pre></td></tr></table></figure><h2 id="站内文章跳转"><a href="#站内文章跳转" class="headerlink" title="站内文章跳转"></a>站内文章跳转</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% post_path &#x27;hexo blog&#x27; %&#125;#安装&quot;</span>&gt;</span>hexo 安装<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="站外文章锚点"><a href="#站外文章锚点" class="headerlink" title="站外文章锚点"></a>站外文章锚点</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">标题</span>](<span class="link">网址</span>)</span><br></pre></td></tr></table></figure><h1 id="其他更多标签用法"><a href="#其他更多标签用法" class="headerlink" title="其他更多标签用法"></a>其他更多标签用法</h1><p><a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件（Tag Plugins）</a></p><h2 id="隐藏文字"><a href="#隐藏文字" class="headerlink" title="隐藏文字"></a>隐藏文字</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;display:none&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><div style="display:none">- [hexo 链接到站内文章指定锚点](https://blog.jijian.link/2020-01-08/hexo-anchor-link/)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跳一跳游戏开发</title>
      <link href="/2022/10/03/Unity3D/03UnityJump/"/>
      <url>/2022/10/03/Unity3D/03UnityJump/</url>
      
        <content type="html"><![CDATA[<h1 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h1><h2 id="核心玩法"><a href="#核心玩法" class="headerlink" title="核心玩法"></a>核心玩法</h2><ul><li>小人跳跃的距离和你按压屏幕的时长有关，按屏幕时间越长，跳的越远。</li><li>跳到盒子上可以加分，没跳到盒子上游戏结束。</li><li>连续跳到盒子中心可以成倍加分。</li><li>联网查询排行榜和上传分数。</li></ul><h2 id="功能需求分析"><a href="#功能需求分析" class="headerlink" title="功能需求分析"></a>功能需求分析</h2><ul><li>角色跳跃</li><li>相机跟随</li><li>台子自动生成</li><li>死亡判定及重新开始游戏</li><li>分数统计</li><li>色蓄力的粒子效果</li><li>角色蓄力效果</li><li>角色蓄力台子效果</li><li>飘分效果</li><li>联网排行榜功能</li><li>翻倍加分功能</li></ul><h1 id="开发文档"><a href="#开发文档" class="headerlink" title="开发文档"></a>开发文档</h1><h2 id="创建游戏场景"><a href="#创建游戏场景" class="headerlink" title="创建游戏场景"></a>创建游戏场景</h2><ol><li>创建一个<code>Plane</code>当地面，并重命名为<code>Ground</code></li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump01.png"></p><ol start="2"><li>创建一个材质球改变<code>Ground</code>颜色(默认Plane控件是不能设置材质颜色),创建一个<code>Materials</code>文件夹放入材质球</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump02.png"></p><ol start="3"><li>创建一个<code>Cube</code>，y轴缩放0.5当跳板，创建物体可以通过<code>Transsform</code>中<code>Reset</code>设置为3D场景正中心，在创建一个Plane当地面，跳一跳小人物碰到地面时游戏借宿，为了让跳板出现地面上方，设置y轴<code>Postion</code>为0.25（Reset设置居中是以组件正中心）</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump03.png"></p><ol start="4"><li>创建一个空物体重命名为<code>Player</code>作为玩家角色<ul><li>Cylinder(圆柱形)控件作为玩家身体</li><li>Sphere(圆形)控件作为玩家头部</li><li>调整至合适的大小、位置</li><li>添加材质球，将材质球绑定到Cylinder(圆柱形)控件和Sphere(圆形)控件上，改变材质球颜色，材质球放入<code>Materials</code>文件夹</li></ul></li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump04.png"></p><ol start="5"><li>保存场景</li></ol><h2 id="角色跳跃"><a href="#角色跳跃" class="headerlink" title="角色跳跃"></a>角色跳跃</h2><ol><li>添加游戏脚本<code>Player</code>放入新创建<code>Scripts</code>文件夹，并将脚本绑定到<code>Player</code>控件上，并在<code>Player</code>控件上添加一个物理组件<code>Rigidbody</code></li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump05.png"></p><ol start="2"><li>获得<code>Rigidbody</code>组件</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Rigidbody _rigidbody;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Start</span> ()</span> &#123;</span><br><span class="line">      _rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>计算出按下鼠标和松开鼠标之间的时间</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> _startTime;</span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//按下按键的时间</span></span><br><span class="line">        _startTime = Time.time;                        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 计算总共按下空格的时长</span></span><br><span class="line">        <span class="keyword">var</span> elapse = Time.time - _startTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>Player跳跃方法的实现</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 小人跳跃时，决定远近的一个参数</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> Factor = <span class="number">2</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnJump</span>(<span class="params"><span class="built_in">float</span> elapse</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="comment">//给刚体增加力 </span></span><br><span class="line">      _rigidbody.AddForce(<span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">5f</span>, <span class="number">0</span>) * elapse * Factor, ForceMode.Impulse);        </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/01jump.gif"></p><ol start="5"><li>发现人物跳跃落地时会出现跌倒，这是因为重心和碰撞盒的问题</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      _rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">      <span class="comment">//设置质量中心</span></span><br><span class="line">      _rigidbody.centerOfMass = <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>将Body下的Capsle Collider去掉，替换成Box Collider</li></ol><p><img src="/images/Unity3D/jumptojump/02jump.gif"></p><ol start="7"><li>修改当前视角,选中Main Camera按下快捷键Ctrl+Alt+F　　(GameObject-&gt;Align With-&gt;View)</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump06.png"></p><ol start="8"><li>修改Factoer为5，测试(这个盒子是我自己复制Stage出来的)</li></ol><p><img src="/images/Unity3D/jumptojump/03jump.gif" alt="测试"></p><h2 id="自动生成盒子"><a href="#自动生成盒子" class="headerlink" title="自动生成盒子"></a>自动生成盒子</h2><ol><li>随机生成盒子位置</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stage.transform.position = _currentStage.transform.position + <span class="keyword">new</span> Vector3(Random.Range(<span class="number">1.1f</span>,MaxDistance),<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 小人跳跃时，决定远近的一个参数</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> Factor = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一个盒子物体</span></span><br><span class="line"><span class="keyword">public</span> GameObject Stage;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 盒子随机最远的距离</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> MaxDistance = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Rigidbody _rigidbody;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> _startTime;</span><br><span class="line"><span class="keyword">private</span> GameObject _currentStage;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    _rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">    <span class="comment">//设置质量中心</span></span><br><span class="line">    _rigidbody.centerOfMass = <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SpawnStage</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> stage = Instantiate(Stage);</span><br><span class="line">    stage.transform.position = _currentStage.transform.position + <span class="keyword">new</span> Vector3(Random.Range(<span class="number">1.1f</span>, MaxDistance), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><ol start="2"><li>跳到一个盒子上再随机生成一个盒子<ul><li>如果有别的物体和本物体发生变化，会触发这函数OnCollisionEnter(Collision collision)</li><li>轻轻一跳在同一个盒子上时，不能在重新生成新的盒子</li><li>没有跳到下一个盒子上，不能再生成新的盒子</li></ul></li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span> ()</span> &#123;</span><br><span class="line">        _rigidbody = GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">        <span class="comment">//修改物理组件的重心到body的底部</span></span><br><span class="line">        _rigidbody.centerOfMass = Vector3.zero;</span><br><span class="line"></span><br><span class="line">        _currentStage = Stage;</span><br><span class="line">        _lastCollisionCollider = _currentStage.GetComponent&lt;Collider&gt;();</span><br><span class="line">        SpawnStage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 小人刚体与其他物体发生碰撞时自动调用</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">     <span class="function"><span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(collision.gameObject.name);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (collision.gameObject.name.Contains(<span class="string">&quot;Stage&quot;</span>) &amp;&amp; collision.collider != _lastCollisionCollider)</span><br><span class="line">        &#123;</span><br><span class="line">            _lastCollisionCollider = collision.collider;</span><br><span class="line">            _currentStage = collision.gameObject;</span><br><span class="line">            SpawnStage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/04jump.gif"></p><h2 id="相机跟随"><a href="#相机跟随" class="headerlink" title="相机跟随"></a>相机跟随</h2><ol><li>获得主相机位置</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Camera.main.transform.position</span><br></pre></td></tr></table></figure><ol start="2"><li>获得相机下一次的相对位置</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Vector3 _camerRelativePosition; </span><br></pre></td></tr></table></figure><ol start="3"><li>获得相机移动的距离</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得相机移动的距离</span></span><br><span class="line">   _cameraRelativePosition = Camera.main.transform.position - transform.position;</span><br></pre></td></tr></table></figure><ol start="4"><li>使用DG.Tweening插件（没有的话请去资源商店下载）(Window-&gt;Package Manager)</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump07.png"></p><ol start="5"><li>添加移动相机的动画，并在<code>OnCollisionEnter</code>中调用</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MoveCamera</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">       Camera.DOMove(transform.position + _camerRelativePosition,<span class="number">1</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>修改<code>Ground</code>的Scale为(1000,1,1000)，进行测试</li></ol><p><img src="/images/Unity3D/jumptojump/05jump.gif"></p><h2 id="死亡判定及重新开始"><a href="#死亡判定及重新开始" class="headerlink" title="死亡判定及重新开始"></a>死亡判定及重新开始</h2><ol><li><p>小人落到地面上就可以判断游戏结束了　</p></li><li><p>当Player碰到地面时，重新加载场景</p></li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (collision.gameObject.name == <span class="string">&quot;Ground&quot;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="comment">//本局游戏结束，重新开始</span></span><br><span class="line">          SceneManager.LoadScene(<span class="number">0</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>要注意光源问题，光源保存在缓存中，重新加载场景时不会加载光照，生成静态光照</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump08.png"></p><h2 id="分数及UI显示"><a href="#分数及UI显示" class="headerlink" title="分数及UI显示"></a>分数及UI显示</h2><ol><li>创建一个Text文本控件命名为<code>TotalScore</code>，并设置2D文本位置，右上角设置文字位置</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump09.png"></p><ol start="2"><li>当跳到新的方块上时，分数增加</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (collision.gameObject.name.Contains(<span class="string">&quot;Stage&quot;</span>) &amp;&amp; collision.collider != _lastCollisionCollider)</span><br><span class="line">    &#123;</span><br><span class="line">        _lastCollisionCollider = collision.collider;</span><br><span class="line">        _currentStage = collision.gameObject;</span><br><span class="line">        SpawnStage();</span><br><span class="line">        MoveCamera();</span><br><span class="line"></span><br><span class="line">        _score++;</span><br><span class="line">        TotalScoreText.text = _score.ToString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="角色蓄力粒子效果"><a href="#角色蓄力粒子效果" class="headerlink" title="角色蓄力粒子效果"></a>角色蓄力粒子效果</h2><ol><li><p>在Player上创建粒子系统Particle System</p></li><li><p>将粒子系统Shape中的Shaper改为Hemisphere圆形发射，并修改Potation上的X值为-90并修改粒子系统的初始值</p></li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump10.png"></p><ol start="3"><li>修改脚本，当角色蓄力的时候才会显现出粒子效果</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> GameObject Particle;</span><br><span class="line"></span><br><span class="line">      Particle = GameObject.Find(<span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">      Particle.SetActive(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">      &#123;</span><br><span class="line">          _stateTime = Time.time;</span><br><span class="line">          Particle.SetActive(<span class="literal">true</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">var</span> elapse = Time.time - _stateTime;</span><br><span class="line">          OnJump(elapse);</span><br><span class="line">          Particle.SetActive(<span class="literal">false</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/06jump.gif"></p><h2 id="角色蓄力动画"><a href="#角色蓄力动画" class="headerlink" title="角色蓄力动画"></a>角色蓄力动画</h2><ol><li>当按下鼠标键时，小人物的身体进行缩放，我们可以通过脚本来设置</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">// 计算总共按下空格的时长</span></span><br><span class="line">       <span class="keyword">var</span> elapse = Time.time - _startTime;</span><br><span class="line">       <span class="comment">//跳跃事件</span></span><br><span class="line">       OnJump(elapse);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//抬起鼠标关闭粒子效果</span></span><br><span class="line">       Particle.SetActive(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//还原小人的形状</span></span><br><span class="line">       Body.transform.DOScale(<span class="number">0.1f</span>, <span class="number">0.2f</span>);</span><br><span class="line">       Head.transform.DOLocalMoveY(<span class="number">0.29f</span>, <span class="number">0.2f</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">//身体 局部缩放</span></span><br><span class="line">       Body.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>) * <span class="number">0.05f</span> * Time.deltaTime;</span><br><span class="line">       <span class="comment">//头部 局部缩放</span></span><br><span class="line">       Head.transform.localPosition += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.1f</span> * Time.deltaTime;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/07jump.gif"></p><h2 id="盒子蓄力动画"><a href="#盒子蓄力动画" class="headerlink" title="盒子蓄力动画"></a>盒子蓄力动画</h2><ol><li>盒子缩放沿着轴心缩放</li><li>盒子恢复形状</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">// 计算总共按下空格的时长</span></span><br><span class="line">       <span class="keyword">var</span> elapse = Time.time - _startTime;</span><br><span class="line">       <span class="comment">//跳跃事件</span></span><br><span class="line">       OnJump(elapse);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//抬起鼠标关闭粒子效果</span></span><br><span class="line">       Particle.SetActive(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">//还原小人的形状</span></span><br><span class="line">       _currentStage.transform.DOLocalMoveY(<span class="number">0.25f</span>, <span class="number">0.2f</span>);</span><br><span class="line">       _currentStage.transform.DOScale(<span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0.5f</span>, <span class="number">1</span>), <span class="number">0.2f</span>);</span><br><span class="line">       <span class="comment">//还原盒子的形状</span></span><br><span class="line">       _currentStage.transform.DOLocalMoveY(<span class="number">0.25f</span>, <span class="number">0.2f</span>);</span><br><span class="line">       _currentStage.transform.DOScale(<span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0.5f</span>, <span class="number">1</span>), <span class="number">0.2f</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">//身体 局部缩放</span></span><br><span class="line">       Body.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>) * <span class="number">0.05f</span> * Time.deltaTime;</span><br><span class="line">       <span class="comment">//头部 局部缩放</span></span><br><span class="line">       Head.transform.localPosition += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.1f</span> * Time.deltaTime;</span><br><span class="line">       <span class="comment">//盒子沿轴心缩放</span></span><br><span class="line">       _currentStage.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.15f</span> * Time.deltaTime;</span><br><span class="line">       _currentStage.transform.localPosition += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.15f</span> * Time.deltaTime;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/08jump.gif"></p><h2 id="盒子随机大小及颜色"><a href="#盒子随机大小及颜色" class="headerlink" title="盒子随机大小及颜色"></a>盒子随机大小及颜色</h2><ol><li>随机大小</li><li>随机颜色</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SpawnStage</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//生成台子</span></span><br><span class="line">    <span class="keyword">var</span> stage = Instantiate(Stage);</span><br><span class="line">    stage.transform.position = _currentStage.transform.position + <span class="keyword">new</span> Vector3(Random.Range(<span class="number">1.1f</span>, MaxDistance), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//随机大小</span></span><br><span class="line">    <span class="keyword">var</span> randomScale = Random.Range(<span class="number">0.5f</span>, <span class="number">1</span>);</span><br><span class="line">    stage.transform.localScale = <span class="keyword">new</span> Vector3(randomScale, <span class="number">0.5f</span>, randomScale);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//随机颜色</span></span><br><span class="line">    stage.GetComponent&lt;Renderer&gt;().material.color =</span><br><span class="line">        <span class="keyword">new</span> Color(Random.Range(<span class="number">0f</span>, <span class="number">1</span>), Random.Range(<span class="number">0f</span>, <span class="number">1</span>), Random.Range(<span class="number">0f</span>, <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/09jump.gif"></p><h2 id="盒子随机方向生成"><a href="#盒子随机方向生成" class="headerlink" title="盒子随机方向生成"></a>盒子随机方向生成</h2><ol><li>初始的时候设置生成的方向是沿X轴正方向</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vector3 _direction = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>随机生成跳台(沿X轴或Z轴)</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RandomDirection</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> seed = Random.Range(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(seed == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        _direction = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        _direction = <span class="keyword">new</span> Vector3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>改变小人物跳跃方向</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnJump</span>(<span class="params"><span class="built_in">float</span> elapse</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//给刚体增加力  </span></span><br><span class="line">    <span class="comment">//_rigidbody.AddForce(new Vector3(1, 5f, 0) * elapse * Factor, ForceMode.Impulse);</span></span><br><span class="line">    _rigidbody.AddForce((<span class="keyword">new</span> Vector3(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>)+_direction)*elapse* Factoer,ForceMode.Impulse);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>增加台子生成方向参数</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成台子</span></span><br><span class="line"><span class="keyword">var</span> stage = Instantiate(Stage);</span><br><span class="line"><span class="comment">// stage.transform.position = _currentStage.transform.position + new Vector3(Random.Range(1.1f, MaxDistance), 0, 0);        </span></span><br><span class="line">stage.transform.position = _currentStage.transform.position + _direction * Random.Range(<span class="number">1.1f</span>, MaxDistance);</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/jumptojump/10jump.gif"></p><h2 id="增加角色跳跃动画"><a href="#增加角色跳跃动画" class="headerlink" title="增加角色跳跃动画"></a>增加角色跳跃动画</h2><ol><li>添加动画</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnJump</span>(<span class="params"><span class="built_in">float</span> elapse</span>)</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="comment">//给刚体增加力  </span></span><br><span class="line">     <span class="comment">//_rigidbody.AddForce(new Vector3(1, 5f, 0) * elapse * Factor, ForceMode.Impulse);</span></span><br><span class="line">     _rigidbody.AddForce(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">5f</span>, <span class="number">0</span>) + (_direction) * elapse * Factor, ForceMode.Impulse);</span><br><span class="line">     <span class="comment">//旋转动画</span></span><br><span class="line">     transform.DOLocalRotate(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">-360</span>), <span class="number">0.6f</span>, RotateMode.LocalAxisAdd);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="优化盒子相关事件"><a href="#优化盒子相关事件" class="headerlink" title="优化盒子相关事件"></a>优化盒子相关事件</h2><ol><li>防止过度缩放</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理按下空格时小人和盒子的动画</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//添加限定，盒子最多缩放一半</span></span><br><span class="line">    <span class="keyword">if</span> (_currentStage.transform.localScale.y &gt; <span class="number">0.3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//身体 局部缩放</span></span><br><span class="line">        Body.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>) * <span class="number">0.05f</span> * Time.deltaTime;</span><br><span class="line">        <span class="comment">//头部 局部缩放</span></span><br><span class="line">        Head.transform.localPosition += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.1f</span> * Time.deltaTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//盒子沿轴心缩放</span></span><br><span class="line">        _currentStage.transform.localScale += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.15f</span> * Time.deltaTime;</span><br><span class="line">        _currentStage.transform.localPosition += <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>) * <span class="number">0.15f</span> * Time.deltaTime;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><ol start="2"><li>修复盒子缩放后会还原为预设体大小</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//还原盒子的形状</span></span><br><span class="line">_currentStage.transform.DOLocalMoveY(<span class="number">0.25f</span>, <span class="number">0.2f</span>);</span><br><span class="line"><span class="comment">//_currentStage.transform.DOScale(new Vector3(1, 0.5f, 1), 0.2f);</span></span><br><span class="line">_currentStage.transform.DOScaleY(<span class="number">0.5f</span>, <span class="number">0.2f</span>);</span><br></pre></td></tr></table></figure><h2 id="随机生成不同盒子"><a href="#随机生成不同盒子" class="headerlink" title="随机生成不同盒子"></a>随机生成不同盒子</h2><ol><li>创建一个圆柱体并且重命名为<code>StageCylinder</code>，放入<code>Prefabs</code>文件夹</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJump11.png"></p><ol start="2"><li>创建一个盒子仓库</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 盒子仓库，可以放上各种盒子的prefab，用于动态生成。</span></span><br><span class="line">   <span class="keyword">public</span> GameObject[] BoxTemplates;</span><br></pre></td></tr></table></figure><ol start="3"><li>随机生成</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GameObject prefab;</span><br><span class="line"><span class="keyword">if</span> (BoxTemplates.Length &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 从盒子库中随机取盒子进行动态生成</span></span><br><span class="line">    prefab = BoxTemplates[Random.Range(<span class="number">0</span>, BoxTemplates.Length)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    prefab = StageBox;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="联网排行榜-api"><a href="#联网排行榜-api" class="headerlink" title="联网排行榜(api)"></a>联网排行榜(api)</h2><ol><li>LeanCloud官网： <a href="https://www.leancloud.cn/">https://www.leancloud.cn/</a></li><li>LeanCloud国际版： <a href="https://leancloud.app/">https://leancloud.app/</a></li><li>SDK下载 ：<a href="https://releases.leanapp.cn/#/leancloud/unity-sdk/releases">https://releases.leanapp.cn/#/leancloud/unity-sdk/releases</a></li><li>通过Unity的Http通讯进行数据的增删改查</li></ol><p><img src="/images/Unity3D/jumptojump/UnityJumpHttp.png"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO框架等更新</title>
      <link href="/2022/10/01/Hexo/19HexoUpdate/"/>
      <url>/2022/10/01/Hexo/19HexoUpdate/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>主题更新了，顺手把框架也更新一下。</p><p>更新目标</p><ul><li><p>npm: x.x.x</p></li><li><p>Hexo: x.x.x</p></li><li><p>Butterfly: x.x.x</p></li><li><p>Node: x.x.x</p></li></ul><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p><a href="https://nodejs.org/zh-cn/download">Node.js — 下载 Node.js®</a></p><h1 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h1><p><a href="https://npm.nodejs.cn/">npm 中文网</a></p><h1 id="npm-最新国内镜像源设置-2025"><a href="#npm-最新国内镜像源设置-2025" class="headerlink" title="npm 最新国内镜像源设置 2025"></a>npm 最新国内镜像源设置 2025</h1><h2 id="1-国内源"><a href="#1-国内源" class="headerlink" title="1. 国内源"></a>1. 国内源</h2><ul><li>淘宝：<code>https://registry.npmmirror.com/</code></li><li>腾讯云：<code>https://mirrors.cloud.tencent.com/npm/</code></li><li>CNPM：<code>https://r.cnpmjs.org/</code></li></ul><h2 id="2-设置"><a href="#2-设置" class="headerlink" title="2.设置"></a>2.设置</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#查询当前使用的镜像源</span></span><br><span class="line">npm <span class="keyword">get</span> registry</span><br><span class="line"></span><br><span class="line"><span class="meta">#设置为淘宝镜像源 </span></span><br><span class="line">npm config <span class="keyword">set</span> registry https:<span class="comment">//registry.npmmirror.com/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#验证设置</span></span><br><span class="line">npm <span class="keyword">get</span> registry</span><br><span class="line"></span><br><span class="line"><span class="meta">#还原为官方源</span></span><br><span class="line">npm config <span class="keyword">set</span> registry https:<span class="comment">//registry.npmjs.org/ </span></span><br></pre></td></tr></table></figure><h2 id="3-升级-nmp"><a href="#3-升级-nmp" class="headerlink" title="3. 升级 nmp"></a>3. 升级 nmp</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 使用淘宝源的 cnpm 替换 npm</span><br><span class="line"># npm install -g cnpm --registry=<span class="attr">https</span>:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line">npm install -g cnpm --registry=<span class="attr">https</span>:<span class="comment">//registry.npmmirror.com/</span></span><br><span class="line">cnpm install -g cnpm                 # 升级 npm</span><br><span class="line">cnpm cache clean -f                 # 清除 npm 缓存</span><br><span class="line"></span><br><span class="line">===更新 <span class="attr">hexo</span>: 进入 blog 目录，执行如下命令=== </span><br><span class="line"># 更新 package.<span class="property">json</span> 中的 hexo 及个插件版本</span><br><span class="line">cnpm install -g npm-check           # 检查之前安装的插件，都有哪些是可以升级的 </span><br><span class="line">cnpm install -g npm-upgrade         # 升级系统中的插件</span><br><span class="line">npm-check</span><br><span class="line">npm-upgrade</span><br><span class="line"></span><br><span class="line"># 更新 hexo 及所有插件</span><br><span class="line">cnpm update</span><br><span class="line"></span><br><span class="line"># 确认 hexo 已经更新</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h1 id="HEXO框架更新"><a href="#HEXO框架更新" class="headerlink" title="HEXO框架更新"></a>HEXO框架更新</h1><h2 id="使用npm命令直接安装"><a href="#使用npm命令直接安装" class="headerlink" title="使用npm命令直接安装"></a>使用npm命令直接安装</h2><p>您也可以使用npm命令直接安装指定版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo@7.3.0 --save</span><br></pre></td></tr></table></figure><h2 id="1-查看当前版本"><a href="#1-查看当前版本" class="headerlink" title="1. 查看当前版本"></a>1. 查看当前版本</h2><p>定位到hexo博客根目录下, 运行 <code>hexo -v</code>, </p><h2 id="2-全局安装-hexo-cli"><a href="#2-全局安装-hexo-cli" class="headerlink" title="2. 全局安装 hexo-cli"></a>2. 全局安装 hexo-cli</h2><p><code>npm i hexo-cli -g</code></p><h2 id="3-安装-npm-check，若已安装可以跳过"><a href="#3-安装-npm-check，若已安装可以跳过" class="headerlink" title="3. 安装 npm-check，若已安装可以跳过"></a>3. 安装 npm-check，若已安装可以跳过</h2><p><code>npm install -g npm-check</code>, </p><h2 id="4-检查系统插件是否需要升级"><a href="#4-检查系统插件是否需要升级" class="headerlink" title="4. 检查系统插件是否需要升级"></a>4. 检查系统插件是否需要升级</h2><p><code>npm-check</code>, </p><p>可以看到，所以依赖项最新版本都已列出，并且给出了升级命令。</p><h2 id="5-安装-npm-upgrade，若已安装可以跳过"><a href="#5-安装-npm-upgrade，若已安装可以跳过" class="headerlink" title="5. 安装 npm-upgrade，若已安装可以跳过"></a>5. 安装 npm-upgrade，若已安装可以跳过</h2><p><code>npm install -g npm-upgrade</code></p><h2 id="6-查看可以更新-package-json插件"><a href="#6-查看可以更新-package-json插件" class="headerlink" title="6. 查看可以更新 package.json插件"></a>6. 查看可以更新 package.json插件</h2><p><code>npm-upgrade</code>,</p><p>所有升级项已列出，需要输入回车，最后一项 <code>Update package.json</code> 需要输入 <code>y</code> 或 <code>yes</code>, 然后回车。 此时可以看到 <code>package.json</code> 里所有依赖项都已升级，但是 <code>hexo</code> 的版本还是 <code>6.3.0</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;hexo&quot;: &#123;</span><br><span class="line">  &quot;version&quot;: &quot;6.3.0&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;hexo&quot;: &quot;^7.0.0&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-npm-update-save，升级系统项"><a href="#7-npm-update-save，升级系统项" class="headerlink" title="7. npm update --save，升级系统项"></a>7. <code>npm update --save</code>，升级系统项</h2><h2 id="8-查看package-json-hexo-的版本由-6-3-0-已变成-7-0-0"><a href="#8-查看package-json-hexo-的版本由-6-3-0-已变成-7-0-0" class="headerlink" title="8. 查看package.json, hexo 的版本由 6.3.0 已变成 7.0.0"></a>8. 查看package.json, hexo 的版本由 6.3.0 已变成 7.0.0</h2><p>运行 <code>hexo -v</code> 再次查看：</p><h2 id="9-npm-update-hexo-theme-butterfly-save-升级主题，运行-hexo-server，查看你的博客"><a href="#9-npm-update-hexo-theme-butterfly-save-升级主题，运行-hexo-server，查看你的博客" class="headerlink" title="9. npm update hexo-theme-butterfly --save, 升级主题，运行 hexo server，查看你的博客"></a>9. <code>npm update hexo-theme-butterfly --save</code>, 升级主题，运行 <code>hexo server</code>，查看你的博客</h2><p><strong>升级完成，nice 😊</strong></p><h1 id="HEXO-Butterfly主题及第三方插件更新"><a href="#HEXO-Butterfly主题及第三方插件更新" class="headerlink" title="HEXO Butterfly主题及第三方插件更新"></a>HEXO Butterfly主题及第三方插件更新</h1><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>升級方法：在 Hexo 根目錄下，運行 <code>npm update hexo-theme-butterfly</code></p></div><p>升级完成后记得参照对应版本的Butterfly主题更新<code>_config.butterfly.yml</code>文件</p><h1 id="更新注意"><a href="#更新注意" class="headerlink" title="更新注意"></a>更新注意</h1><h1 id="HEXO框架及主题更新记录"><a href="#HEXO框架及主题更新记录" class="headerlink" title="HEXO框架及主题更新记录"></a>HEXO框架及主题更新记录</h1><details class="toggle" ><summary class="toggle-button" style="">更新记录</summary><div class="toggle-content"><div class="timeline color"><div class='timeline-item headline'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2025</p></div>        </div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>10-23</p></div>        </div>        <div class='timeline-item-content'><p>版本更新:</p><ul><li>Hexo: 7.3.0</li><li>Butterfly: 5.5.0</li><li>Node: v22.21.0</li><li>npm: 10.9.4</li></ul></div>      </div></div><div class="timeline color"><div class='timeline-item headline'>        <div class='timeline-item-title'>          <div class='item-circle'><p>2022</p></div>        </div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>10-01</p></div>        </div>        <div class='timeline-item-content'><p>版本更新:</p><ul><li>Hexo: 6.3.0</li><li>Butterfly: 4.4.0</li><li>Node: v16.14.0</li><li>npm: 8.3.1</li></ul></div>      </div><div class='timeline-item'>        <div class='timeline-item-title'>          <div class='item-circle'><p>02-15</p></div>        </div>        <div class='timeline-item-content'><p>博客建站版本:</p><ul><li>hexo: 6.0.0</li><li>Butterfly: 4.0.0</li><li>node: v16.14.0</li><li>npm: 8.3.1</li></ul></div>      </div></div></div></details><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏分类</title>
      <link href="/2022/09/03/Unity3D/02Unity_Games/"/>
      <url>/2022/09/03/Unity3D/02Unity_Games/</url>
      
        <content type="html"><![CDATA[<h1 id="常见游戏分类"><a href="#常见游戏分类" class="headerlink" title="常见游戏分类"></a>常见游戏分类</h1><table><thead><tr><th align="center">简称</th><th align="center">全称</th><th align="center">汉译</th></tr></thead><tbody><tr><td align="center">MOBA</td><td align="center">Multiplayer online battle arena</td><td align="center">多人在线战术竞技游戏</td></tr><tr><td align="center">RPG</td><td align="center">Role-playing Game</td><td align="center">角色扮演游戏</td></tr><tr><td align="center">ACT</td><td align="center">Action Game</td><td align="center">动作游戏</td></tr><tr><td align="center">AVG</td><td align="center">Adventure Game</td><td align="center">冒险游戏</td></tr><tr><td align="center">AAG</td><td align="center">Act Adventure Game</td><td align="center">动作冒险游戏</td></tr><tr><td align="center">SG</td><td align="center">Strategy Game</td><td align="center">策略游戏</td></tr><tr><td align="center">SRPG</td><td align="center">Simulation Role-playing Game</td><td align="center">模拟类角色扮演游戏</td></tr><tr><td align="center">RTS</td><td align="center">Real-Time Strategy Game</td><td align="center">即时战略游戏</td></tr><tr><td align="center">RTT</td><td align="center">Real-Time Tactics</td><td align="center">即时战术游戏</td></tr><tr><td align="center">FTG</td><td align="center">Fighting Game</td><td align="center">格斗游戏</td></tr><tr><td align="center">STG</td><td align="center">Shooting Game</td><td align="center">射击类游戏</td></tr><tr><td align="center">FPS</td><td align="center">First Personal Shooting Game</td><td align="center">第一人称视角射击游戏</td></tr><tr><td align="center">TPS</td><td align="center">Third Personal Shooting Game</td><td align="center">第三人称视角射击游戏</td></tr><tr><td align="center">PZL</td><td align="center">Puzzle Game</td><td align="center">益智类游戏</td></tr><tr><td align="center">SPG</td><td align="center">Sports Game</td><td align="center">体育竞技类游戏</td></tr><tr><td align="center">RCG</td><td align="center">Racing Game</td><td align="center">竞速游戏[也有称作为RAC的]</td></tr><tr><td align="center">CAG</td><td align="center">Card Game</td><td align="center">卡片游戏</td></tr><tr><td align="center">TAB</td><td align="center">Table Game</td><td align="center">桌面游戏</td></tr><tr><td align="center">MSC</td><td align="center">Music Game</td><td align="center">音乐游戏</td></tr><tr><td align="center">WAG</td><td align="center">Wap Game</td><td align="center">手机游戏</td></tr><tr><td align="center">SPG</td><td align="center">Sport Game</td><td align="center">体育类游戏</td></tr></tbody></table><h1 id="角色扮演游戏-RPG"><a href="#角色扮演游戏-RPG" class="headerlink" title="角色扮演游戏(RPG)"></a>角色扮演游戏(RPG)</h1><h2 id="回合角色扮演"><a href="#回合角色扮演" class="headerlink" title="回合角色扮演"></a>回合角色扮演</h2><p>回合角色扮演︰创世纪、巫术、博德之门、勇者斗恶龙、最终幻想、异域镇魂曲、无冬之夜</p><pre>汉家松鼠 《汉家江湖》紫龙 《天地劫：幽城再临》软星/中手游 《仙剑奇侠传》前五部正传上海烛龙/网元圣唐 《古剑奇谭》前两部</pre><h2 id="大型多人在线角色扮演-MMORPG"><a href="#大型多人在线角色扮演-MMORPG" class="headerlink" title="大型多人在线角色扮演(MMORPG)"></a>大型多人在线角色扮演(MMORPG)</h2><p>魔兽世界、热血传奇、最终幻想11、剑网3、剑灵</p><h2 id="策略角色扮演（SRPG"><a href="#策略角色扮演（SRPG" class="headerlink" title="策略角色扮演（SRPG)"></a>策略角色扮演（SRPG)</h2><p>火焰之纹章、超级机器人大战、梦幻模拟战、皇家骑士团</p><h2 id="动作角色扮演-ARPG"><a href="#动作角色扮演-ARPG" class="headerlink" title="动作角色扮演(ARPG)"></a>动作角色扮演(ARPG)</h2><p>屠龙剑、上古卷轴、伊苏、暗黑破坏神、刀剑封魔录、黑暗之魂.…</p><h1 id="动作游戏-ACT"><a href="#动作游戏-ACT" class="headerlink" title="动作游戏(ACT)"></a>动作游戏(ACT)</h1><h2 id="平台动作"><a href="#平台动作" class="headerlink" title="平台动作"></a>平台动作</h2><p>大金刚、超级马里奥、洛克人、高桥名人的冒险岛、三目童子、魔界村……</p><h2 id="横版过关"><a href="#横版过关" class="headerlink" title="横版过关"></a>横版过关</h2><p>双截龙、快打旋风、三国战纪、Spikeout锐击、鬼泣、忍Shinobi、忍者龙剑传…</p><h2 id="格斗游戏-FTG"><a href="#格斗游戏-FTG" class="headerlink" title="格斗游戏(FTG)"></a>格斗游戏(FTG)</h2><p>功夫、街霸、侍魂、拳皇、VR战士、铁拳、死或生、灵魂能力、三国无双.</p><h1 id="射击游戏-STG"><a href="#射击游戏-STG" class="headerlink" title="射击游戏(STG)"></a>射击游戏(STG)</h1><h2 id="飞行射击"><a href="#飞行射击" class="headerlink" title="飞行射击"></a>飞行射击</h2><p>太空侵略者、红巾特攻队、沙罗曼蛇、雷电..地面射击:魂斗罗、绿色兵团、赤色要塞、合金弹头…….</p><h2 id="第一人称射击（FPS"><a href="#第一人称射击（FPS" class="headerlink" title="第一人称射击（FPS)"></a>第一人称射击（FPS)</h2><p>毁灭战士、半条命、反恐精英、使命召唤、战地….</p><h2 id="第三人称射击-TPS"><a href="#第三人称射击-TPS" class="headerlink" title="第三人称射击(TPS )"></a>第三人称射击(TPS )</h2><p>战争机器、神秘海域、马克思佩恩、绝对征服、质量效应….</p><h1 id="体育游戏-SPG"><a href="#体育游戏-SPG" class="headerlink" title="体育游戏(SPG)"></a>体育游戏(SPG)</h1><p>热血躲避球、天使之翼、SD灌篮高手、实况足球、FIFA、NBA2K……</p><h1 id="竞速游戏-RCG"><a href="#竞速游戏-RCG" class="headerlink" title="竞速游戏(RCG)"></a>竞速游戏(RCG)</h1><p>公路赛车、F1赛车、马里奥赛车、古惑狼赛车、GT赛车、山脊赛车、极品飞车..</p><h1 id="策略游戏-SLG"><a href="#策略游戏-SLG" class="headerlink" title="策略游戏(SLG)"></a>策略游戏(SLG)</h1><h2 id="回合策略"><a href="#回合策略" class="headerlink" title="回合策略"></a>回合策略</h2><p>三国志、信长之野望、大战略、文明、魔法门之英雄无敌….</p><h2 id="即时策略（RTS"><a href="#即时策略（RTS" class="headerlink" title="即时策略（RTS )"></a>即时策略（RTS )</h2><p>上古战争艺术、魔兽争霸、命令与征服、帝国时代、星际争霸.</p><h1 id="冒险游戏-AVG"><a href="#冒险游戏-AVG" class="headerlink" title="冒险游戏(AVG)"></a>冒险游戏(AVG)</h1><h2 id="文字冒险"><a href="#文字冒险" class="headerlink" title="文字冒险"></a>文字冒险</h2><p>镰融之夜、心跳回忆、逆转裁判、寒蝉鸣泣之时、Fate&#x2F;stay night、尸体派对.</p><h2 id="动作冒险-AAVG"><a href="#动作冒险-AAVG" class="headerlink" title="动作冒险(AAVG)"></a>动作冒险(AAVG)</h2><p>塞尔达传说、古墓丽影、生化危机、鬼武者、波斯王子、古堡迷踪..</p><h2 id="互动电影冒险"><a href="#互动电影冒险" class="headerlink" title="互动电影冒险"></a>互动电影冒险</h2><p>暴雨、超凡双生、行尸走肉、奇异人生、底特律∶变人…..</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客:常见问题集合</title>
      <link href="/2022/09/01/Hexo/17HexoBug/"/>
      <url>/2022/09/01/Hexo/17HexoBug/</url>
      
        <content type="html"><![CDATA[<h1 id="HEXO-渲染样式常见问题"><a href="#HEXO-渲染样式常见问题" class="headerlink" title="HEXO 渲染样式常见问题"></a>HEXO 渲染样式常见问题</h1><p>github issue 区<br><a href="https://github.com/hexojs/hexo-renderer-marked/issues">https://github.com/hexojs/hexo-renderer-marked/issues</a></p><h1 id="Pipes-not-rendering"><a href="#Pipes-not-rendering" class="headerlink" title="Pipes | not rendering"></a>Pipes | not rendering</h1><p>转义字符无法显示</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`||`</span></span><br><span class="line"></span><br><span class="line">a     | b</span><br><span class="line">---   | --- </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">code</span>&gt;</span></span><span class="literal">&amp;#124;</span><span class="literal">&amp;#124;</span><span class="language-xml"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span> | <span class="code">`pipe pipe`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="HEXO的hexo-douban插件的小坑"><a href="#HEXO的hexo-douban插件的小坑" class="headerlink" title="HEXO的hexo-douban插件的小坑"></a>HEXO的hexo-douban插件的小坑</h1><h2 id="爬取过多会被豆瓣墙"><a href="#爬取过多会被豆瓣墙" class="headerlink" title="爬取过多会被豆瓣墙"></a>爬取过多会被豆瓣墙</h2><p><a href="https://github.com/mythsman/hexo-douban/issues">https://github.com/mythsman/hexo-douban/issues</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> git，issue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客:常见的动、静态博客</title>
      <link href="/2022/09/01/Hexo/18HexoBlog/"/>
      <url>/2022/09/01/Hexo/18HexoBlog/</url>
      
        <content type="html"><![CDATA[<p>简言之，Blog就是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，再集丰富多彩的个性化展示于一体的综合性平台。</p><h1 id="博客搭建的方式"><a href="#博客搭建的方式" class="headerlink" title="博客搭建的方式"></a>博客搭建的方式</h1><p>总体来说，Blog搭建的方式可以分为静态博客和动态博客。顾名思义，静态博客：博文内容是通过文档（如：.md文件等）记录的（一个独立的文件），通过生成工具编译成最终的hml、css、js等静态文件，然后部署在静态Server服务器上或Web托管至数据仓库（如：Github），即可在互联网中被访问，不需要数据库的支撑。动态博客：是以数据库技术为基础，其博文内容是通过数据库记录存储的，主要特点体现在交互性；动不是指网页中的页面元素或特效在动，而是与后台数据库进行交互和数据传递（如：注册登录、评论、用户管理等）。</p><h1 id="常见的博客框架："><a href="#常见的博客框架：" class="headerlink" title="常见的博客框架："></a>常见的博客框架：</h1><h2 id="静态框架"><a href="#静态框架" class="headerlink" title="静态框架"></a>静态框架</h2><p>Hexo (<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a>)</p><p>Hugo (<a href="https://www.gohugo.cn/">https://www.gohugo.cn/</a>)</p><p>VuePress (<a href="https://www.vuepress.cn/">https://www.vuepress.cn/</a>)</p><p>Jekyll (<a href="https://www.jekyll.com.cn/">https://www.jekyll.com.cn/</a>)</p><h2 id="动态框架"><a href="#动态框架" class="headerlink" title="动态框架"></a>动态框架</h2><p>WordPress (<a href="https://wordpress.org/">https://wordpress.org/</a>)</p><p>Typecho (<a href="https://typecho.org/">https://typecho.org/</a>)</p><p>Halo (<a href="https://halo.run/">https://halo.run/</a>)</p><p>Solo (<a href="https://b3log.org/solo/">https://b3log.org/solo/</a>)</p><h1 id="框架简介"><a href="#框架简介" class="headerlink" title="框架简介"></a>框架简介</h1><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo 是一个基于Node.js的快速、简洁且高效的静态博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo具有丰富的主题、插件系统。</p><p>优点：</p><p>纯静态博客，部署简单、成本低廉、运行优化非常高效。<br>Hexo 静态博客框架可以在云端，也可以在本地电脑上甚至手机上。<br>Hexo 框架的博客网站没有网站后台，不存在后台安全漏洞的问题。<br>因为是纯静态的，几乎所有的 CDN 服务都可以完美的加速提升浏览速度。<br>搜索引擎对纯静态网站有天然的青睐度，收录、权重优先权明显。<br>纯静态网站会让网络攻击成本大大的增加也就是说纯静态网站被攻击的可能性更低了。</p><h2 id="Hugo"><a href="#Hugo" class="headerlink" title="Hugo"></a>Hugo</h2><p>Hugo 被称为是世界上最快的构建网站的框架。Hugo 是一个快速且现代的静态网站生成器，采用 Go 编程语言开发，Hugo 的设计目标是让创建网站重新变得有趣。Hugo 是一个通用的网站框架。从技术上讲，Hugo 是一个静态站点生成器。与动态构建页面的系统不同，Hugo 在创建或更新内容时构建页面。由于网站的浏览频率远高于编辑频率，因此 Hugo 旨在为您的网站最终用户提供最佳的浏览体验，并为网站作者提供理想的写作体验。使用 Hugo 构建的网站非常快速和安全。Hugo 构建的网站可以托管在任何地方，包括 Netlify、Heroku、GoDaddy、DreamHost、GitHub Pages、GitLab Pages、Surge、Aerobatic、Firebase、Google Cloud Storage、Amazon S3、Rackspace、Azure, 和 CloudFront，并且与 CDN 更配。Hugo 网站在运行时不需要数据库或依赖于诸如 Ruby、Python 或 PHP 等昂贵的运行时环境。我们认为 Hugo 是一个理想的网站创建工具，具有几乎即时的构建时间，能够在网站修改时即刻重建。</p><p>优点：</p><p>飞快的构建速度。在等待网站构建时有多无聊？Hugo 是同类中最快的工具。每个页面的构建时间小于一毫秒时，网站的平均构建时间不到一秒钟。<br>健壮的内容管理。灵活性为王。Hugo 是内容战略家的梦想。Hugo 支持无限的内容类型、分类、菜单、动态 API 驱动的内容等，所有这些都无需插件。<br>短代码(shortcodes)。Hugo 短代增强了 Markdown 的能力。我们喜欢 Markdown 语法的漂亮、简洁，但有时我们需要更多的灵活性。Hugo 短代码满足了美观和灵活的需求。<br>内置模板。Hugo 提供的通用模式让您的工作迅速完成。Hugo 提供了预制的模板，可以快速完成 SEO、评论、统计和其他功能。一行代码，完成所有工作。<br>支持多语言和 i18n。原生支持多语言。Hugo 为多语言站点提供了完整的 i18n 支持，并且与 Hugo 用户喜欢的单语言站点的开发体验完全相同。<br>定制输出。HTML 够吗？Hugo 允许以多种格式输出您的内容，包括 JSON 或 AMP，并使您可以轻松创建自己的内容。</p><h2 id="VuePress"><a href="#VuePress" class="headerlink" title="VuePress"></a>VuePress</h2><p>VuePress 由两部分组成：第一部分是一个极简静态网站生成器 (opens new window)，它包含由 Vue 驱动的主题系统和插件 API，另一个部分是为书写技术文档而优化的默认主题，它的诞生初衷是为了支持 Vue 及其子项目的文档需求。每一个由 VuePress 生成的页面都带有预渲染好的 HTML，也因此具有非常好的加载性能和搜索引擎优化（SEO）。同时，一旦页面被加载，Vue 将接管这些静态内容，并将其转换成一个完整的单页应用（SPA），其他的页面则会只在用户浏览到的时候才按需加载。</p><p>事实上，一个 VuePress 网站是一个由 Vue (opens new window)、Vue Router (opens new window)和 webpack (opens new window)驱动的单页应用。如果你以前使用过 Vue 的话，当你在开发一个自定义主题的时候，你会感受到非常熟悉的开发体验，你甚至可以使用 Vue DevTools 去调试你的自定义主题。在构建时，我们会为应用创建一个服务端渲染（SSR）的版本，然后通过虚拟访问每一条路径来渲染对应的HTML。这种做法的灵感来源于 Nuxt (opens new window)的 nuxt generate 命令，以及其他的一些项目，比如 Gatsby (opens new window)。</p><p>优点：</p><p>简洁至上。以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。<br>Vue 驱动。享受 Vue + webpack 的开发体验，可以在 Markdown 中使用 Vue 组件，又可以使用 Vue 来开发自定义主题。<br>高性能。VuePress 会为每个页面预渲染生成静态的 HTML，同时，每个页面被加载的时候，将作为 SPA 运行。</p><h2 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h2><p>Jekyll 是一个静态网站生成器。用你喜欢的标记语言书写内容并交给 Jekyll 处理，它将利用模板为你创建一个静态网站。你可以调整你想要的网址样式、在网站上显示哪些数据等等。jekyll是一个简单的免费的Blog生成工具，类似WordPress。但是和WordPress又有很大的不同，原因是jekyll只是一个生成静态网页的工具，不需要数据库支持。但是可以配合第三方服务,例如Disqus。最关键的是jekyll可以免费部署在Github上，而且可以绑定自己的域名。</p><p>优点：</p><p>简单。无需数据库、评论功能或频繁的版本更新—只需关注你的内容。<br>静态。只用 Markdown、Liquid、HTML &amp; CSS g就可以构建可部署的静态网站。<br>博客。原生支持自定义链接、分类、静态页、文章以及自定义布局。</p><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>WordPress是一款能让您建立出色网站、博客或应用程序的开源软件。WordPress是使用PHP语言开发的博客平台，用户可以在支持PHP和MySQL数据库的服务器上架设属于自己的网站。也可以把 WordPress当作一个内容管理系统（CMS）来使用。WordPress是一款个人博客系统，并逐步演化成一款内容管理系统软件，它是使用PHP语言和MySQL数据库开发的，用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。WordPress有许多第三方开发的免费模板，安装方式简单易用。不过要做一个自己的模板，则需要你有一定的专业知识。比如你至少要懂的标准通用标记语言下的一个应用HTML、CSS、PHP等相关知识。</p><p>优点：</p><p>WordPress 功能强大、扩展性强、生态丰富，这主要得益于其插件众多，易于扩充功能，基本上一个完整网站该有的功能，通过其第三方插件都能实现所有功能。<br>wordpress搭建的博客对seo搜索引擎友好，收录也快，排名靠前。<br>适合DIY，如果你是喜欢丰富内容的网站，那么wordpress可以很好地符合你的胃口。<br>主题很多，网站上一大片都是wordpress的主题，各色各样，应有尽有！<br>wordpress备份和网站转移比较方便，原站点使用站内工具导出后，使用WordPress Importer插件就能方便地将内容导入新网站。<br>wordpress有强大的社区支持，有上千万的开发者贡献和审查wordpress，所以wordpress是安全并且活跃的。</p><h2 id="Typecho"><a href="#Typecho" class="headerlink" title="Typecho"></a>Typecho</h2><p>Typecho是由type和echo两个词合成的，来自于开发团队的头脑风暴。Typecho基于PHP5开发，支持多种数据库，是一款内核强健﹑扩展方便﹑体验友好﹑运行流畅的轻量级开源博客程序。选用Typecho，搭建独一无二个人网络日志发布平台，享受创作的快乐。</p><p>优点：</p><p>轻量高效。仅仅 7 张数据表，加上不足 400KB 的代码，就实现了完整的插件与模板机制。超低的 CPU 和内存使用率，足以发挥主机的最高性能。<br>先进稳定。原生支持 Markdown 排版语法，易读更易写。支持 BAE&#x2F;GAE&#x2F;SAE 等各类云主机，即使面对突如其来的高访问量，也能轻松应对。<br>简洁友好。精心打磨过的操作界面，依然是你熟悉的面孔，更多了一份成熟与贴心。每一个像素的剪裁，都只为离完美更进一步。</p><h2 id="Halo"><a href="#Halo" class="headerlink" title="Halo"></a>Halo</h2><p>Halo是一款基于Java语言，使用Spring Boot框架开发的博客系统，致力于打造最好的 Java 博客系统，且只想安安静静的做一个博客系统。</p><p>优点：</p><p>代码开源。我们的所有代码开源在 GitHub 上且处于积极维护状态，截止目前已经发布了 81 个版本。您也可以在上面提交您的问题或者参与代码贡献。<br>易于部署。采用了程序与用户配置分离的方式，迁移和备份成本大大降低。您只需要一条命令即可运行成功，同时也支持 Docker 部署。<br>REST API。提供了完善的 Content API 和 Admin API，你可以用于开发单页面模板，微信小程序，各种系统的插件等。<br>模板系统完善的模板系统，支持自定义配置，支持在线安装和更新。开发主题也十分方便，欢迎大家参与主题的开发。<br>附件系统。支持本地上传，阿里云 OSS&#x2F;又拍云 OSS&#x2F;七牛云 OSS&#x2F;SM.MS 等云存储，你可以更方便的管理你文章中的附件。<br>评论系统拥有独立的评论插件，使用 Vue 开发，只需在页面引入构建好的 JS 文件即可，完美地和主题相结合。目前已有多款评论组件，你可以非常方便的切换。</p><h2 id="Solo"><a href="#Solo" class="headerlink" title="Solo"></a>Solo</h2><p>Solo 是一款基于Java语言有后台管理的，小而美的博客系统，专为程序员设计</p><p>优点：</p><p>Markdown 编辑器支持三种编辑模式：所见即所得 &#x2F; 即时渲染 &#x2F; 分屏预览。<br>Hexo &#x2F; Jekyll &#x2F; Markdown 导入。<br>SQL &#x2F; JSON &#x2F; Markdown 导出。<br>拉取 GitHub 仓库和自动备份。<br>内置 HTTPS+CDN 文件存储。<br>支持生成导出静态站点，用于发布 GitHub Pages。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu</title>
      <link href="/2022/05/31/Linux/03Ubuntu/"/>
      <url>/2022/05/31/Linux/03Ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><p>Ubuntu是适用于企业服务器、桌面电脑、云、IoT物联网的现代化开源Linux操作系统。</p><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="https://ubuntu.com/">https://ubuntu.com/</a></li></ul><h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><h2 id="设置系统语言为中文"><a href="#设置系统语言为中文" class="headerlink" title="设置系统语言为中文"></a>设置系统语言为中文</h2><blockquote><p><a href="https://blog.csdn.net/weixin_45965432/article/details/115446648">Ubuntu设置中文界面</a></p></blockquote><ol><li>点击左下角的显示应用程序图标,找到Settings</li><li>进入Settings页面，左侧选择Region &amp; Language，右侧底部点击Manage Installed Languages</li><li>找到 Chinese，点击Install进行安装。</li><li>弹出的身份验证框输入密码验证</li><li>展开框里选择Chinese后点击右上角的Add</li></ol><h2 id="Ubuntu更改国内镜像源（阿里、网易、清华、中科大）"><a href="#Ubuntu更改国内镜像源（阿里、网易、清华、中科大）" class="headerlink" title="Ubuntu更改国内镜像源（阿里、网易、清华、中科大）"></a>Ubuntu更改国内镜像源（阿里、网易、清华、中科大）</h2><blockquote><p><a href="https://blog.csdn.net/Zander0/article/details/119698368">Ubuntu更改国内镜像源（阿里、网易、清华、中科大）</a></p></blockquote><ol><li>备份源列表</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure><ol start="2"><li>直接修改(将列表复制进去)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure><ol start="3"><li>更新</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h1 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h1><blockquote><p><a href="https://www.ufans.top/index.php/archives/231/">Ubuntu的Livepatch是什么，有什么用</a></p></blockquote><div style="display:none"><p><a href="https://www.jianshu.com/p/126d51514097">修改ubuntu 18.04的sources.list源为阿里或清华镜像</a></p></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity开发涉及技能栈总结</title>
      <link href="/2022/03/03/Unity3D/01Unity_Skills/"/>
      <url>/2022/03/03/Unity3D/01Unity_Skills/</url>
      
        <content type="html"><![CDATA[<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><table><thead><tr><th align="left">排序方法</th><th align="left">平均情况</th><th align="left">最好情况</th><th align="left">最坏情况</th><th align="left">辅助空间</th><th align="left">稳定性</th></tr></thead><tbody><tr><td align="left">冒泡排序</td><td align="left">O(n²)</td><td align="left">O(nlogn)</td><td align="left">O(n²)</td><td align="left">O(1)</td><td align="left">稳定</td></tr><tr><td align="left">简单选择</td><td align="left">O(n²)</td><td align="left">O(n²)</td><td align="left">O(n²)</td><td align="left">O(1)</td><td align="left">稳定</td></tr><tr><td align="left">直接插入</td><td align="left">O(n²)</td><td align="left">O(n)</td><td align="left">O(n²)</td><td align="left">O(1)</td><td align="left">稳定</td></tr><tr><td align="left">希尔排序</td><td align="left">O(nlogn)~O(n²)</td><td align="left">O(n^1.3)</td><td align="left">O(n²)</td><td align="left">O(1)</td><td align="left">不稳定</td></tr><tr><td align="left">堆排序</td><td align="left">O(nlogn)</td><td align="left">O(nlogn)</td><td align="left">O(nlogn)</td><td align="left">O(1)</td><td align="left">不稳定</td></tr><tr><td align="left">归并排序</td><td align="left">O(nlogn)</td><td align="left">O(nlogn)</td><td align="left">O(nlogn)</td><td align="left">O(n)</td><td align="left">不稳定</td></tr><tr><td align="left">快速排序</td><td align="left">O(nlogn)</td><td align="left">O(nlogn)</td><td align="left">O(n²)</td><td align="left">O(nlogn)~O(n)</td><td align="left">不稳定</td></tr></tbody></table><p>排序：冒泡排序、快速排序<br>字符串：KMP<br>二叉树：遍历（深度、广度）<br>递归：目录遍历，子物体查找，多维数组遍历<br>遍历（深度，广度）<br>数学题：斐波那契数列，杨辉三角，九皇后算法</p><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><p>*MVC三层开发思想<br>MVVM：设计思想<br>*单例模式<br>工厂模式<br>观察者模式</p><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>  类和对象</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>构造方法<br>虚方法和重写<br>重载<br>Lambda表达式<br>静态<br>保护类型（public、protected、private）</p><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h2 id="抽象类和接口"><a href="#抽象类和接口" class="headerlink" title="抽象类和接口"></a>抽象类和接口</h2><p> 抽象方法</p><h2 id="继承和复合"><a href="#继承和复合" class="headerlink" title="继承和复合"></a>继承和复合</h2><p>继承：is a<br>复合：has a </p><h2 id="宏指令（比C-弱）"><a href="#宏指令（比C-弱）" class="headerlink" title="宏指令（比C++弱）"></a>宏指令（比C++弱）</h2><h1 id="数据容器-数据组织结构，序列化，反序列"><a href="#数据容器-数据组织结构，序列化，反序列" class="headerlink" title="数据容器(数据组织结构，序列化，反序列)"></a>数据容器(数据组织结构，序列化，反序列)</h1><p>XML(简化成JSON)<br>JSON(简化成ProtoBuffer)<br>ProtoBuffer</p><h1 id="服务器通信"><a href="#服务器通信" class="headerlink" title="服务器通信"></a>服务器通信</h1><h2 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h2><p>应用层（HTTP）<br>表示层<br>会话层<br>传输层（TCP,UDP）<br>网络层(IP)<br>数据链路层<br>物理层</p><h2 id="TCP-IP五层模型的协议"><a href="#TCP-IP五层模型的协议" class="headerlink" title="TCP&#x2F;IP五层模型的协议"></a>TCP&#x2F;IP五层模型的协议</h2><p>应用层（HTTP）<br>传输层（TCP,UDP）<br>网络层(IP)<br>数据链路层<br>物理层</p><h2 id="HTTP通信"><a href="#HTTP通信" class="headerlink" title="HTTP通信"></a>HTTP通信</h2><p>连接一次后断开<br>Request- Request<br>基于TCP<br>URL地址（协议[http&#x2F;https]（不加密&#x2F;加密），主机，端口，路径，文件，传参）<br>URL参数 参数1&#x3D;参数1值&amp;参数2&#x3D;参数2值<br>状态号：200成功，302重定向,403找到了禁止访问，404找不到，500服务器内部错误（java把状态号屏蔽也出现这个）<br>头部信息：编码格式，cookie<br>Unity内部封装的HTTP请求类</p><h2 id="TCP长连接通信"><a href="#TCP长连接通信" class="headerlink" title="TCP长连接通信"></a>TCP长连接通信</h2><p>TCP连接（三次握手）与断开（四次挥手）<br>套接字<br>TCP连接与断开数发送和接收<br>端口绑定（服务器）</p><h2 id="数据包处理"><a href="#数据包处理" class="headerlink" title="数据包处理"></a>数据包处理</h2><p>打包，解包<br>分包,粘包<br>心跳包</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>消息号-回调函数<br>发送消息<br>接受消息</p><h2 id="UDP通信"><a href="#UDP通信" class="headerlink" title="UDP通信"></a>UDP通信</h2><p>套接字<br>帧序<br>服务器帧定时器<br>数据同步到unity系统<br>防作弊</p><h1 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h1><p>编辑器，Editor工具开发<br>基础API（GameObject，Transform，物理引擎）<br>场景搭建（地形编辑，NavMesh）<br>相机系统（参数设定，多相机叠加，渲染层，排序层）<br>声音系统（音频编辑系统，音频播放系统[2D,3D]）<br>动画系统（Animator状态机，Animation动画片段，Avatar,融合树，IK，事件插入）<br>资源系统（IO操作（C#），Resources（打在包里）,AssetBundle）<br>UI系统（UGUI（基础组件，复合组件），DOTween）<br>Eventsystem（2D给UI,3D给相机）<br>3D数学（向量和点，坐标系转换[世界坐标系和本地坐标系]，欧拉角和四元数）</p><h1 id="优化技巧"><a href="#优化技巧" class="headerlink" title="优化技巧"></a>优化技巧</h1><h2 id="降低DrawCall"><a href="#降低DrawCall" class="headerlink" title="降低DrawCall"></a>降低DrawCall</h2><p>  图集<br>  少写pass通道<br>  GPUInstancer</p><h2 id="减少Update生命周期函数"><a href="#减少Update生命周期函数" class="headerlink" title="减少Update生命周期函数"></a>减少Update生命周期函数</h2><p>  计时器<br>多个脚本，注册给一个脚本，在一个脚本中调用其他脚本的Update</p><h2 id="对象池"><a href="#对象池" class="headerlink" title="对象池"></a>对象池</h2><p>创建（单帧，跨帧）<br>回收</p><h2 id="il2cpp的代码优化（C-转C-）"><a href="#il2cpp的代码优化（C-转C-）" class="headerlink" title="il2cpp的代码优化（C#转C++）"></a>il2cpp的代码优化（C#转C++）</h2><p>避免装箱拆箱（不用object）<br>避免使用foreach（遍历有垃圾碎片）尤其注意Update中编写foreach<br>减少在上线项目中，使用Debug（性能开销大）</p><h2 id="静态配表"><a href="#静态配表" class="headerlink" title="静态配表"></a>静态配表</h2><p>将不常变的数据，生成为数据（JSON，XML，ProtoBuffer）文件，可以减少服务器传递的数据量</p><h2 id="减少CPU消耗"><a href="#减少CPU消耗" class="headerlink" title="减少CPU消耗"></a>减少CPU消耗</h2><p>动画裁剪(动画在相机视椎体外不运行）</p><h2 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h2><p>（gpu参考博客 课程笔记完成）<br>飞出屏幕，不需要再次渲染的对象，记得销毁<br>（参考博客 AB包）<br>加载带有资源文件（精灵）的资源时，内存会上升，当带有资源的GameObject被销毁时，资源所占用的内存，不会被释放(懒释放-为了快)，Resources.UnloadUnusedAssets()<br>对象存储在静态变量上，变量不会被垃圾回收机制影响，当不再使用时，需要赋值为null<br>继承自IDispose接口的对象，当不再使用时，需要调用dispose()函数<br>WWW( )<br>Stream处理 （流处理）<br>Using（）<br>{<br>&#x2F;&#x2F;自动执行dispose（）函数   文件操作<br>}</p><h3 id="Using用法例如"><a href="#Using用法例如" class="headerlink" title="Using用法例如"></a>Using用法例如</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">StreamReader sr = <span class="keyword">new</span> StreamReader(“文件路径”)；</span><br><span class="line"><span class="built_in">string</span> content = sr.ReadToEnd();</span><br><span class="line">sr.close();</span><br><span class="line">sr.Dispose();</span><br><span class="line"><span class="comment">//代码优化</span></span><br><span class="line"><span class="keyword">using</span>(streamReader sr = <span class="keyword">new</span> StreamReader(<span class="string">&quot;文件路径&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> content = sr.ReadToEnd();</span><br><span class="line">sr.close();</span><br><span class="line"><span class="comment">//隐式调用sr的Dispose方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="异步实现"><a href="#异步实现" class="headerlink" title="异步实现"></a>异步实现</h2><p>线程在Unity中是存在，注意不能在线程中操作Unity的对象树 （gameobject操作）</p><p>异步加载场景（代码是协同，底层是线程）<br>异步加载Resources（代码是协同,底层是线程)<br>异步加载AB包（代码是协同，底层是线程)<br>异步加载AB包中的资源(代码是协同，底层是线程）</p><p>HTTP请求（代码是协同，底层是线程)<br>TCP请求(代码是线程)</p><h2 id="延迟实现"><a href="#延迟实现" class="headerlink" title="延迟实现"></a>延迟实现</h2><p>利用协同实现（yield return null)，可以实现每一帧做一些事情</p><p>列表页元素过多时，如果在一帧中加载所有cell，则会卡顿，可以使用逐帧加载多个cell的方式,或通过滚动条的OnValueChange回调函数,执行多次加载</p><h1 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h1><h2 id="Lua的基础语法-表和面向对象"><a href="#Lua的基础语法-表和面向对象" class="headerlink" title="Lua的基础语法(表和面向对象)"></a>Lua的基础语法(表和面向对象)</h2><p>.tolua独立开发与xlua腾讯<br>Lua和JavaScript很像（一切皆对象）</p><h2 id="C-与xLua的互调"><a href="#C-与xLua的互调" class="headerlink" title="C#与xLua的互调"></a>C#与xLua的互调</h2><p>C#调xLua  为了执行一些生命周期函数<br>xLua调C#  为了实现一些API</p><h2 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h2><h1 id="Shader"><a href="#Shader" class="headerlink" title="Shader"></a>Shader</h1><p>矩阵运算，齐次矩阵，坐标系转换<br>渲染流水线<br>Cg语言<br>顶点、片元着色器<br>属性控制与数据传递<br>光照（兰伯特定律，高光）</p><h2 id="着色方式"><a href="#着色方式" class="headerlink" title="着色方式"></a>着色方式</h2><h3 id="Phong着色，"><a href="#Phong着色，" class="headerlink" title="Phong着色，"></a>Phong着色，</h3><h3 id="高洛德着色"><a href="#高洛德着色" class="headerlink" title="高洛德着色"></a>高洛德着色</h3><h2 id="纹理渲染"><a href="#纹理渲染" class="headerlink" title="纹理渲染"></a>纹理渲染</h2><p>主纹理，光照纹理</p><h2 id="渲染指令"><a href="#渲染指令" class="headerlink" title="渲染指令"></a>渲染指令</h2><p>多pass通道，<br>渲染队列，深度测试，深度缓冲，颜色缓冲<br>反向裁剪<br>透明度测试<br>片元丢弃</p><h1 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h1><p>SVN:基于版本控制的集中式管理系统<br>学习：<a href="https://www.runoob.com/svn/svn-tutorial.html">https://www.runoob.com/svn/svn-tutorial.html</a><br>软件：<br>Git:基于分支实现的版本控制软件<br>学习：<a href="http://www.liaoxuefeng.com/wiki/">www.liaoxuefeng.com/wiki/</a><br>软件：<a href="http://www.sourcetreeapp.com/">www.sourcetreeapp.com</a></p><h1 id="VR"><a href="#VR" class="headerlink" title="VR"></a>VR</h1><p>硬件搭建<br>Unity中整合SteamVR（OpenVR）<br>开发</p><h2 id="动作设置"><a href="#动作设置" class="headerlink" title="动作设置"></a>动作设置</h2><p>设置VR场景<br>接入设备(两个手柄，眼镜)</p><h2 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h2><p>人物瞬移<br>道具拾取<br>UI交互</p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>物理引擎<br>场景搭建<br>Shader</p><h1 id="AR"><a href="#AR" class="headerlink" title="AR"></a>AR</h1><p>SDK添加<br>图片识别<br>平面感知</p><h2 id="打包和SDK接入"><a href="#打包和SDK接入" class="headerlink" title="打包和SDK接入"></a>打包和SDK接入</h2><p>NDK（Unity c#-c++） SDK(android)  JDK(java)</p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>环境配置<br>参数设定<br>真机测试(LogViewer)<br>ADB观察打印（主要是安卓 ios 直接xcode）</p><h2 id="SDK接入-c-和原生语言）"><a href="#SDK接入-c-和原生语言）" class="headerlink" title="SDK接入(c#和原生语言）"></a>SDK接入(c#和原生语言）</h2><p>配置AS<br>根据文档，修改代码,生成AAR包<br>将aar包放入Plugins目录<br>C#调用unity写好的桥梁代码，进而调用java</p><h1 id="Unity项目上传GitHub的注意点"><a href="#Unity项目上传GitHub的注意点" class="headerlink" title="Unity项目上传GitHub的注意点"></a>Unity项目上传GitHub的注意点</h1><p>Unity项目中必须上传的3个文件夹</p><ul><li>Assets——关系到项目的资源</li><li>Packages——关系到导入的一些包</li><li>ProjectSettings——关系到你的项目设置<br>Assets文件夹里的以meta为后缀的文件也要上传</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> lua </tag>
            
            <tag> shader </tag>
            
            <tag> cg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git大小写不敏感</title>
      <link href="/2022/03/02/Git/03GitBigToSmall/"/>
      <url>/2022/03/02/Git/03GitBigToSmall/</url>
      
        <content type="html"><![CDATA[<h1 id="问题现象："><a href="#问题现象：" class="headerlink" title="问题现象："></a>问题现象：</h1><ul><li>本地修改文件名、文件夹名（只变化大小写），提交远程仓库后，仓库中对应内容名称大小写并没有变化</li><li>本地仓库原本是大写文件，上传到远程仓库后变成小写，导致路径不正确，网页加载为404</li></ul><h1 id="推测原因"><a href="#推测原因" class="headerlink" title="推测原因"></a>推测原因</h1><ul><li>git 默认对大小写不敏感，文件或者文件夹名修改大小写后，提交后git远程仓库上内容不变动</li></ul><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ul><li>在gitee仓库直接重命名，在从网页加载，可以成功加载网页</li></ul><h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h1><ol><li>方法1.mv命令，然后继续走其他git提交流程即可</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">mv</span> a A  （ 原来小写名称a，想要修改成的大写名称A）</span><br></pre></td></tr></table></figure><p>　　　　</p><ol start="2"><li>方法2.修改默认忽略配置为禁止状态，<br>注意：此状态下修改文件夹名称提交后，老文件夹名称不删除</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config core.ignorecase <span class="literal">false</span> </span><br></pre></td></tr></table></figure><ol start="3"><li>方法3. 修改文件夹、文件名称不要只修改大小写</li></ol><h1 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h1><ul><li>撤销上次commit：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD~    // 撤销所有commit。。</span><br></pre></td></tr></table></figure><ul><li>撤销上次add&#x2F;删除文件：<br>rm后要add、commit后才能push</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> --cached -r 路径/文件名</span><br></pre></td></tr></table></figure><ul><li>取消git config 内容：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> xxkeyname</span><br></pre></td></tr></table></figure><ul><li>查看远程仓库地址：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>　　　</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
            <tag> solution </tag>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware 虚拟机安装群晖</title>
      <link href="/2022/03/01/Aio/02SynologyVM/"/>
      <url>/2022/03/01/Aio/02SynologyVM/</url>
      
        <content type="html"><![CDATA[<h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><ul><li>DSM镜像文件和引导镜像（对应的）</li><li>VM15pro软件</li><li>StarWindConverter.exe —img镜像转换vm格式工具</li></ul><h2 id="第一步：转换引导镜像，img转vm格式"><a href="#第一步：转换引导镜像，img转vm格式" class="headerlink" title="第一步：转换引导镜像，img转vm格式"></a>第一步：转换引导镜像，img转vm格式</h2><h2 id="第二步：新建一个文件夹用于存放虚拟机"><a href="#第二步：新建一个文件夹用于存放虚拟机" class="headerlink" title="第二步：新建一个文件夹用于存放虚拟机"></a>第二步：新建一个文件夹用于存放虚拟机</h2><h2 id="第三步：VM-15-pro创建虚拟机"><a href="#第三步：VM-15-pro创建虚拟机" class="headerlink" title="第三步：VM 15 pro创建虚拟机"></a>第三步：VM 15 pro创建虚拟机</h2><h2 id="第四步：启动虚拟机安装群晖"><a href="#第四步：启动虚拟机安装群晖" class="headerlink" title="第四步：启动虚拟机安装群晖"></a>第四步：启动虚拟机安装群晖</h2><p>打开搜索软件:Synology Assistant或打开网站 <a href="http://find.synology.com/#">http://find.synology.com/#</a> 搜索</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Nas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> synology </tag>
            
            <tag> vmware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客:gitee部署及样式无法显示的问题</title>
      <link href="/2022/03/01/Hexo/16HexoGitee/"/>
      <url>/2022/03/01/Hexo/16HexoGitee/</url>
      
        <content type="html"><![CDATA[<h1 id="Gitee仓库创建与设置"><a href="#Gitee仓库创建与设置" class="headerlink" title="Gitee仓库创建与设置"></a>Gitee仓库创建与设置</h1><p>创建一个仓库，设置为公开或私有都可以（记得Github原来私有仓库要收费的，微软收购后免费的）。<br>仓库名如果设置成和个人空间地址一样，那么访问地址就是： &lt;个人空间地址名&gt;.gitee.io<br>个人空间地址可在个人资料中查看。我的个人空间地址是<code>winward</code>，那么我的博客地址就是：<code>winward.gitee.io</code></p><p>仓库名如果设置成别的，那么访问地址则是：<code>&lt;个人空间地址名&gt;.gitee.io/仓库名</code><br>例如我把仓库名设置为<code>hexo_blog</code>，那么我的博客访问地址就是：<code>winward.gitee.io/hexo_blog</code><br>创建完成后，我们需要在该仓库页面中 点击“服务” &gt; Gitee Pages &gt; 勾选“强制使用HTTPS” &gt; 点击“启动”即可。</p><h1 id="部署命令"><a href="#部署命令" class="headerlink" title="部署命令"></a>部署命令</h1><h2 id="gitee配置"><a href="#gitee配置" class="headerlink" title="gitee配置"></a>gitee配置</h2><p>参见HEXO博客搭建(2):博客配置GIT及备份</p><h2 id="config-yml文件配置"><a href="#config-yml文件配置" class="headerlink" title="_config.yml文件配置"></a>_config.yml文件配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="comment">#url: https://winward-king.github.io/</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://winward.gitee.io</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><p>如果域名带子目录，那么还需要多一步设置：<br>在站点配置文件中找到如下选项，<code>url</code>设置为你的完整域名，<code>root</code>设置为你的子目录。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://winward.gitee.io/hexo_blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/hexo_blog/</span></span><br></pre></td></tr></table></figure><p>或者用html语法， <code>root: . </code>(root冒号空格点)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://winward.gitee.io/hexo_blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">.</span></span><br></pre></td></tr></table></figure><p>推送配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line"><span class="comment">##    coding: </span></span><br><span class="line"><span class="comment">##    github: https://github.com/Winward-King/Winward-King.github.io.git </span></span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">https://gitee.com/Winward/winward.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h1 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h1><p>对于GitHub Pages，它支持自动更新，无需额外操作，稍等片刻后访问即可。<br>对于Gitee Pages，由于不支持自动更新，每次执行命令部署后需要手动点击更新，等待更新完成后访问地址即可看到效果。</p><h1 id="hexo部署到gitee没有样式"><a href="#hexo部署到gitee没有样式" class="headerlink" title="hexo部署到gitee没有样式"></a>hexo部署到gitee没有样式</h1><h2 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h2><ol><li>打开gitee生成的hexo网页，也就是我们的博客url，按 F12 进入开发者工具有好多404，一定是请求路径有问题</li><li>点击Network –&gt; 点击某个资源 –&gt; 查看Headers路径，</li><li>配置子目录路径</li><li>重新部署，问题解决</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Kali进行WIFI渗透测试</title>
      <link href="/2022/02/24/Linux/02KaliForWIFI/"/>
      <url>/2022/02/24/Linux/02KaliForWIFI/</url>
      
        <content type="html"><![CDATA[<h1 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h1><ol><li>电脑</li><li>USB无线上网卡（必备）</li><li>kali系统</li><li>密码字典</li></ol><h1 id="WIFI安全分析"><a href="#WIFI安全分析" class="headerlink" title="WIFI安全分析"></a>WIFI安全分析</h1><ol><li>WEP（有线等效加密）——采用WEP64位或者128位数据加密。</li><li>WPA-PSK[TKIP]———采用预共享秘钥的WI-FI保护访问，采用WPA-PSK标准加密技术，加密类型为TKIP。</li><li>WPA-PSK[TKIP]+WPA2-PSK[AES]———允许客户端使用WPA-PSK[TKIP]或者WPA2-PSK[AES]。</li></ol><h1 id="Aircrack-ng-命令"><a href="#Aircrack-ng-命令" class="headerlink" title="Aircrack-ng 命令"></a>Aircrack-ng 命令</h1><h2 id="查看网卡信息"><a href="#查看网卡信息" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airmon-ng</span><br></pre></td></tr></table></figure><ul><li>列出网卡信息</li></ul><h2 id="开启网卡监控模式"><a href="#开启网卡监控模式" class="headerlink" title="开启网卡监控模式"></a>开启网卡监控模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airmon-ng start wlan0</span><br></pre></td></tr></table></figure><h2 id="查看网卡信息-1"><a href="#查看网卡信息-1" class="headerlink" title="查看网卡信息"></a>查看网卡信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><h2 id="扫描WIFI信号"><a href="#扫描WIFI信号" class="headerlink" title="扫描WIFI信号"></a>扫描WIFI信号</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airodump-ng wlan0mon</span><br></pre></td></tr></table></figure><h2 id="抓去握手包"><a href="#抓去握手包" class="headerlink" title="抓去握手包"></a>抓去握手包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">airodump-ng -w 握手包名 -c 信道 -–bssid 路由器MAC  wlan0mon </span><br></pre></td></tr></table></figure><p>出现WPA handshake说明抓包成功</p><ul><li>参数及含义<br> –ignore-negative-one<br> -c：指定信道<br> -w：指定抓去握手包的存放位置或者名字(一般以wifi命名)<br> –bssid：指定路由器的MAC</li></ul><h2 id="攻击WIFI"><a href="#攻击WIFI" class="headerlink" title="攻击WIFI"></a>攻击WIFI</h2><p>新建一个终端输入命令(另一个终端继续扫描)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aireplay-ng – -deatu 10 -a 路由器MAC -c 客户机MAC wlan0mon</span><br></pre></td></tr></table></figure><ul><li>参数及含义<br>–deatu：指定发送反认证包的个数，也可以使用-0(阿利伯数字0)来指定反认证包的个数<br>-a：指定路由器的MAC<br>-c：指定客户机的MAC</li></ul><h2 id="破解握手包"><a href="#破解握手包" class="headerlink" title="破解握手包"></a>破解握手包</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng -a -w dic WIFI名.cap</span><br></pre></td></tr></table></figure><ul><li>参数及含义<br> -a1：指定WEP加密方式<br> -a2：指定WPA-PSk加密方式<br> dic：字典的名字<br> WIFI名.cap：握手包</li></ul><div style="display:none"><ul><li><a href="https://www.bilibili.com/read/cv16764573?jump_opus=1">超简单教程！如何用kali破解邻居的WiFi密码</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity知识点梳理及思维导图</title>
      <link href="/2022/02/23/Unity3D/01Unity_Hexo/"/>
      <url>/2022/02/23/Unity3D/01Unity_Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>unity3d<ul><li>基础 API<ul><li>组件</li><li>坐标系</li><li>生命周期</li><li>鼠标事件</li><li>Time类</li><li>Vector3</li><li>Transform</li><li>Gameobject </li><li>Random</li><li>lnput类</li><li>Mathf类</li></ul></li><li>物理引擎(API)<ul><li>刚体</li><li>碰撞体</li><li>触发器</li><li>射线</li></ul></li><li>3D 数学<ul><li>向量和点</li><li>坐标系转换 [世界坐标系和本地坐标系]</li><li>欧拉角和四元数</li></ul></li><li>地形系统</li><li>导航系统<ul><li>NavMesh</li></ul></li><li>相机系统<ul><li>参数设定</li><li>多相机叠加</li><li>渲染层</li><li>排序层</li></ul></li><li>UI 系统<ul><li>UGUI（基础组件，复合组件）</li><li>NGUI</li><li>DOTween</li></ul></li><li>灯光系统</li><li>粒子系统</li><li>编辑器<ul><li>Editor 工具开发</li></ul></li><li>音频系统<ul><li>音频编辑系统</li><li>音频播放系统 [2D,3D]</li></ul></li><li>资源系统<ul><li>IO 操作（C#）</li><li>Resources（打在包里）</li><li>AssetBundle</li></ul></li><li>动画系统<ul><li>Animator 状态机</li><li>Animation 动画片段</li><li>Avatar</li><li>融合树</li><li>IK</li><li>事件插入</li></ul></li><li>Eventsystem<ul><li>2D 给 UI</li><li>3D 给相机</li></ul></li><li>Shader</li><li>优化技巧</li><li>服务器通信<ul><li>IP</li><li>TCP</li><li>UDP</li><li>HTTP</li></ul></li><li>项目打包<ul><li>PC</li><li>WebGL</li><li>IOS</li><li>Android</li></ul></li><li>热更新</li><li>虚拟现实</li></ul></li></ul></blockquote><h1 id="Unity介绍"><a href="#Unity介绍" class="headerlink" title="Unity介绍"></a>Unity介绍</h1><ul><li><a href="/2018/04/01/Unity3D/01Unity_Profile/" title="Unity简介">Unity简介</a></li></ul><h1 id="Working-in-Unity"><a href="#Working-in-Unity" class="headerlink" title="Working in Unity"></a>Working in Unity</h1><h2 id="Unity’s-interface-Unity界面"><a href="#Unity’s-interface-Unity界面" class="headerlink" title="Unity’s interface(Unity界面)"></a>Unity’s interface(Unity界面)</h2><ul><li><a href="/2018/04/02/Unity3D/02Unity_Usually/" title="Unity基础界面">Unity基础界面</a></li></ul><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><ul><li><a href="/2018/04/03/Unity3D/03Unity_API/" title="Unity常用的基础 API">Unity常用的基础 API</a></li><li><a href="/2018/04/03/Unity3D/03Unity_GgTt/" title="Gameobject,gameObject,Transform,transform的区别和关联">Gameobject,gameObject,Transform,transform的区别和关联</a></li><li><a href="/2018/04/03/Unity3D/03Unity_FindObj/" title="Unity查找物体的6种方法详解">Unity查找物体的6种方法详解</a></li><li><a href="/2018/04/04/Unity3D/04Unity_Lifecycle/" title="Unity脚本的生命周期">Unity脚本的生命周期</a></li></ul><h1 id="物理引擎"><a href="#物理引擎" class="headerlink" title="物理引擎"></a>物理引擎</h1><ul><li><a href="/2018/04/08/Unity3D/05Unity_Rigidbody/" title="Rigidbody（刚体组件）">Rigidbody（刚体组件）</a></li></ul><h1 id="3D数学"><a href="#3D数学" class="headerlink" title="3D数学"></a>3D数学</h1><ul><li><a href="/2018/04/11/Unity3D/10Unity_Math/" title="Unity中的3D数学">Unity中的3D数学</a></li><li><a href="/2018/04/09/Unity3D/08Unity_Angles/" title="欧拉角与四元数(eulerAngles and Quaternion)">欧拉角与四元数(eulerAngles and Quaternion)</a></li><li><a href="/2018/04/09/Unity3D/09Unity_Gimbal/" title="欧拉角万向节死锁(Gimbal Lock)">欧拉角万向节死锁(Gimbal Lock)</a></li></ul><h1 id="声音系统"><a href="#声音系统" class="headerlink" title="声音系统"></a>声音系统</h1><ul><li><a href="/2018/04/12/Unity3D/11Unity_Audio/" title="声音系统">声音系统</a></li></ul><h1 id="相机系统"><a href="#相机系统" class="headerlink" title="相机系统"></a>相机系统</h1><ul><li><a href="/2018/04/13/Unity3D/12Unity_Camera/" title="相机">相机</a></li><li><a href="/2018/04/14/Unity3D/13Unity_Ray/" title="射线">射线</a></li></ul><h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><ul><li><a href="/2018/04/16/Unity3D/16Unity_UI/" title="UI基础知识">UI基础知识</a></li><li><a href="/2018/04/16/Unity3D/17Unity_UI/" title="Unity中UI基础控件">Unity中UI基础控件</a></li></ul><h1 id="场景搭建"><a href="#场景搭建" class="headerlink" title="场景搭建"></a>场景搭建</h1><ul><li><a href="/2018/04/16/Unity3D/15Unity_Navigation/" title="导航系统">导航系统</a></li></ul><h1 id="动画系统"><a href="#动画系统" class="headerlink" title="动画系统"></a>动画系统</h1><ul><li><a href="/2018/04/16/Unity3D/14Unity_Animation/" title="动画系统(Animation 和 Animator)">动画系统(Animation 和 Animator)</a></li></ul><h1 id="Editor-编辑器，-工具开发"><a href="#Editor-编辑器，-工具开发" class="headerlink" title="Editor(编辑器， 工具开发)"></a>Editor(编辑器， 工具开发)</h1><ul><li><a href="/2018/04/19/Unity3D/22Unity_Editor/" title="Editor">Editor</a></li></ul><h1 id="资源系统"><a href="#资源系统" class="headerlink" title="资源系统"></a>资源系统</h1><ul><li><a href="/2018/04/19/Unity3D/20Unity_XML/" title="XML在Unity中的应用">XML在Unity中的应用</a></li><li><a href="/2018/04/19/Unity3D/21Unity_JSON/" title="JSON在Unity中的应用(LitJson)">JSON在Unity中的应用(LitJson)</a></li><li><a href="/2018/04/23/Unity3D/30Unity_files/" title="Unity中特殊的文件夹">Unity中特殊的文件夹</a></li></ul><h1 id="Graphics-图形"><a href="#Graphics-图形" class="headerlink" title="Graphics(图形)"></a>Graphics(图形)</h1><h2 id="Render-pipelines-渲染管线"><a href="#Render-pipelines-渲染管线" class="headerlink" title="Render pipelines(渲染管线)"></a>Render pipelines(渲染管线)</h2><h2 id="Shader-着色器"><a href="#Shader-着色器" class="headerlink" title="Shader(着色器)"></a>Shader(着色器)</h2><ul><li><a href="/2018/04/19/Unity3D/19Unity_Shader/" title="Shader入门浅析">Shader入门浅析</a></li></ul><h1 id="服务器通信"><a href="#服务器通信" class="headerlink" title="服务器通信"></a>服务器通信</h1><ul><li><a href="/2018/04/20/Unity3D/24Unity_HTTP/" title="Unity中的HTTP网络通信">Unity中的HTTP网络通信</a></li><li><a href="/2018/04/19/Unity3D/25Unity_IP/" title="IP">IP</a></li><li><a href="/2018/04/19/Unity3D/26Unity_TCP/" title="TCP">TCP</a></li><li><a href="/2018/04/19/Unity3D/27Unity_UDP/" title="UDP">UDP</a></li></ul><h1 id="面向对象-概念及实例"><a href="#面向对象-概念及实例" class="headerlink" title="面向对象(概念及实例)"></a>面向对象(概念及实例)</h1><ul><li><a href="/2020/04/05/Unity3D/06Unity_OOP/" title="面向对象 Object Oriented">面向对象 Object Oriented</a></li></ul><h1 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h1><ul><li><a href="/2018/04/05/Unity3D/07Unity_DOTween/" title="DoTween">DoTween</a></li><li><a href="/2018/04/05/Unity3D/07Unity_FairyGUI/" title="FairyGUI">FairyGUI</a></li><li><a href="/2018/04/05/Unity3D/07Unity_PlayMaker/" title="PlayMaker">PlayMaker</a></li><li><a href="/2023/04/20/Unity3D/07Unity_AmplifyShaderEditor/" title="Amplify Shader Editor">Amplify Shader Editor</a></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><a href="/2022/03/03/Unity3D/01Unity_Skills/" title="Unity开发涉及技能栈总结">Unity开发涉及技能栈总结</a></li></ul><div style="display:none">- 注意，post_link 路径改变会让HEXO编译报错</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win10内网环境下，上行和下载带宽不对等</title>
      <link href="/2022/02/23/Aio/01SynologyNet/"/>
      <url>/2022/02/23/Aio/01SynologyNet/</url>
      
        <content type="html"><![CDATA[<h1 id="问题状况"><a href="#问题状况" class="headerlink" title="问题状况"></a>问题状况</h1><ul><li>Win10环境下，上行和下载带宽不对等</li><li>复制和下载电影时带宽不对等</li></ul><h1 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h1><ol><li>电脑硬件相同，双系统</li><li>测试环境Win10 1909 vhd 版 和 win10 </li><li>Esxi环境下群晖系统</li><li>https协议 和 网络文件夹共享</li></ol><h1 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h1><ol><li><p>在Win10 1909 vhd 版系统，https协议和网络文件共享测试结果：上行速度80 MB&#x2F;S 下载速度 115MB&#x2F;S</p></li><li><p>在另一个win10系统中，https协议和网络文件共享测试结果：上行速度100 MB&#x2F;S 下载速度 100MB&#x2F;S</p></li></ol><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ol><li>win10设置重置网络</li><li>命令行重置网络</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh winsock reset</span><br></pre></td></tr></table></figure><ol start="3"><li>升级网卡驱动程序&#x2F;卸载网卡驱动程序（解决问题）</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Nas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> esxi </tag>
            
            <tag> synology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali</title>
      <link href="/2022/02/22/Linux/01Kali/"/>
      <url>/2022/02/22/Linux/01Kali/</url>
      
        <content type="html"><![CDATA[<h1 id="Kali"><a href="#Kali" class="headerlink" title="Kali"></a>Kali</h1><ul><li>Kali Linux是基于Debian的Linux发行版， 设计用于数字取证操作系统。每一季度更新一次。由Offensive Security Ltd维护和资助。最先由Offensive Security的Mati Aharoni和Devon Kearns通过重写BackTrack来完成，BackTrack是他们之前写的用于取证的Linux发行版 。</li><li>Kali Linux预装了许多渗透测试软件，包括nmap 、Wireshark 、John the Ripper，以及Aircrack-ng.用户可通过硬盘、live CD或live USB运行Kali Linux。Kali Linux既有32位和64位的镜像。可用于x86 指令集。同时还有基于ARM架构的镜像，可用于树莓派和三星的ARM Chromebook</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><a href="http://www.kali.org/">www.kali.org</a></li></ul><h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><h2 id="VMWARE中kali常用设置"><a href="#VMWARE中kali常用设置" class="headerlink" title="VMWARE中kali常用设置"></a>VMWARE中kali常用设置</h2><h2 id="设置系统语言为中文"><a href="#设置系统语言为中文" class="headerlink" title="设置系统语言为中文"></a>设置系统语言为中文</h2><ol><li>输入命令：<code>sudo dpkg-reconfigure locales</code> 按回车键</li><li>然后输入kali密码：（默认密码是<code>kali</code>）按回车键  （注：输入密码时，密码显示是透明的，输入完，按回车就可以了）</li><li>用键盘 上下键，找到   <code>zh_CN.UTF-8 </code> 按 “空格” 选中。出现 * 号代表选中，然后按回车</li><li>这里我们再次选择 zh_CN.UTF-8  按回车，就完成了</li><li>弹出这么页面就表示设置完成了，然后输入<code>reboot</code>重启就可以</li></ol><div style="display:none">- https://blog.csdn.net/weixin_54621472/article/details/127492826</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客图床</title>
      <link href="/2022/02/20/Hexo/14HexoPicHost/"/>
      <url>/2022/02/20/Hexo/14HexoPicHost/</url>
      
        <content type="html"><![CDATA[<h1 id="PicGo-云服务-图床"><a href="#PicGo-云服务-图床" class="headerlink" title="PicGo+云服务&#x3D;图床"></a>PicGo+云服务&#x3D;图床</h1><h1 id="群晖图床"><a href="#群晖图床" class="headerlink" title="群晖图床"></a>群晖图床</h1><h1 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h1><h1 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h1><h1 id="QQ空间图床（不推荐）"><a href="#QQ空间图床（不推荐）" class="headerlink" title="QQ空间图床（不推荐）"></a>QQ空间图床（不推荐）</h1><ol><li>需要开通黄钻才能开通外链</li><li>图片格式加载慢</li></ol><h1 id="Github图床"><a href="#Github图床" class="headerlink" title="Github图床"></a>Github图床</h1><ol><li>注意仓库图片不要超过1GB，否则会被仓检</li></ol><h1 id="Gitee图床"><a href="#Gitee图床" class="headerlink" title="Gitee图床"></a>Gitee图床</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> cdn </tag>
            
            <tag> picgo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客常用插件</title>
      <link href="/2022/02/20/Hexo/13HexoPlugin/"/>
      <url>/2022/02/20/Hexo/13HexoPlugin/</url>
      
        <content type="html"><![CDATA[<h1 id="butterfly主题适配插件"><a href="#butterfly主题适配插件" class="headerlink" title="butterfly主题适配插件"></a>butterfly主题适配插件</h1><ul><li>主题开发者适配的插件<br><a href="https://github.com/jerryc127/butterfly-plugins">https://github.com/jerryc127/butterfly-plugins</a></li></ul><h1 id="搜索插件"><a href="#搜索插件" class="headerlink" title="搜索插件"></a>搜索插件</h1><h2 id="本地搜索插件"><a href="#本地搜索插件" class="headerlink" title="本地搜索插件"></a>本地搜索插件</h2><ul><li>hexo-generator-search</li><li>github项目地址<br><a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a></li></ul><h1 id="字数统计插件"><a href="#字数统计插件" class="headerlink" title="字数统计插件"></a>字数统计插件</h1><h1 id="访客地图"><a href="#访客地图" class="headerlink" title="访客地图"></a>访客地图</h1><h1 id="音乐播放器Aplayer"><a href="#音乐播放器Aplayer" class="headerlink" title="音乐播放器Aplayer"></a>音乐播放器Aplayer</h1><h1 id="评论区"><a href="#评论区" class="headerlink" title="评论区"></a>评论区</h1><h1 id="Live2D"><a href="#Live2D" class="headerlink" title="Live2D"></a>Live2D</h1><ul><li>模型预览<br><a href="https://www.cnblogs.com/Friends-A/p/11054968.html#live2dwidgetmodelz16_54">https://www.cnblogs.com/Friends-A/p/11054968.html#live2dwidgetmodelz16_54</a></li></ul><h1 id="页脚美化"><a href="#页脚美化" class="headerlink" title="页脚美化"></a>页脚美化</h1><p>hexo-butterfly-footer-beautify<br>git徽标 计时器</p><h1 id="豆瓣插件"><a href="#豆瓣插件" class="headerlink" title="豆瓣插件"></a>豆瓣插件</h1><ul><li><p>hexo-douban</p></li><li><p>github项目地址<br><a href="https://github.com/mythsman/hexo-douban">https://github.com/mythsman/hexo-douban</a></p></li><li><p>hexo-butterfly-douban</p></li><li><p>github项目地址<br><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban#hexo-butterfly-douban">https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban#hexo-butterfly-douban</a></p></li><li><p>注意使用豆瓣插件后 hexo d 命令不能使用 得用 hexo deploy</p></li></ul><h1 id="思维导图插件"><a href="#思维导图插件" class="headerlink" title="思维导图插件"></a>思维导图插件</h1><h1 id="设置分页与显示文章数"><a href="#设置分页与显示文章数" class="headerlink" title="设置分页与显示文章数"></a>设置分页与显示文章数</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主页每页显示文章数</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">5</span></span><br><span class="line"><span class="comment"># archive分页每页显示文章数</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">5</span></span><br><span class="line"><span class="comment"># tag分页每页显示文章数</span></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="comment"># category分页每页显示文章数</span></span><br><span class="line"><span class="attr">category_generator:</span> </span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> hexo </tag>
            
            <tag> cdn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客的CDN多线优化</title>
      <link href="/2022/02/20/Hexo/12HexoCDN/"/>
      <url>/2022/02/20/Hexo/12HexoCDN/</url>
      
        <content type="html"><![CDATA[<h1 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h1><h1 id="参考教程"><a href="#参考教程" class="headerlink" title="参考教程"></a>参考教程</h1><ul><li><a href="https://blog.juanertu.com/archives/54c51cfa.html">https://blog.juanertu.com/archives/54c51cfa.html</a></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> hexo </tag>
            
            <tag> cdn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决关于Hexo博客浏览卡顿的记录</title>
      <link href="/2022/02/19/Hexo/11HexoRepair/"/>
      <url>/2022/02/19/Hexo/11HexoRepair/</url>
      
        <content type="html"><![CDATA[<h1 id="关于占位图导致的浏览卡顿"><a href="#关于占位图导致的浏览卡顿" class="headerlink" title="关于占位图导致的浏览卡顿"></a>关于占位图导致的浏览卡顿</h1><h2 id="问题状况"><a href="#问题状况" class="headerlink" title="问题状况"></a>问题状况</h2><ol><li>图片没有加载出来的时候一点不卡（禁用图片加载）</li><li>图片加载进去滑动就会很卡</li></ol><h2 id="可能原因"><a href="#可能原因" class="headerlink" title="可能原因"></a>可能原因</h2><ol><li>Git服务器在国外的原因</li><li>GFW中国防火长城</li><li>图片缩放的过渡效果导致卡顿</li></ol><h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><ol><li>Ping网址，发觉延迟和访问github差不多</li><li>调用后台发现，图片加载时间过长</li><li>占位图反应延时居然比Github的图床时间都长</li></ol><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><ol><li>取消使用占位图，制作图床</li><li>cdn.jsdelivr</li></ol><h1 id="访问优化方案"><a href="#访问优化方案" class="headerlink" title="访问优化方案"></a>访问优化方案</h1><ol><li>压缩图片</li><li>制作图床</li><li>cdn部署</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> hexo </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客评论区</title>
      <link href="/2022/02/19/Hexo/10HexoComments/"/>
      <url>/2022/02/19/Hexo/10HexoComments/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Twikoo"><a href="#1-Twikoo" class="headerlink" title="1.Twikoo"></a>1.Twikoo</h1><h2 id="环境配置（国内访问速度较慢）"><a href="#环境配置（国内访问速度较慢）" class="headerlink" title="环境配置（国内访问速度较慢）"></a>环境配置（国内访问速度较慢）</h2><ul><li><a href="https://twikoo.js.org/">https://twikoo.js.org/</a></li><li><a href="https://cloud.mongodb.com/">https://cloud.mongodb.com/</a></li><li><a href="https://vercel.com/">https://vercel.com/</a></li></ul><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=205905942&bvid=BV1Fh411e7ZH&cid=349476933&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h2 id="文字教程"><a href="#文字教程" class="headerlink" title="文字教程"></a>文字教程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意:Vercel 部署的环境需配合 1.4.0 以上版本的 twikoo.js 使用</span><br></pre></td></tr></table></figure><ol><li>申请 MongoDB (opens new window)账号</li><li>创建免费 MongoDB 数据库，区域推荐选择 AWS &#x2F; N. Virginia (us-east-1)</li><li>在 Clusters 页面点击 CONNECT，按步骤设置允许所有 IP 地址的连接（为什么？ (opens new window)），创建数据库用户，并记录数据库连接字符串，请将连接字符串中的 <password> 修改为数据库密码</li><li>申请 Vercel (opens new window)账号</li><li>点击以下按钮将 Twikoo 一键部署到 Vercel(opens new window)</li><li>进入 Settings - Environment Variables，添加环境变量 MONGODB_URI，值为第 3 步的数据库连接字符串</li><li>进入 Overview，点击 Domains 下方的链接，如果环境配置正确，可以看到 “Twikoo 云函数运行正常” 的提示<br>Vercel Domains（包含 https:&#x2F;&#x2F; 前缀，例如 <a href="https://xxx.vercel.app)即为您的环境/">https://xxx.vercel.app）即为您的环境</a> id</li></ol><h2 id="Vercel-被墙"><a href="#Vercel-被墙" class="headerlink" title="Vercel 被墙"></a>Vercel 被墙</h2><ul><li>评论区需要科学魔法才能访问</li><li>可以用域名代理</li></ul><h2 id="针对-Vercel-部署的更新方式"><a href="#针对-Vercel-部署的更新方式" class="headerlink" title="针对 Vercel 部署的更新方式"></a>针对 Vercel 部署的更新方式</h2><ol><li>进入 <a href="https://vercel.com/dashboard">Vercel 仪表板</a> - twikoo - Settings - Git</li><li>点击 Connected Git Repository 下方的仓库地址</li><li>打开 package.json，点击编辑</li><li>将 <code>&quot;twikoo-vercel&quot;: &quot;latest&quot;</code> 其中的 <code>latest</code> 修改为最新版本号。点击 Commit changes</li><li>部署会自动触发，可以回到 <a href="https://vercel.com/dashboard">Vercel 仪表板</a>，查看部署状态</li><li>注意Vercel的Node.js 版本，版本过低会导致部署失败</li><li>也可以在Vercel手动重新部署</li></ol><h2 id="修改Twikoo密码"><a href="#修改Twikoo密码" class="headerlink" title="修改Twikoo密码"></a>修改Twikoo密码</h2><ul><li><p>请使用数据库管理软件，输入 MongoDB 连接字符串来连接数据库，打开 config 表，删除 ADMIN_PASS 字段，保存，即可重置密码。</p></li><li><p>参考：<a href="https://github.com/twikoojs/twikoo/discussions/60">mongodb修改Twikoo密码</a></p></li></ul><h2 id="关于评论区头像"><a href="#关于评论区头像" class="headerlink" title="关于评论区头像"></a>关于评论区头像</h2><ul><li><p>请前往 <a href="https://weavatar.com/">https://weavatar.com</a> 通过邮箱注册并设定头像，评论时，请留下相同的邮箱。</p></li><li><p>访客还可以通过输入数字 QQ 邮箱地址，使用 QQ 头像发表评论。</p></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> twikoo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Inject添加样式表魔改主题</title>
      <link href="/2022/02/19/Hexo/09HexoInject/"/>
      <url>/2022/02/19/Hexo/09HexoInject/</url>
      
        <content type="html"><![CDATA[<h1 id="通过添加css更改主题样式"><a href="#通过添加css更改主题样式" class="headerlink" title="通过添加css更改主题样式"></a>通过添加css更改主题样式</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页背景 */</span></span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表白色透明度为0.3 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 所有背景（包括首页卡片、文章页、页面页等） */</span></span><br><span class="line">  <span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>, <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>, <span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>), <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>, <span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="comment">/* 以下代表白色透明度为0.3 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维博客常用网站汇总</title>
      <link href="/2022/02/19/Hexo/08HexoWWWTop01/"/>
      <url>/2022/02/19/Hexo/08HexoWWWTop01/</url>
      
        <content type="html"><![CDATA[<h1 id="博客框架文档"><a href="#博客框架文档" class="headerlink" title="博客框架文档"></a>博客框架文档</h1><ul><li>hexo-中文文档<br><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></li></ul><h1 id="butterfly主题文档"><a href="#butterfly主题文档" class="headerlink" title="butterfly主题文档"></a>butterfly主题文档</h1><ul><li>butterfly主题中文文档<br><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></li><li>butterfly主题Github项目地址<br><a href="https://github.com/jerryc127/butterfly.js.org">https://github.com/jerryc127/butterfly.js.org</a></li></ul><h1 id="图标网站"><a href="#图标网站" class="headerlink" title="图标网站"></a>图标网站</h1><ul><li><p>fontawesome-图标库<br><a href="https://fontawesome.com/icons?from=io">https://fontawesome.com/icons?from=io</a></p></li><li><p>iconfont-阿里巴巴矢量图标库<br><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></p></li></ul><h1 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h1><ul><li>tiny-图片无损压缩<br><a href="https://tinypng.com/">https://tinypng.com/</a></li></ul><h1 id="文档处理"><a href="#文档处理" class="headerlink" title="文档处理"></a>文档处理</h1><ul><li><p>HTML与Markdown转换<br><a href="https://www.bejson.com/convert/html2markdown/">https://www.bejson.com/convert/html2markdown/</a></p></li><li><p>HTML转为JADE&#x2F;PUG<br><a href="http://html2jade.org/">http://html2jade.org/</a></p></li></ul><h1 id="评论区管理"><a href="#评论区管理" class="headerlink" title="评论区管理"></a>评论区管理</h1><ul><li>twikoo<br><a href="https://twikoo.js.org/">https://twikoo.js.org/</a></li><li>mongodb<br><a href="https://cloud.mongodb.com/">https://cloud.mongodb.com/</a></li><li>vercel<br><a href="https://vercel.com/login">https://vercel.com/login</a></li></ul><h1 id="云服务"><a href="#云服务" class="headerlink" title="云服务"></a>云服务</h1><ul><li><p>腾讯云<br><a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a></p></li><li><p>阿里云<br><a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p></li><li><p>又拍云<br><a href="https://console.upyun.com/">https://console.upyun.com/</a></p></li><li><p>jsDelivr<br><a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a></p></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客配置Live2D</title>
      <link href="/2022/02/19/Hexo/07HexoLive2d/"/>
      <url>/2022/02/19/Hexo/07HexoLive2d/</url>
      
        <content type="html"><![CDATA[<h1 id="项目Git地址："><a href="#项目Git地址：" class="headerlink" title="项目Git地址："></a>项目Git地址：</h1><ul><li><a href="https://www.npmjs.com/package/hexo-helper-live2d">https://www.npmjs.com/package/hexo-helper-live2d</a></li></ul><h1 id="API-参考文档"><a href="#API-参考文档" class="headerlink" title="API 参考文档"></a>API 参考文档</h1><ul><li><a href="https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init">https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-init</a></li></ul><h1 id="配置文件常用参数"><a href="#配置文件常用参数" class="headerlink" title="配置文件常用参数"></a>配置文件常用参数</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">true</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span>  <span class="string">.\live2dmodels\live2d-widget-model-unitychan</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hHeadPos:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">vHeadPos:</span> <span class="number">0.618</span></span><br><span class="line">    <span class="comment"># npm-module package name live2d-widget-model-wanko</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> </span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">40</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">-20</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">scale:</span> <span class="number">0.5</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云相关问题与解决方案</title>
      <link href="/2022/02/19/Hexo/15TencentCloud/"/>
      <url>/2022/02/19/Hexo/15TencentCloud/</url>
      
        <content type="html"><![CDATA[<h1 id="腾讯云凭据已经占用"><a href="#腾讯云凭据已经占用" class="headerlink" title="腾讯云凭据已经占用"></a>腾讯云凭据已经占用</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">腾讯云凭据已经占用</span><br></pre></td></tr></table></figure><ul><li><p>Coding 创建账号与腾讯云账号合并<br><a href="https://help.coding.net/docs/member/personal-account/account-merger.html#faq">https://help.coding.net/docs/member/personal-account/account-merger.html#faq</a></p></li><li><p>   绑定相同邮箱</p></li><li><p>   确认合并账号</p></li><li><p>   注销腾讯云团队</p></li><li><p>   重新绑定腾讯云</p></li><li><p>绑定</p></li></ul><h1 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">未开通CDN服务,请开通后使用此接口(cdn[#ResourceNotFound.CdnUserNotExists])</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于yaml语法</title>
      <link href="/2022/02/18/Hexo/06HexoYAML/"/>
      <url>/2022/02/18/Hexo/06HexoYAML/</url>
      
        <content type="html"><![CDATA[<h1 id="yaml项目官网地址："><a href="#yaml项目官网地址：" class="headerlink" title="yaml项目官网地址："></a>yaml项目官网地址：</h1><p><a href="https://yaml.org/">https://yaml.org/</a></p><h1 id="yml语法"><a href="#yml语法" class="headerlink" title="yml语法"></a>yml语法</h1><p>简书转载<br><a href="https://www.jianshu.com/p/a65e692edd5a">https://www.jianshu.com/p/a65e692edd5a</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> yml </tag>
            
            <tag> yaml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO网页更加丝滑(PWA)</title>
      <link href="/2022/02/18/Hexo/05HexoPWA/"/>
      <url>/2022/02/18/Hexo/05HexoPWA/</url>
      
        <content type="html"><![CDATA[<h1 id="HEXO支持的PWA官网插件-hexo-offline"><a href="#HEXO支持的PWA官网插件-hexo-offline" class="headerlink" title="HEXO支持的PWA官网插件:hexo-offline"></a>HEXO支持的PWA官网插件:hexo-offline</h1><ul><li><p>Github项目地址<br><a href="https://github.com/JLHwung/hexo-offline">https://github.com/JLHwung/hexo-offline</a></p></li><li><p><code>hexo-offline</code> 是一个可以让<code>Hexo</code>博客拥有 <code>PWA </code>支持的插件，能够默认的把站点中<code>public</code>内的所有静态资源包括 <code>html、css、js、image </code>等文件缓存起来，达到离线（无网络环境）可访问的效果，拥有像原生APP一般的丝滑体验。</p></li></ul><h1 id="PWA介绍"><a href="#PWA介绍" class="headerlink" title="PWA介绍"></a>PWA介绍</h1><ul><li><p>PWA，即 Progressive Web App, 是提升 Web App 的体验的一种新方法，能给用户原生应用的体验。</p></li><li><p>理解： PWA不是某一项技术，或者某一个新的产物；而是一系列Web技术与标准的集合与应用。通过应用这些新的技术与标准，可以从安全、性能和体验三个方面，优化我们的Web App。所以，其实PWA本质上依然是一个Web App。</p></li></ul><p>PWA包含的技术：</p><ul><li>Web App Manifest</li><li>Service Worker</li><li>Cache API 缓存</li><li>Push、Notification 推送与通知</li><li>Background Sync 后台同步</li><li>响应式设计</li></ul><h1 id="PWA使用前提"><a href="#PWA使用前提" class="headerlink" title="PWA使用前提"></a>PWA使用前提</h1><p>你的博客全站资源必须为HTTPS，PWA支持的前提条件。</p><h1 id="PWA配置"><a href="#PWA配置" class="headerlink" title="PWA配置"></a>PWA配置</h1><p>作者: Jerry<br>連結: <a href="https://butterfly.js.org/posts/ceeb73f/#PWA">https://butterfly.js.org/posts/ceeb73f/#PWA</a><br>來源: Butterfly</p><p>要为Butterfly配上 PWA 特性, 你需要如下几个步骤:</p><ol><li><p>打开 hexo 工作目录</p></li><li><p><code>npm install hexo-offline --save</code> 或者 <code>yarn add hexo-offline</code></p></li><li><p>在根目录创建 <code>hexo-offline.config.cjs </code>文件，并增加以下内容。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// offline config passed to workbox-build.</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">globPatterns</span>: [<span class="string">&#x27;**/*.&#123;js,html,css,png,jpg,gif,svg,webp,eot,ttf,woff,woff2&#125;&#x27;</span>],</span><br><span class="line">  <span class="comment">// 静态文件合集，如果你的站点使用了例如 webp 格式的文件，请将文件类型添加进去。</span></span><br><span class="line">  <span class="attr">globDirectory</span>: <span class="string">&#x27;public&#x27;</span>,</span><br><span class="line">  <span class="attr">swDest</span>: <span class="string">&#x27;public/service-worker.js&#x27;</span>,</span><br><span class="line">  <span class="attr">maximumFileSizeToCacheInBytes</span>: <span class="number">10485760</span>, <span class="comment">// 缓存的最大文件大小，以字节为单位。</span></span><br><span class="line">  <span class="attr">skipWaiting</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">clientsClaim</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">runtimeCaching</span>: [ <span class="comment">// 如果你需要加载 CDN 资源，请配置该选项，如果没有，可以不配置。</span></span><br><span class="line">    <span class="comment">// CDNs - should be CacheFirst, since they should be used specific versions so should not change</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">urlPattern</span>: <span class="regexp">/^https:\/\/cdn\.example\.com\/.*/</span>, <span class="comment">// 可替换成你的 URL</span></span><br><span class="line">      <span class="attr">handler</span>: <span class="string">&#x27;CacheFirst&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多内容请查看 <a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a>的官方文档</p><ol start="4"><li>在主题配置文件中开启 pwa 选项。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">manifest:</span> <span class="string">/img/pwa/manifest.json</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/img/pwa/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">favicon_32_32:</span> <span class="string">/img/pwa/32.png</span></span><br><span class="line">  <span class="attr">favicon_16_16:</span> <span class="string">/img/pwa/16.png</span></span><br><span class="line">  <span class="attr">mask_icon:</span> <span class="string">/img/pwa/safari-pinned-tab.svg</span></span><br></pre></td></tr></table></figure><ol start="5"><li>在创建source&#x2F;目录中创建manifest.json文件。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;:</span> <span class="string">&quot;string&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;short_name&quot;:</span> <span class="string">&quot;Junzhou&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;theme_color&quot;:</span> <span class="string">&quot;#49b1f5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;background_color&quot;:</span> <span class="string">&quot;#49b1f5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;display&quot;:</span> <span class="string">&quot;standalone&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;scope&quot;:</span> <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;start_url&quot;:</span> <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;icons&quot;:</span> [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/36.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;36x36&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/48.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;48x48&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/72.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;72x72&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/96.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;96x96&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/144.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;144x144&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/192.png&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;192x192&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;src&quot;:</span> <span class="string">&quot;images/pwaicons/512.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;sizes&quot;:</span> <span class="string">&quot;512x512&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;type&quot;:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;splash_pages&quot;:</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>你也可以通过 <a href="https://app-manifest.firebaseapp.com/">Web App Manifest</a>快速创建<code>manifest.json</code>。（Web App Manifest 要求至少包含一个 512*512 像素的图标）</p><ol start="6"><li>可以通过<code>Chrome</code>插件<code>Lighthouse</code>检查 PWA 配置是否生效以及配置是否正确。<ul><li>打开博客页面</li><li>启动<code>Lighthouse</code>插件 (Lighthouse插件要求至少包含一个 512*512 像素的图标)<br>关于 PWA（渐进式增强 Web 应用）的更多内容请参閲 <a href="https://developers.google.com/web/tools/lighthouse/audits/address-bar">Google Tools for Web Developers</a></li></ul></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> pwa </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客搭建(3):主题配置</title>
      <link href="/2022/02/17/Hexo/04HexoTheme/"/>
      <url>/2022/02/17/Hexo/04HexoTheme/</url>
      
        <content type="html"><![CDATA[<h1 id="主题的安装与更换"><a href="#主题的安装与更换" class="headerlink" title="主题的安装与更换"></a>主题的安装与更换</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><ol><li><p>挑选主题，hexo 官网或 github 下载主题。（HEXO theme）</p><ul><li>主题支持git、gitee、npm多种方式安装</li><li>这里推荐npm（以插件的形式安装）</li></ul></li><li><p>下载解压，放到自己博客目录下的 themes(非npm安装)文件夹。</p><ul><li>通过<code>npm</code>安装的是在<code>node_modules</code>插件目录下</li></ul></li><li><p>主题配置，修改_config.yml 参数。</p></li><li><p>查看主题文档，进行主题配置(<a href="https://butterfly.js.org/">butterly主题文档</a>)。</p></li></ol><h2 id="修改-config-yml更换butterfly主题"><a href="#修改-config-yml更换butterfly主题" class="headerlink" title="修改_config.yml更换butterfly主题"></a>修改_config.yml更换butterfly主题</h2><ul><li>默认配置主题</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">theme:landscape</span></span><br></pre></td></tr></table></figure><ul><li>更换butterfly主题</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span> <span class="comment">#更换主题名称</span></span><br></pre></td></tr></table></figure><h1 id="config-yml-配置参数"><a href="#config-yml-配置参数" class="headerlink" title="_config.yml 配置参数"></a>_config.yml 配置参数</h1><h2 id="Hexo官方配置说明文档"><a href="#Hexo官方配置说明文档" class="headerlink" title="Hexo官方配置说明文档"></a>Hexo官方配置说明文档</h2><ul><li>Hexo官方中文文档<br> <a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></li></ul><h2 id="网站资料"><a href="#网站资料" class="headerlink" title="网站资料"></a>网站资料</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site修改网站标题、副标题、作者、语言等</span></span><br><span class="line"><span class="attr">title:</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> </span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN/en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="config-butterfly-yml-配置参数"><a href="#config-butterfly-yml-配置参数" class="headerlink" title="_config.butterfly.yml 配置参数"></a>_config.butterfly.yml 配置参数</h1><ul><li>butterfly官方配置说明文档<br><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></li><li>Github项目地址<br><a href="https://github.com/jerryc127/butterfly.js.org">https://github.com/jerryc127/butterfly.js.org</a></li></ul><h1 id="个人常用配置"><a href="#个人常用配置" class="headerlink" title="个人常用配置"></a>个人常用配置</h1><h2 id="代码高度"><a href="#代码高度" class="headerlink" title="代码高度"></a>代码高度</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_height_limit:</span> <span class="number">200</span> <span class="comment"># unit: px</span></span><br></pre></td></tr></table></figure><h2 id="社交图标-唤醒QQ对话"><a href="#社交图标-唤醒QQ对话" class="headerlink" title="社交图标 唤醒QQ对话"></a>社交图标 唤醒QQ对话</h2><ul><li><p>开通QQ推广<br><a href="https://shang.qq.com/v3/index.html">https://shang.qq.com/v3/index.html</a></p></li><li><p><a href="https://blog.csdn.net/zhucehenfanren/article/details/78233582">参考文章</a></p></li><li><p>将开通后链接复制进项目即可唤起qq临时会话</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># social settings (社交圖標設置)</span></span><br><span class="line"><span class="comment"># formal:</span></span><br><span class="line"><span class="comment">#   icon: link || the description</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">   <span class="attr">fa-brands fa-qq:</span> <span class="string">QQ推广的链接复制到这</span> <span class="string">||QQ</span></span><br></pre></td></tr></table></figure><h2 id="主页文章节选"><a href="#主页文章节选" class="headerlink" title="主页文章节选"></a>主页文章节选</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主页文章节选(自动节选和文章页description)</span></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">description：</span> <span class="string">只显示description</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">both：</span> <span class="string">优先选择description，如果没有配置description，则显示自动节选的内容</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">auto_excerpt：只显示自动节选</span></span><br><span class="line"><span class="literal">false</span><span class="string">：</span> <span class="string">不显示文章内容</span></span><br><span class="line"><span class="comment"># false: do not show the article introduction</span></span><br><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br></pre></td></tr></table></figure><h2 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><h2 id="文章过期提醒"><a href="#文章过期提醒" class="headerlink" title="文章过期提醒"></a>文章过期提醒</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Displays outdated notice for a post (文章过期提醒)</span></span><br><span class="line"><span class="attr">noticeOutdate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span> <span class="comment"># style: simple/flat</span></span><br><span class="line">  <span class="attr">limit_day:</span> <span class="number">365</span> <span class="comment"># When will it be shown</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span> <span class="comment"># position: top/bottom</span></span><br><span class="line">  <span class="attr">message_prev:</span> <span class="string">It</span> <span class="string">has</span> <span class="string">been</span></span><br><span class="line">  <span class="attr">message_next:</span> <span class="string">days</span> <span class="string">since</span> <span class="string">the</span> <span class="string">last</span> <span class="string">update,</span> <span class="string">the</span> <span class="string">content</span> <span class="string">of</span> <span class="string">the</span> <span class="string">article</span> <span class="string">may</span> <span class="string">be</span> <span class="string">outdated.</span></span><br></pre></td></tr></table></figure><h2 id="最新评论"><a href="#最新评论" class="headerlink" title="最新评论"></a>最新评论</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Aside widget - Newest Comments</span></span><br><span class="line"><span class="attr">newest_comments:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">storage:</span> <span class="number">10</span> <span class="comment"># unit: mins, save data to localStorage</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="标签外挂"><a href="#标签外挂" class="headerlink" title="标签外挂"></a>标签外挂</h2><h3 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h3><div class="note warning flat"><p>2.2.0以上提供</p><p>請注意，tag-hide內的標簽外掛content內都不建議有h1 - h6 等標題。因為Toc會把隱藏內容標題也顯示出來，而且當滾動屏幕時，如果隱藏內容沒有顯示出來，會導致Toc的滾動出現異常。</p></div><p>如果你想把一些文字、內容隱藏起來，並提供按鈕讓用戶點擊顯示。可以使用這個標籤外掛。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">Inline</button><button type="button" class="tab">Block</button><button type="button" class="tab">Toggle</button></div><div class="tab-contents"><div class="tab-item-content active"><p><code>inline</code> 在文本里面添加按鈕隱藏內容，只限文字</p><p>( content不能包含英文逗號，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>content: 文本內容</p></li><li><p>display: 按鈕顯示的文字(可選)</p></li><li><p>bg: 按鈕的背景顏色(可選)</p></li><li><p>color: 按鈕文字的顏色(可選)</p></li></ul><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">哪個英文字母最酷？ &#123;% hideInline 因為西裝褲(C裝酷),查看答案,#FF7242,#fff %&#125;</span><br><span class="line"></span><br><span class="line">門裏站着一個人? &#123;% hideInline 閃 %&#125;</span><br></pre></td></tr></table></figure><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案</button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裏站着一個人? <span class="hide-inline"><button type="button" class="hide-button" style="">Click</button><span class="hide-content">閃</span></span></p></div><div class="tab-item-content"><p><code>block</code>獨立的block隱藏內容，可以隱藏很多內容，包括圖片，代碼塊等等</p><p>( display 不能包含英文逗號，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本內容</li><li>display: 按鈕顯示的文字(可選)</li><li>bg: 按鈕的背景顏色(可選)</li><li>color: 按鈕文字的顏色(可選)</li></ul><blockquote><p>Demo</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看答案</span><br><span class="line">&#123;% hideBlock 查看答案 %&#125;</span><br><span class="line">傻子，怎麼可能有答案</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案</button><div class="hide-content"><p>傻子，怎麼可能有答案</p></div></div></div><div class="tab-item-content"><blockquote><p>2.3.0以上支持</p></blockquote><p>如果你需要展示的內容太多，可以把它隱藏在收縮框裏，需要時再把它展開。</p><p>( display 不能包含英文逗號，可用<code>&amp;sbquo;</code>)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Demo</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle Butterfly安裝方法 %&#125;</span><br><span class="line">在你的博客根目錄裏</span><br><span class="line"></span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">如果想要安裝比較新的dev分支，可以</span><br><span class="line"></span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br><span class="line"></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><details class="toggle" ><summary class="toggle-button" style="">Butterfly安裝方法</summary><div class="toggle-content"><p>在你的博客根目錄裏</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安裝比較新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="timeline"><a href="#timeline" class="headerlink" title="timeline"></a>timeline</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">timeline</span> <span class="number">2022</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">timeline</span> <span class="number">01</span><span class="number">-02</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">这是测试页面</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">endtimeline</span> <span class="string">--&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endtimeline</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="美化页面显示"><a href="#美化页面显示" class="headerlink" title="美化页面显示"></a>美化页面显示</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 美化页面显示</span></span><br><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># site/post</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f0c1&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span> <span class="string">&quot;#F47466&quot;</span></span><br></pre></td></tr></table></figure><h2 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载动画 Loading Animation</span></span><br><span class="line"><span class="attr">preloader:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="预加载"><a href="#预加载" class="headerlink" title="预加载"></a>预加载</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://instant.page/</span></span><br><span class="line"><span class="comment"># prefetch (預加載)</span></span><br><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="Lazyload-圖片懶加載"><a href="#Lazyload-圖片懶加載" class="headerlink" title="Lazyload (圖片懶加載)"></a>Lazyload (圖片懶加載)</h2><h1 id="https-github-com-verlok-vanilla-lazyload"><a href="#https-github-com-verlok-vanilla-lazyload" class="headerlink" title="https://github.com/verlok/vanilla-lazyload"></a><a href="https://github.com/verlok/vanilla-lazyload">https://github.com/verlok/vanilla-lazyload</a></h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Lazyload (圖片懶加載)</span></span><br><span class="line"><span class="comment"># https://github.com/verlok/vanilla-lazyload</span></span><br><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span> <span class="comment"># site/post 全站和文章</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">/img/loading.gif</span>   <span class="comment">#加载图片的路径</span></span><br><span class="line">  <span class="attr">blur:</span> <span class="literal">false</span>  <span class="comment">#模糊(最好关闭)</span></span><br></pre></td></tr></table></figure><h2 id="Archives时间轴页面img配置"><a href="#Archives时间轴页面img配置" class="headerlink" title="Archives时间轴页面img配置"></a>Archives时间轴页面img配置</h2><h1 id="The-banner-image-of-archive-page"><a href="#The-banner-image-of-archive-page" class="headerlink" title="The banner image of archive page"></a>The banner image of archive page</h1><p>#archive_img: <a href="https://cdn.jsdelivr.net/gh/Winward-King/picture_host@master/image/164521428629922.jpg">https://cdn.jsdelivr.net/gh/Winward-King/picture_host@master/image/164521428629922.jpg</a><br>archive_img: &#x2F;images&#x2F;Wlop&#x2F;70.jpg</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客搭建(2):博客配置GIT及备份</title>
      <link href="/2022/02/17/Hexo/03HexoGit/"/>
      <url>/2022/02/17/Hexo/03HexoGit/</url>
      
        <content type="html"><![CDATA[<h1 id="博客的Git配置"><a href="#博客的Git配置" class="headerlink" title="博客的Git配置"></a>博客的Git配置</h1><ul><li>Git的配置与使用,可以参考我另一篇文章，在此不在赘述。</li><li>Git配置与使用</li></ul><h1 id="Hexo-Github-配置"><a href="#Hexo-Github-配置" class="headerlink" title="Hexo Github 配置"></a>Hexo Github 配置</h1><ul><li>创建一个仓库，名为：自己用户名 + .github.io</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如我的就是</span></span><br><span class="line"><span class="string">winward-king.github.io</span></span><br></pre></td></tr></table></figure><h2 id="修改博客-config-yml-文件的配置"><a href="#修改博客-config-yml-文件的配置" class="headerlink" title="修改博客 _config.yml 文件的配置"></a>修改博客 _config.yml 文件的配置</h2><ol><li>打开博客根目录的 _config.yml 文件，找到下面这个位置</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">github:</span> <span class="string">https://github.com/自己用户名/自己用户名.github.io.git</span> </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># </span></span><br></pre></td></tr></table></figure><ul><li>将以下信息添加到<code>repo:</code>里面去，main or master选择对应的分支</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https://自己用户名.github.io</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改主题链接的URL</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://winward-king.github.io/</span> <span class="comment">#替换成你自己的链接</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><h1 id="博客的备份"><a href="#博客的备份" class="headerlink" title="博客的备份"></a>博客的备份</h1><ol><li>在Github上创建一个仓库，名字随便</li><li>通过Git命令推送，并保持更新</li><li>配置<code>.gitignore</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">_multiconfig.yml</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO博客搭建(1):博客搭建</title>
      <link href="/2022/02/16/Hexo/02HexoStart/"/>
      <url>/2022/02/16/Hexo/02HexoStart/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>　　上学期间，博主一直用有道云笔记、印象笔记、word和onenode等软件记笔记，查阅起来非常不便。上网冲浪时，偶然间发现博客查阅更加方便，博主便申请了博客园的博客。博客园虽然开放了JS、CSS等权限，不够个性、安全。受各种因素影响博客园经历过整改、文章大量被下架等风波，博主只能将笔记记录方式重心转为硬盘存储。<br>　　随着时间推移，博主发现了一个很好的私人定制化的博客：Hexo博客。Hexo博客能装在Mac、Windows、Linux、群晖等多个系统平台上。支持Markdown语法，可以推送到GIT、GITEE、VPS等平台进行多重备份，并且支持个人域名，配置反向代理等优点，非常满足博主的需求。于是就有了这次HEXO+GIT搭建的笔记。</p><h1 id="软件与平台"><a href="#软件与平台" class="headerlink" title="软件与平台"></a>软件与平台</h1><h2 id="必须的软件："><a href="#必须的软件：" class="headerlink" title="必须的软件："></a>必须的软件：</h2><ul><li>NODE.JS</li><li>GIT</li></ul><h2 id="博客编写的软件"><a href="#博客编写的软件" class="headerlink" title="博客编写的软件"></a>博客编写的软件</h2><ul><li>Visual Studio Code（推荐）</li><li>TYPORA</li></ul><h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><ul><li>node.js 和 Typoro、Git，一路<code>下一步</code>就行了。</li><li>VSCode 安装好之后默认是英文界面，可以在插件市场里搜索 chinese，安装之后重启软件，变成中文版。</li></ul><h1 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h1><ul><li>Windows下用 Win + R 打开运行，输入 cmd 并进入 cmd 窗口查询</li><li>Mac下打开终端，进行查询</li><li>右键打开 Git bash，输入命令查询</li><li>node.js 版本的检查</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><ul><li>npm 版本的检查 (NPM 是随同 NodeJS 一起安装的包管理工具，能解决 NodeJS 代码部署上的很多问题)。</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure><ul><li>Git 版本的检查</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h1 id="HEXO-的安装"><a href="#HEXO-的安装" class="headerlink" title="HEXO 的安装"></a>HEXO 的安装</h1><p>在 Git bash 或者 CMD 界面执行命令</p><ul><li>安装之前可以先设置一下淘宝镜像加速器(国内访问镜像站快一点)</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ul><li>全局安装框架</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><ul><li>创建自己的博客目录并安装博客</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init 博客的根目录名字</span><br></pre></td></tr></table></figure><ul><li>进入博客的目录</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 博客的根目录名字</span><br></pre></td></tr></table></figure><ul><li>安装npm依赖环境</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><ul><li>安装 Hexo (Git)部署插件</li></ul><p>请在博客的目录下启动 Git bash，再执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h1 id="HEXO-常用代码"><a href="#HEXO-常用代码" class="headerlink" title="HEXO 常用代码"></a>HEXO 常用代码</h1><p>清理缓存，会自动删除博客目录下得 public 文件。(hexo cl 是 hexo clean 的简写)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成静态页面，重新生成 public 文件。（hexo g 是 hexo generate 的简写)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g </span><br></pre></td></tr></table></figure><p>启动本地服务，在 <a href="http://localhost:4000/">http://localhost:4000/</a> 预览效果。（hexo s 是 hexo server 的简写）<br>如果是挂载在群晖等内网系统用 <a href="http://192.168.xxx.xxx:4000，注意端口号是否被占用">http://192.168.xxx.xxx:4000，注意端口号是否被占用</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s <span class="comment">#或者hexo server</span></span><br></pre></td></tr></table></figure><p>部署推送，部署到 github。（hexo d 是 hexo deploy 的简写）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>以上连写示例一（清理缓存 + 生成静态页面 + 在本地预览）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>以上连写示例二（清理缓存 + 生成静态页面 + 部署推送）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h1 id="HEXO-博客的基础环境搭建完成"><a href="#HEXO-博客的基础环境搭建完成" class="headerlink" title="HEXO 博客的基础环境搭建完成"></a>HEXO 博客的基础环境搭建完成</h1><ul><li>下一篇文章将介绍主题的安装与配置<br>HEXO博客主题配置</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
            <tag> npm </tag>
            
            <tag> note.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/15/Hexo/01hello-world/"/>
      <url>/2022/02/15/Hexo/01hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#数学模型</title>
      <link href="/2022/02/02/CSharp/01CSharp_Math/"/>
      <url>/2022/02/02/CSharp/01CSharp_Math/</url>
      
        <content type="html"><![CDATA[<h1 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h1><ul><li>斐波那契数列（Fibonacci sequence），又称黄金分割数列，因数学家莱昂纳多·斐波那契（Leonardo Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”</li><li>F(0)&#x3D;1，F(1)&#x3D;1, F(n)&#x3D;F(n - 1)+F(n - 2)（n ≥ 2，n ∈ N*）</li></ul><p><img src="/images/CSharp/CSharp_Math/t01b927297ba2b6fe56.png"></p><h2 id="实例-循环-数组"><a href="#实例-循环-数组" class="headerlink" title="实例:循环+数组"></a>实例:循环+数组</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HelloWorld</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> k = <span class="number">140</span>;<span class="comment">// 输出斐波那契数列数量(测试上限为:140)  可更改</span></span><br><span class="line">        </span><br><span class="line">        <span class="built_in">decimal</span>[] si = <span class="keyword">new</span> <span class="built_in">decimal</span>[k];    <span class="comment">//存储计算值以节省时间</span></span><br><span class="line">        <span class="function"><span class="built_in">decimal</span> <span class="title">fib</span>(<span class="params"><span class="built_in">int</span> a</span>)                <span class="comment">//方法</span></span></span><br><span class="line">        &#123;                </span><br><span class="line">            <span class="keyword">if</span>(a &lt;= <span class="number">1</span>) <span class="keyword">return</span> a;</span><br><span class="line">            <span class="keyword">if</span>(si[a] != <span class="number">0</span>) <span class="keyword">return</span> si[a]; </span><br><span class="line">            <span class="keyword">return</span> si[a] = fib(a<span class="number">-1</span>)+fib(a<span class="number">-2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">        HelloWorld c = <span class="keyword">new</span> HelloWorld();</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> n = k<span class="number">-1</span>;n &gt;= <span class="number">0</span>;n--)&#123;        <span class="comment">//倒序输出</span></span><br><span class="line">            Console.WriteLine(c.fib(n));<span class="comment">//调用方法fib</span></span><br><span class="line">        &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="阶乘"><a href="#阶乘" class="headerlink" title="阶乘"></a>阶乘</h1><ul><li>一个正整数的阶乘（factorial）是所有小于及等于该数的正整数的积，并且0的阶乘为1。自然数n的阶乘写作n!</li><li>即n!&#x3D;1×2×3×…×(n-1)×n。阶乘亦可以递归方式定义：0!&#x3D;1，n!&#x3D;(n-1)!×n</li></ul><h2 id="使用递归函数计算一个数的阶乘："><a href="#使用递归函数计算一个数的阶乘：" class="headerlink" title="使用递归函数计算一个数的阶乘："></a>使用递归函数计算一个数的阶乘：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">factorial</span>(<span class="params"><span class="built_in">int</span> num</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> result;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                result = factorial(num - <span class="number">1</span>) * num;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">            <span class="comment">//调用 factorial 方法</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;6 的阶乘是： &#123;0&#125;&quot;</span>, n.factorial(<span class="number">6</span>));</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;7 的阶乘是： &#123;0&#125;&quot;</span>, n.factorial(<span class="number">7</span>));</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;8 的阶乘是： &#123;0&#125;&quot;</span>, n.factorial(<span class="number">8</span>));</span><br><span class="line">            Console.ReadLine();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记知识点梳理及思维导图</title>
      <link href="/2022/02/02/CSharp/01CSharp_Hexo/"/>
      <url>/2022/02/02/CSharp/01CSharp_Hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>c#<ul><li>基础<ul><li><a href="#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">数据类型</a><ul><li>值类型 </li><li>引用类型</li><li>指针类型</li></ul></li><li>重载<ul><li><a href="#%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD">运算符重载</a></li><li>函数重载</li></ul></li><li><a href="#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1">类(面向对象)</a><ul><li>封装</li><li>继承 </li><li>多态</li></ul></li><li><a href="#%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86">异常处理try、catch、throw、finally</a></li></ul></li><li>高级<ul><li><a href="#%E5%B1%9E%E6%80%A7property">属性</a></li><li><a href="#%E9%9B%86%E5%90%88%EF%BC%88Collection%EF%BC%89">集合</a></li><li><a href="#%E5%A7%94%E6%89%98%EF%BC%88Delegate%EF%BC%89">委托</a></li><li><a href="#%E5%8F%8D%E5%B0%84%EF%BC%88Reflection%EF%BC%89">反射</a></li><li><a href="#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6">垃圾回收</a></li><li><a href="#%E6%B3%9B%E5%9E%8B%EF%BC%88Generic%EF%BC%89">泛型</a></li><li><a href="#%E4%BA%8B%E4%BB%B6%EF%BC%88Event%EF%BC%89">事件</a></li><li><a href="#%E5%8C%BF%E5%90%8D%E6%96%B9%E6%B3%95">匿名</a></li><li><a href="#%E4%B8%8D%E5%AE%89%E5%85%A8%E4%BB%A3%E7%A0%81(%E6%8C%87%E9%92%88)">指针(不安全代码)</a></li><li><a href="#%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4">命名空间</a></li><li><a href="#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F">正则表达式</a></li><li><a href="#%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E6%8C%87%E4%BB%A4">预处理器指令</a></li></ul></li><li><a href="#%E5%87%BD%E6%95%B0(%E6%96%B9%E6%B3%95)">方法(函数)</a><ul><li>基础概念</li><li>特殊参数</li><li>方法的重载</li><li>方法的递归</li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E7%9A%84%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA(%E6%96%87%E4%BB%B6%E4%B8%8E%E6%B5%81)">文件处理</a><ul><li>文件I&#x2F;O类</li><li>FileStream类</li><li>StreamReader类</li><li>Filelnfo类</li></ul></li><li><a href="#%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%81%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96">序列化、反序列化</a><ul><li>XML</li><li>JSON</li><li>Protocol Buffer(protobuf)</li></ul></li><li><a href="#%E5%A4%9A%E7%BA%BF%E7%A8%8B">多线程</a><ul><li>Thread类</li><li>生命周期</li><li>优先级</li><li>线程同步</li><li>Sleep</li><li>Abort</li><li>Join</li></ul></li></ul></li></ul></blockquote><h1 id="C-语言简介和-Net框架"><a href="#C-语言简介和-Net框架" class="headerlink" title="C#语言简介和.Net框架"></a>C#语言简介和.Net框架</h1><ul><li><a href="/2018/01/02/CSharp/01CSharp_Profile/" title="C#笔记（1）C#简介">C#笔记（1）C#简介</a></li><li><a href="/2018/01/03/CSharp/02CSharp_Net/" title="C#笔记（2）C#环境">C#笔记（2）C#环境</a></li></ul><ol><li>C# 简介、特点、功能</li><li>C# 相关网站</li><li>.NET 及.NET Framework (CLR、CTS、CLS)</li></ol><h1 id="类-基础"><a href="#类-基础" class="headerlink" title="类:基础"></a>类:基础</h1><ul><li><a href="/2018/01/04/CSharp/03CSharp_Hello/" title="C#笔记（3）C#程序结构基础">C#笔记（3）C#程序结构基础</a></li><li><a href="/2018/01/05/CSharp/04CSharp_Grammar/" title="C#笔记（4）基本语法">C#笔记（4）基本语法</a></li></ul><ol><li>程序基础(hello world)</li><li>VStudio基本操作</li><li>输入与输出基本方法(控制台语句)</li><li>Windows下环境变量配置</li><li>C# 中的注释详解及(3W1H)</li><li>标识符(识别类、变量、函数)及 <code>类</code> 命名规范</li><li>C# 中的关键字</li></ol><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li><a href="/2018/01/08/CSharp/05CSharp_DateType/" title="C#笔记（5）数据类型">C#笔记（5）数据类型</a></li><li><a href="/2018/01/09/CSharp/06CSharp_Type/" title="C#笔记（6）类型转换">C#笔记（6）类型转换</a></li></ul><ol><li>值类型</li><li>引用类型</li><li>指针类型（不安全）</li><li>栈和堆</li><li>类型转换<ul><li>强制转换(显&#x2F;隐)</li><li>Convert类</li><li>xxx.Parse </li><li>xxx.TryParse(string s,out xxx i)(异常处理)</li><li>数据精度(伪-四舍五入)</li></ul></li><li>装箱和拆箱的基础概念</li></ol><h1 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h1><ul><li><a href="/2018/01/10/CSharp/07CSharp_Variables/" title="C#笔记（7）变量">C#笔记（7）变量</a></li><li><a href="/2018/01/11/CSharp/08CSharp_Constant/" title="C#笔记（8）常量">C#笔记（8）常量</a></li></ul><ol><li>变量名的命名(驼峰式)</li><li>变量分类及作用域</li><li>readonly，const关键字</li></ol><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><ul><li><a href="/2018/01/12/CSharp/09CSharp_Operator/" title="C#笔记（9）运算符">C#笔记（9）运算符</a></li><li><a href="/2018/01/19/CSharp/14CSharp_Nullable/" title="C#笔记（14）可空类型（Nullable）">C#笔记（14）可空类型（Nullable）</a></li></ul><ol><li>算数运算符<ul><li>+、-、*、&#x2F;、%</li><li>++，–</li></ul></li><li>赋值运算符<ul><li>&#x3D;</li><li>+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</li></ul></li><li>关系运算符<ul><li>或、与、非 <code>|</code> <code>&amp;</code> <code>！</code></li><li>双与<code>&amp;&amp;</code>，双或 <code>||</code></li><li>异或 <code>^</code></li><li>三目运算符  - <code>? :</code></li></ul></li><li>位运算符</li><li>其他运算符</li><li>运算符优先级</li></ol><h1 id="语句类型"><a href="#语句类型" class="headerlink" title="语句类型"></a>语句类型</h1><ul><li><a href="/2018/01/15/CSharp/10CSharp_Judger/" title="C#笔记（10）判断">C#笔记（10）判断</a></li><li><a href="/2018/01/14/CSharp/11CSharp_Loop/" title="C#笔记（11）循环">C#笔记（11）循环</a></li></ul><ol><li>顺序语句</li><li>分支语句<ul><li>if else</li><li>switch case</li><li>break,continue,goto</li></ul></li><li>循环语句<ul><li>for</li><li>white 和 do…white</li><li>foreach</li></ul></li></ol><h1 id="类和对象-修饰符"><a href="#类和对象-修饰符" class="headerlink" title="类和对象:修饰符"></a>类和对象:修饰符</h1><ul><li><a href="/2018/01/15/CSharp/12CSharp_Encapsulation/" title="C#笔记（12）访问修饰符">C#笔记（12）访问修饰符</a></li></ul><ol><li>访问修饰符<ul><li>修饰对象:变量，属性，方法，类</li><li>修饰作用:限制修饰内容的访问权限</li></ul></li><li>修饰符</li></ol><ul><li>public<br>公有的，不受限制可任意访问</li><li>private<br>私有的，只限于本类中访问</li><li>protected<br>保护的，只限于本类和子类中访问</li><li>internal<br>内部的，只限于程序集内访问</li><li>protected internal<br>内部保护的，只限于程序集内或者子类访问</li></ul><h1 id="函数-方法"><a href="#函数-方法" class="headerlink" title="函数(方法)"></a>函数(方法)</h1><ul><li><a href="/2018/01/18/CSharp/13CSharp_Method/" title="C#笔记（13）方法">C#笔记（13）方法</a></li></ul><ol><li>方法的声明<ul><li>语法格式</li><li>注意事项</li></ul></li><li>方法的调用<ul><li>调用语法</li></ul></li><li>方法的参数<ul><li>什么是参数？</li><li>参数的写法</li><li>参数默认值</li></ul></li><li>特殊参数标识<ul><li>ref</li><li>out</li><li>param</li><li>位置参数，命名参数</li></ul></li><li>方法返回值<ul><li>概念说明</li><li>return关键字</li></ul></li><li>方法的重载<ul><li>定义：使用同一个方法名，参数类型或个数不一样的函数</li><li>注意事项</li></ul></li><li>方法的递归<ul><li>定义：递归的本质就是自己调用自己。</li><li>要素</li><li>递归条件</li><li>递归出口</li></ul></li></ol><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><ul><li><a href="/2018/01/22/CSharp/15CSharp_Array/" title="C#笔记（15）数组（Array）">C#笔记（15）数组（Array）</a></li></ul><ol><li>一维数组<ul><li>概念</li><li>关键字</li><li>声明</li><li>初始化</li></ul></li><li>数组的使用<ul><li>遍历</li><li>排序</li><li>查找</li></ul></li><li>二维数组<ul><li>声明</li><li>初始化</li><li>访问</li><li>下标取值</li><li>遍历数组</li><li>应用</li><li>表示地图</li></ul></li></ol><h1 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h1><ul><li><a href="/2018/01/23/CSharp/16CSharp_String/" title="C#笔记（16）字符串（String）">C#笔记（16）字符串（String）</a></li></ul><ol><li>字符串类型<ul><li>常用方法</li><li>@字符</li><li>$字符</li></ul></li></ol><h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><ul><li><a href="/2018/01/24/CSharp/17CSharp_Struct/" title="C#笔记（17）结构体（Struct）">C#笔记（17）结构体（Struct）</a> </li><li>定义，关键字</li><li>结构体和类<ul><li>相同点<ul><li>都可以有变量，属性，方法</li><li>都可以有静态变量，方法</li><li>都是使用new关键字实例化</li></ul></li><li>不同点<ul><li>类是引用类型，结构体是值类型</li><li>构造函数的使用上的不同</li><li>与类相比结构体无继承关系</li><li>结构体重不能定义虚方法</li></ul></li><li>用途</li></ul></li></ul><h1 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h1><ul><li><a href="/2018/01/25/CSharp/18CSharp_Enum/" title="C#笔记（18）枚举（Enum）">C#笔记（18）枚举（Enum）</a> </li><li><a href="/2020/04/05/Unity3D/06Unity_OOP/" title="面向对象 Object Oriented">面向对象 Object Oriented</a> </li><li>概念定义</li><li>使用示例</li><li>类型转换</li><li>sealed关键字<ul><li>表示密封，可修饰类，方法</li><li>sealed修饰的类无法被继承</li><li>sealed只能修饰重写(override)方法</li></ul></li></ul><h1 id="类：进阶"><a href="#类：进阶" class="headerlink" title="类：进阶"></a>类：进阶</h1><ul><li><a href="/2018/01/26/CSharp/19CSharp_Class/" title="C#笔记（19）类（Class）">C#笔记（19）类（Class）</a> </li><li>定义：拥有一定特性和功能额一个类别</li><li>语法<br>class 类名{ &#x2F;&#x2F; 实现 }</li><li>成员<br>成员变量<br>成员方法</li><li>new 关键字<br>实例化 T t1 &#x3D; new T();<br>访问对象成员</li><li>this关键字<br>表示当前对象</li><li>static关键字<br>用途<br>修饰变量，方法，类</li><li>声明<br>写法示例<br>静态类的访问</li><li>类名.属性名<br>和非静态之间区别<br>类的特殊函数</li><li>构造函数<br>定义概念<br>语法规则<br>调用方式</li><li>其他构造<ul><li>静态构造<ul><li>创建静态构造</li><li>语法规则</li></ul></li><li>私有化构造<ul><li>限定只有本类中实例化</li></ul></li></ul></li><li>析构函数<br>定义概念<br>调用方式<br>语法特性</li></ul><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><ul><li><a href="/2018/01/29/CSharp/20CSharp_Inheritance/" title="C#笔记（20）继承">C#笔记（20）继承</a> </li><li><a href="/2018/01/30/CSharp/21CSharp_Polymorphism/" title="C#笔记（21）多态性">C#笔记（21）多态性</a> </li><li><a href="/2020/04/05/Unity3D/06Unity_OOP/" title="面向对象 Object Oriented">面向对象 Object Oriented</a></li></ul><ol><li>封装</li></ol><ul><li>原则：在程序中，尽量不要出现重复的代码</li><li>封装<ul><li>类中只存储当前类有关内容</li><li>每一个功能模块都是一个方法</li></ul></li></ul><ol start="2"><li>继承</li></ol><ul><li>概念理解</li><li>实现语法</li><li>继承后对父类的访问</li><li>单继承</li><li>子类构造<ul><li>执行逻辑：优先执行父类构造，在执行子类构造</li><li>构造函数无论有参无参，无论有多少个子类都必须至少有一个和父类保持一致</li></ul></li><li>base关键字<ul><li>语法： 子类构造:base(形参传递)</li></ul></li></ul><ol start="3"><li>多态</li></ol><ul><li>向上转型(隐式转型)<ul><li>将一个子类类型的对象称作父类类型</li></ul></li><li>向下转型(强制转换)<ul><li>将一个父类类型的对象称作子类类型</li><li>强制转换语法</li><li>as关键字</li><li>is关键字</li></ul></li><li>override关键字<ul><li>重写方法只能修改方法体</li><li>base.方法名()调用父类方法<br>面试问的多态</li><li>不同对象同一类型，这个类型的对象都可以做某一件事</li><li>因此不同的对象在做这件事的时候，做的方式也是不同的，当然结果也是不同的</li></ul></li></ul><h1 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h1><ul><li><a href="/2018/01/31/CSharp/22CSharp_Overload/" title="C#笔记（22）运算符重载">C#笔记（22）运算符重载</a> </li><li><p>运算符重载</p><ul><li>可重载的运算符<ul><li>算数：+，-，x，&#x2F;，%，++，–</li><li>关系：必须成对重载【&gt; &lt;】，【&gt;&#x3D; &lt;&#x3D;】，【&#x3D;&#x3D;，!&#x3D;】</li><li>逻辑：&amp; | ！^</li></ul></li><li>作用<br>使不能进行运算的对象，运算符重载后，也能通过运算符运算</li></ul></li><li><p>关键字<br>operator</p></li><li><p>访问修饰<br>必须是public static</p></li><li><p>定义语法<br>public static 返回值类型 operator 运算符（参数）{&#x2F;&#x2F;⽅法体}</p></li><li><p>返回值</p><ul><li>一元：返回值必须是参数类型或者参数子类型</li><li>二元：返回值可自定义</li></ul></li><li><p>用途<br>对象与对象之间运算的快捷方式</p></li></ul><h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><ul><li><a href="/2018/02/01/CSharp/23CSharp_Interface/" title="C#笔记（23）接口（Interface）">C#笔记（23）接口（Interface）</a> </li><li><p>定义，关键字</p><ul><li>interface 接口名称</li></ul></li><li><p>接口实现</p><ul><li>接口的实现实际上和类之间的继承是一样的，也是重写了接口中的方法，让其有了具体的实现内容。</li></ul></li><li><p>接口中的多态实现</p><ul><li>定义接口并使用类实现了接口中的成员。</li><li>创建接口的实例指向不同的实现类对象。</li></ul></li></ul><h1 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h1><ul><li><a href="/2018/02/02/CSharp/24CSharp_Namespace/" title="C#笔记（24）命名空间（Namespace）">C#笔记（24）命名空间（Namespace）</a> </li><li>命名空间</li><li>概念定义</li><li>using 关键字<ul><li>命名空间内可以包含类，接口，结构体，枚举，命名空间</li><li>访问命名空间内容</li></ul></li></ul><h1 id="预处理器指令"><a href="#预处理器指令" class="headerlink" title="预处理器指令"></a>预处理器指令</h1><ul><li><a href="/2018/02/05/CSharp/25CSharp_Dedine/" title="C#笔记（25）预处理器指令">C#笔记（25）预处理器指令</a> </li><li>#define</li><li>#warning 和 #error</li><li>#region 和 #endregion</li><li>#line</li><li>#pragma</li></ul><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><ul><li><a href="/2018/02/28/CSharp/26CSharp_Regular/" title="C#笔记（26）正则表达式">C#笔记（26）正则表达式</a> </li><li>正则表达式(Regular Expression)是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为”元字符”）。</li><li>正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。</li></ul><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ul><li><a href="/2018/03/01/CSharp/27CSharp_Bug/" title="C#笔记（27）异常处理">C#笔记（27）异常处理</a> </li><li><a href="/2018/03/21/CSharp/40CSharp_Try/" title="C#笔记（40）if(){}try{}catch{}语句">C#笔记（40）if(){}try{}catch{}语句</a> </li><li>语法概念<ul><li>一个try可以有多个catch<ul><li>若多个catch中没有继承关系，顺序随意</li><li>若多个catch有继承关系，则子类在前，父类在后</li></ul></li></ul></li><li>自定义异常</li></ul><h1 id="文件的输入与输出-文件与流"><a href="#文件的输入与输出-文件与流" class="headerlink" title="文件的输入与输出(文件与流)"></a>文件的输入与输出(文件与流)</h1><ul><li><a href="/2018/03/05/CSharp/28CSharp_Files/" title="C#笔记（28）文件的输入与输出">C#笔记（28）文件的输入与输出</a> </li><li>基本概念</li><li>I&#x2F;O 类</li><li>FileStream 类</li><li>StreamReader类</li><li>Filelnfo类</li></ul><h1 id="特性（Attribute）"><a href="#特性（Attribute）" class="headerlink" title="特性（Attribute）"></a>特性（Attribute）</h1><ul><li><a href="/2018/03/06/CSharp/29CSharp_Attribute/" title="C#笔记（29）特性（Attribute）">C#笔记（29）特性（Attribute）</a> </li><li><p>定义概念</p><ul><li>特性（Attribute）是用于在运行时传递程序中各种元素（比如类、方法、结构、枚举、组件等）的行为信息的声明性标签。</li></ul></li><li><p>规定特性</p><ul><li>[attribute(positional_parameters, name_parameter &#x3D; value, …)]element</li></ul></li><li><p>特性（Attribute）的名称和值是在方括号内规定的，放置在它所应用的元素之前。positional_parameters 规定必需的信息，name_parameter 规定可选的信息。</p></li><li><p>预定义特性</p><ul><li>AttributeUsage</li><li>Conditional</li><li>Obsolete</li></ul></li><li><p>创建自定义特性</p><ul><li>声明</li><li>构建</li><li>在目标元素上应用</li><li>通过反射访问</li></ul></li></ul><h1 id="反射（Reflection）"><a href="#反射（Reflection）" class="headerlink" title="反射（Reflection）"></a>反射（Reflection）</h1><ul><li><a href="/2018/03/07/CSharp/30CSharp_Reflection/" title="C#笔记（30）反射（Reflection）">C#笔记（30）反射（Reflection）</a> </li><li>概念定义<br>反射指程序可以访问、检测和修改它本身状态或行为的一种能力。</li><li>优缺点<ul><li>优点<ul><li>反射提高了程序的灵活性和扩展性</li><li>降低耦合性，提高自适应能力</li><li>它允许程序创建和控制任何类队形，无需提前硬编码目标类</li></ul></li><li>缺点</li><li>性能问题：使用反射基本上是一种解释操作，用于字段和方法接入是要远慢于直接代码</li><li>使用反射会模糊程序内部逻辑；反射代码比相应的直接代码更复杂</li></ul></li><li>发射用途<ul><li>它允许在运行时查看特性</li><li>它允许审查集合中的各种类型，以及实例化这些类型</li><li>它允许延迟绑定方法和属性</li><li>它允许在运行时创建新类型，然后使用其执行一个逻辑</li></ul></li><li>查看元数据</li></ul><h1 id="属性（Property）"><a href="#属性（Property）" class="headerlink" title="属性（Property）"></a>属性（Property）</h1><ul><li><a href="/2018/03/08/CSharp/31CSharp_Property/" title="C#笔记（31）属性（Property）">C#笔记（31）属性（Property）</a> </li><li>属性的基本概念</li><li>访问器（Accessors）</li><li>抽象属性（Abstract Properties）</li></ul><h1 id="索引器（Indexer）"><a href="#索引器（Indexer）" class="headerlink" title="索引器（Indexer）"></a>索引器（Indexer）</h1><ul><li><a href="/2018/03/09/CSharp/32CSharp_Indexer/" title="C#笔记（32）索引器（Indexer）">C#笔记（32）索引器（Indexer）</a> </li><li>索引器（Indexer）</li><li>重载索引器（Indexer）</li></ul><h1 id="委托（Delegate）"><a href="#委托（Delegate）" class="headerlink" title="委托（Delegate）"></a>委托（Delegate）</h1><ul><li><a href="/2018/03/12/CSharp/33CSharp_Delegate/" title="C#笔记（33）委托（Delegate）">C#笔记（33）委托（Delegate）</a> </li><li>委托定义<br>[访问修饰符] delegate 返回值 委托名称 (参数列表);</li><li>关键字<br>delegate</li><li>委托使用<br>使用示例</li><li>多播委托<br>概念说明<br>使用示例</li><li>系统带的委托<ul><li>Action<br>没有返回值的委托<br>可传递无限个参数命名空间</li><li>Func<br>带有返回值的委托<br>最后一个参数代表返回值<br>最多传递16个参数和返回值</li></ul></li><li>匿名函数<br>语法概念</li><li>Lambda表达式</li></ul><h1 id="事件（Event）"><a href="#事件（Event）" class="headerlink" title="事件（Event）"></a>事件（Event）</h1><ul><li><a href="/2018/03/13/CSharp/34CSharp_Event/" title="C#笔记（34）事件（Event）">C#笔记（34）事件（Event）</a> </li><li>事件就是一个特殊的委托对象</li><li>发布器（publisher）</li><li>订阅器（subscriber）</li><li>声明事件（Event）</li></ul><h1 id="集合（Collection）"><a href="#集合（Collection）" class="headerlink" title="集合（Collection）"></a>集合（Collection）</h1><ul><li><a href="/2018/03/14/CSharp/35CSharp_Collection/" title="C#笔记（35）集合（Collection）">C#笔记（35）集合（Collection）</a> </li><li>Array 数组</li><li>Array List 动态数组</li><li>List 列表</li><li>Dictionary 字典</li></ul><h1 id="泛型（Generic）"><a href="#泛型（Generic）" class="headerlink" title="泛型（Generic）"></a>泛型（Generic）</h1><ul><li><a href="/2018/03/15/CSharp/36CSharp_Generic/" title="C#笔记（36）泛型（Generic）">C#笔记（36）泛型（Generic）</a> </li><li>泛型<ul><li>表示一种模糊的类型</li><li>泛型的应用范围</li></ul></li><li>类&#x2F;接口<ul><li>声明泛型类 类名&lt;泛型标识符&gt;</li><li>使用泛型类 T<int> p &#x3D; new T<int>();</li></ul></li><li>方法<ul><li>声明泛型方法 方法名&lt;泛型&gt;</li><li>用泛型作为方法返回值类型</li><li>用泛型作为方法参数类型</li></ul></li><li>泛型特点<ul><li>泛型类型不能继承</li><li>但泛型类和泛型接口可以继承&#x2F;实现</li><li>在继承泛型类或泛型接口的时候必须将泛型设置为实际类型进行使用</li></ul></li></ul><h1 id="匿名方法"><a href="#匿名方法" class="headerlink" title="匿名方法"></a>匿名方法</h1><ul><li><a href="/2018/03/16/CSharp/37CSharp_Property/" title="C#笔记（37）匿名方法">C#笔记（37）匿名方法</a> </li><li>匿名方法是没有名称只有主体的方法。</li><li>编写匿名方法的语法</li></ul><h1 id="不安全代码-指针"><a href="#不安全代码-指针" class="headerlink" title="不安全代码(指针)"></a>不安全代码(指针)</h1><ul><li><a href="/2018/03/19/CSharp/38CSharp_Unsafe/" title="C#笔记（38）不安全代码">C#笔记（38）不安全代码</a> </li><li>unsafe 修饰符标记</li><li>指针变量<br>使用指针检索数据值<br>传递指针作为方法的参数<br>使用指针访问数组元素</li><li>编译不安全代码</li></ul><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><ul><li><a href="/2018/03/20/CSharp/39CSharp_Multithreading/" title="C#笔记（39）多线程">C#笔记（39）多线程</a> </li><li><p>线程定义</p><ul><li>线程 被定义为程序的执行路径。每个线程都定义了一个独特的控制流。</li></ul></li><li><p>线程生命周期</p><ul><li>未启动状态<ul><li>线程实例被创建，但Start方法未被调用</li></ul></li><li>就绪状态<ul><li>当线程转变好运行并等待CPU周期时的状态</li></ul></li><li>不可运行状态<ul><li>已经调用Sleep方法</li><li>已经调用Wait方法</li><li>通过 I&#x2F;O 操作阻塞</li></ul></li><li>死亡状态<ul><li>当线程已完成执行或终止执行的状态</li></ul></li><li>主线程<ul><li>进程中第一个被执行的线程称为主线程。</li></ul></li></ul></li><li><p>Thread 类常用的属性和方法</p></li><li><p>创建线程<br>线程是通过扩展 Thread 类创建的。</p></li><li><p>管理线程<br>Thread 类提供了各种管理线程的方法。</p></li><li><p>销毁线程<br>Abort() 方法用于销毁线程。</p></li></ul><h1 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h1><ul><li><a href="/2018/03/21/CSharp/41CSharp_Lambda/" title="C#笔记（41）Lambda表达式">C#笔记（41）Lambda表达式</a> </li><li>匿名方法和lambad表达式</li></ul><h1 id="序列化、反序列化"><a href="#序列化、反序列化" class="headerlink" title="序列化、反序列化"></a>序列化、反序列化</h1><ul><li>Unity自带-PlayerPrefs</li><li>XML</li><li>JSON</li><li>Protocol Buffer(protobuf)</li></ul><h1 id="垃圾回收"><a href="#垃圾回收" class="headerlink" title="垃圾回收"></a>垃圾回收</h1><h1 id="系统类-数据结构-对比"><a href="#系统类-数据结构-对比" class="headerlink" title="系统类 - 数据结构(对比)"></a>系统类 - 数据结构(对比)</h1><ul><li>Array 数组<br>必须制定类型，指定长度，内存地址连续</li><li>Array List 动态数组<br>存储空间随着元素个数变换，地址不连续<br>内部定义好的增删改查的基础函数</li><li>List 列表<br>一个引用类型的容器，只能存一种类型数据<br>存储空间随着元素数量进行变换</li><li>Stack 栈<br>先进后出 - 枪膛上子弹</li><li>Queue 队列<br>先进先出 - 超市排队</li><li>Dictionary 字典<br>通过key值去找value<br>内部定义好的增删改查</li></ul><div style="display:none"><ul><li><a href="https://bbs.huaweicloud.com/blogs/309846">C# 知识点汇总整理 – 附思维导图</a></li><li><a href="https://blog.csdn.net/bibimybest/article/details/126090220">c#知识点思维导图</a></li><li><a href="https://www.cnblogs.com/01zxs/p/9845697.html">游戏编程 学习目录</a></li><li><a href="https://blog.csdn.net/czhenya/category_10707867.html?spm=1001.2014.3001.5482">C# 设计模式</a></li><li><a href="https://www.cnblogs.com/wyh19941210/p/8506526.html">c#学习路线及目录导航</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP状态码大全</title>
      <link href="/2021/12/15/Computer/05HTTPCode/"/>
      <url>/2021/12/15/Computer/05HTTPCode/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP状态码大全-常见-HTTP-Status-Code-含义查询"><a href="#HTTP状态码大全-常见-HTTP-Status-Code-含义查询" class="headerlink" title="HTTP状态码大全(常见 HTTP Status Code 含义查询)"></a>HTTP状态码大全(常见 HTTP Status Code 含义查询)</h1><hr><p>HTTP状态码，即HTTP协议状态码，是我们访问网站时会遇到的，服务器端返回的Http响应码，不同的数字分别代表着不同的响应状态。我们在做SEO或做网页开发过程中需要了解5类比较重要的HTTP状态码，可以根据请求响应代码检查服务器及程序是否正常，判断网页处于什么工作状态。我们就需要了解不同的状态码分别是什么含义。</p><p><strong>下面我们列出常见五类HTTP状态码和它的详解说明：</strong></p><h3 id="1、-HTTP-Status-Code-1xx-请求信息"><a href="#1、-HTTP-Status-Code-1xx-请求信息" class="headerlink" title="1、 HTTP Status Code 1xx 请求信息"></a>1、 HTTP Status Code 1xx 请求信息</h3><p>这一组状态码表明这是一个临时性响应。此响应仅由状态行和可选的HTTP头组成，以一个空行结尾。由于HTTP／1.0未定义任何1xx状态码，所以不要向HTTP／1.0客户端发送1xx响应。</p><table><thead><tr><th align="left">Http状态码</th><th align="left">Http Status Code</th><th align="left">Http状态码含义中文说明</th></tr></thead><tbody><tr><td align="left"><strong>100</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/100">100 Continue</a></td><td align="left">请继续请求</td></tr><tr><td align="left"><strong>101</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/101">101 Switching Protocols</a></td><td align="left">请切换协议</td></tr><tr><td align="left"><strong>102</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/102">102 Processing</a></td><td align="left">将继续执行请求</td></tr></tbody></table><h3 id="2、-HTTP-Status-Code-2xx-成功状态"><a href="#2、-HTTP-Status-Code-2xx-成功状态" class="headerlink" title="2、 HTTP Status Code 2xx 成功状态"></a>2、 HTTP Status Code 2xx 成功状态</h3><p>这一组状态码表明客户端的请求已经被服务器端成功接收并正确解析。</p><table><thead><tr><th align="left">Http状态码</th><th align="left">Http Status Code</th><th align="left">Http状态码含义中文说明</th></tr></thead><tbody><tr><td align="left"><strong>200</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/200">200 OK</a></td><td align="left">请求成功</td></tr><tr><td align="left"><strong>201</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/201">201 Created</a></td><td align="left">请求已被接受，等待资源响应</td></tr><tr><td align="left"><strong>202</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/202">202 Accepted</a></td><td align="left">请求已被接受，但尚未处理</td></tr><tr><td align="left"><strong>203</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/203">203 Non-Authoritative Information</a></td><td align="left">请求已成功处理，结果来自第三方拷贝</td></tr><tr><td align="left"><strong>204</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/204">204 No Content</a></td><td align="left">请求已成功处理，但无返回内容</td></tr><tr><td align="left"><strong>205</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/205">205 Reset Content</a></td><td align="left">请求已成功处理，但需重置内容</td></tr><tr><td align="left"><strong>206</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/206">206 Partial Content</a></td><td align="left">请求已成功处理，但仅返回了部分内容</td></tr><tr><td align="left"><strong>207</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/207">207 Multi-Status</a></td><td align="left">请求已成功处理，返回了多个状态的XML消息</td></tr><tr><td align="left"><strong>208</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/208">208 Already Reported</a></td><td align="left">响应已发送</td></tr><tr><td align="left"><strong>226</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/226">226 IM Used</a></td><td align="left">已完成响应</td></tr></tbody></table><h3 id="3、-HTTP-Status-Code-3xx-重定向状态"><a href="#3、-HTTP-Status-Code-3xx-重定向状态" class="headerlink" title="3、 HTTP Status Code 3xx 重定向状态"></a>3、 HTTP Status Code 3xx 重定向状态</h3><p>这一组状态码表示客户端需要采取更进一步的行动来完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的Location域中指明。</p><table><thead><tr><th align="left">Http状态码</th><th align="left">Http Status Code</th><th align="left">Http状态码含义中文说明</th></tr></thead><tbody><tr><td align="left"><strong>300</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/300">300 Multiple Choices</a></td><td align="left">返回多条重定向供选择</td></tr><tr><td align="left"><strong>301</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/301">301 Moved Permanently</a></td><td align="left">永久重定向</td></tr><tr><td align="left"><strong>302</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/302">302 Found</a></td><td align="left">临时重定向</td></tr><tr><td align="left"><strong>303</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/303">303 See Other</a></td><td align="left">当前请求的资源在其它地址</td></tr><tr><td align="left"><strong>304</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/304">304 Not Modified</a></td><td align="left">请求资源与本地缓存相同，未修改</td></tr><tr><td align="left"><strong>305</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/305">305 Use Proxy</a></td><td align="left">必须通过代理访问</td></tr><tr><td align="left"><strong>306</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/306">306 (已废弃)Switch Proxy</a></td><td align="left">(已废弃)请切换代理</td></tr><tr><td align="left"><strong>307</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/307">307 Temporary Redirect</a></td><td align="left">临时重定向，同302</td></tr><tr><td align="left"><strong>308</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/308">308 Permanent Redirect</a></td><td align="left">永久重定向，且禁止改变http方法</td></tr></tbody></table><h3 id="4、-HTTP-Status-Code-4xx-客户端错误"><a href="#4、-HTTP-Status-Code-4xx-客户端错误" class="headerlink" title="4、 HTTP Status Code 4xx 客户端错误"></a>4、 HTTP Status Code 4xx 客户端错误</h3><p>这一组状态码表示客户端的请求存在错误，导致服务器无法处理。除非响应的是一个HEAD请求，否则服务器就应该返回一个解释当前错误状况的实体，以及这是临时的还是永久性的状况。这些状态码适用于任何请求方法。浏览器应当向用户显示任何包含在此类错误响应中的实体内容。</p><table><thead><tr><th align="left">Http状态码</th><th align="left">Http Status Code</th><th align="left">Http状态码含义中文说明</th></tr></thead><tbody><tr><td align="left"><strong>400</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/400">400 Bad Request</a></td><td align="left">请求错误，通常是访问的域名未绑定引起</td></tr><tr><td align="left"><strong>401</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/401">401 Unauthorized</a></td><td align="left">需要身份认证验证</td></tr><tr><td align="left"><strong>402</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/402">402 Payment Required</a></td><td align="left">-</td></tr><tr><td align="left"><strong>403</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/403">403 Forbidden</a></td><td align="left">禁止访问</td></tr><tr><td align="left"><strong>404</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/404">404 Not Found</a></td><td align="left">请求的内容未找到或已删除</td></tr><tr><td align="left"><strong>405</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/405">405 Method Not Allowed</a></td><td align="left">不允许的请求方法</td></tr><tr><td align="left"><strong>406</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/406">406 Not Acceptable</a></td><td align="left">无法响应，因资源无法满足客户端条件</td></tr><tr><td align="left"><strong>407</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/407">407 Proxy Authentication Required</a></td><td align="left">要求通过代理的身份认证</td></tr><tr><td align="left"><strong>408</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/408">408 Request Timeout</a></td><td align="left">请求超时</td></tr><tr><td align="left"><strong>409</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/409">409 Conflict</a></td><td align="left">存在冲突</td></tr><tr><td align="left"><strong>410</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/410">410 Gone</a></td><td align="left">资源已经不存在(过去存在)</td></tr><tr><td align="left"><strong>411</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/411">411 Length Required</a></td><td align="left">无法处理该请求</td></tr><tr><td align="left"><strong>412</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/412">412 Precondition Failed</a></td><td align="left">请求条件错误</td></tr><tr><td align="left"><strong>413</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/413">413 Payload Too Large</a></td><td align="left">请求的实体过大</td></tr><tr><td align="left"><strong>414</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/414">414 Request-URI Too Long</a></td><td align="left">请求的URI过长</td></tr><tr><td align="left"><strong>415</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/415">415 Unsupported Media Type</a></td><td align="left">无法处理的媒体格式</td></tr><tr><td align="left"><strong>416</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/416">416 Range Not Satisfiable</a></td><td align="left">请求的范围无效</td></tr><tr><td align="left"><strong>417</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/417">417 Expectation Failed</a></td><td align="left">无法满足的Expect</td></tr><tr><td align="left"><strong>418</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/418">418 I’m a teapot</a></td><td align="left">愚人节笑话</td></tr><tr><td align="left"><strong>421</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/421">421 There are too many connections from your internet address</a></td><td align="left">连接数超限</td></tr><tr><td align="left"><strong>422</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/422">422 Unprocessable Entity</a></td><td align="left">请求的语义错误</td></tr><tr><td align="left"><strong>423</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/423">423 Locked</a></td><td align="left">当前资源被锁定</td></tr><tr><td align="left"><strong>424</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/424">424 Failed Dependency</a></td><td align="left">当前请求失败</td></tr><tr><td align="left"><strong>425</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/425">425 Unordered Collection</a></td><td align="left">未知</td></tr><tr><td align="left"><strong>426</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/426">426 Upgrade Required</a></td><td align="left">请切换到TLS&#x2F;1.0</td></tr><tr><td align="left"><strong>428</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/428">428 Precondition Required</a></td><td align="left">请求未带条件</td></tr><tr><td align="left"><strong>429</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/429">429 Too Many Requests</a></td><td align="left">并发请求过多</td></tr><tr><td align="left"><strong>431</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/431">431 Request Header Fields Too Large</a></td><td align="left">请求头过大</td></tr><tr><td align="left"><strong>449</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/449">449 Retry With</a></td><td align="left">请重试</td></tr><tr><td align="left"><strong>451</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/451">451 Unavailable For Legal Reasons</a></td><td align="left">访问被拒绝（法律的要求）</td></tr><tr><td align="left"><strong>499</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/499">499 Client Closed Request</a></td><td align="left">客户端主动关闭了连接</td></tr></tbody></table><h3 id="5、-HTTP-Status-Code-5xx-服务器错误状态"><a href="#5、-HTTP-Status-Code-5xx-服务器错误状态" class="headerlink" title="5、 HTTP Status Code 5xx 服务器错误状态"></a>5、 HTTP Status Code 5xx 服务器错误状态</h3><p>这一组状态码说明服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。除非这是一个HEAD请求，否则服务器应当包含一个解释当前错误状态以及这个状况是临时的还是永久的解释信息实体。浏览器应当向用户展示任何在当前响应中被包含的实体。</p><table><thead><tr><th align="left">Http状态码</th><th align="left">Http Status Code</th><th align="left">Http状态码含义中文说明</th></tr></thead><tbody><tr><td align="left"><strong>500</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/500">500 Internal Server Error</a></td><td align="left">服务器端程序错误</td></tr><tr><td align="left"><strong>501</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/501">501 Not Implemented</a></td><td align="left">服务器不支持的请求方法</td></tr><tr><td align="left"><strong>502</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/502">502 Bad Gateway</a></td><td align="left">网关无响应</td></tr><tr><td align="left"><strong>503</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/503">503 Service Unavailable</a></td><td align="left">服务器端临时错误</td></tr><tr><td align="left"><strong>504</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/504">504 Gateway Timeout</a></td><td align="left">网关超时</td></tr><tr><td align="left"><strong>505</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/505">505 HTTP Version Not Supported</a></td><td align="left">服务器不支持的HTTP版本</td></tr><tr><td align="left"><strong>506</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/506">506 Variant Also Negotiates</a></td><td align="left">服务器内部配置错误</td></tr><tr><td align="left"><strong>507</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/507">507 Insufficient Storage</a></td><td align="left">服务器无法存储请求</td></tr><tr><td align="left"><strong>508</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/508">508 Loop Detected</a></td><td align="left">服务器因死循环而终止操作</td></tr><tr><td align="left"><strong>509</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/509">509 Bandwidth Limit Exceeded</a></td><td align="left">服务器带宽限制</td></tr><tr><td align="left"><strong>510</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/510">510 Not Extended</a></td><td align="left">获取资源策略未被满足</td></tr><tr><td align="left"><strong>511</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/511">511 Network Authentication Required</a></td><td align="left">需验证以许可连接</td></tr><tr><td align="left"><strong>599</strong></td><td align="left"><a href="https://seo.juziseo.com/doc/http_code/599">599 Network Connect Timeout Error</a></td><td align="left">网络连接超时</td></tr></tbody></table><hr><p>以上即是常见HTTP状态码的分类说明。</p><div style="display:none">https://seo.juziseo.com/doc/http_code/</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="/2021/12/15/Computer/04Network/"/>
      <url>/2021/12/15/Computer/04Network/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="【考查目标】"><a href="#【考查目标】" class="headerlink" title="【考查目标】"></a>【考查目标】</h2><ol><li>掌握计算机网络的基本概念、基本原理和基本方法</li><li>掌握典型计算机网络的结构、协议、应用以及典型网络设备的工作原理</li><li>能够运用计算机网络的基本概念、基本原理和基本方法进行网络系统的分析.设计和应用。</li></ol><h1 id="一、计算机网络概述"><a href="#一、计算机网络概述" class="headerlink" title="一、计算机网络概述"></a>一、计算机网络概述</h1><h2 id="一-计算机网络基本概念"><a href="#一-计算机网络基本概念" class="headerlink" title="(一)计算机网络基本概念"></a>(一)计算机网络基本概念</h2><ol><li><p>计算机网络的定义、组成与功能</p></li><li><p>计算机网络的分类</p></li><li><p>计算机网络主要性能指标</p></li></ol><h2 id="二-计算机网络体系结构"><a href="#二-计算机网络体系结构" class="headerlink" title="(二)计算机网络体系结构"></a>(二)计算机网络体系结构</h2><ol><li><p>计算机网络分层结构</p></li><li><p>计算机网络协议、接口、服务等概念</p></li><li><p>ISO&#x2F;OSI参考模型和TCP&#x2F;IP模型</p></li></ol><h1 id="二、物理层"><a href="#二、物理层" class="headerlink" title="二、物理层"></a>二、物理层</h1><h2 id="一-通信基础"><a href="#一-通信基础" class="headerlink" title="(一)通信基础"></a>(一)通信基础</h2><ol><li>信道、信号、带宽、码元、波特、速率、信源与信宿等基本概念</li><li>奈奎斯特定理与香农定理</li><li>编码与调制</li><li>电路交换、报文交换与分组交换</li><li>数据报与虚电路</li></ol><h2 id="二-传输介质"><a href="#二-传输介质" class="headerlink" title="(二)传输介质"></a>(二)传输介质</h2><ol><li>双绞线、同轴电缆、光纤与无线传输介质</li><li>物理层接口的特性</li></ol><h2 id="三-物理层设备"><a href="#三-物理层设备" class="headerlink" title="(三)物理层设备"></a>(三)物理层设备</h2><ol><li><p>中继器</p></li><li><p>集线器</p></li></ol><h1 id="三、数据链路层"><a href="#三、数据链路层" class="headerlink" title="三、数据链路层"></a>三、数据链路层</h1><h2 id="一-数据链路层的功能"><a href="#一-数据链路层的功能" class="headerlink" title="(一)数据链路层的功能"></a>(一)数据链路层的功能</h2><h2 id="二-组帧"><a href="#二-组帧" class="headerlink" title="(二)组帧"></a>(二)组帧</h2><h2 id="三-差错控制"><a href="#三-差错控制" class="headerlink" title="(三)差错控制"></a>(三)差错控制</h2><ol><li><p>检错编码</p></li><li><p>纠错编码</p></li></ol><h2 id="四-流量控制与可靠传输机制"><a href="#四-流量控制与可靠传输机制" class="headerlink" title="(四)流量控制与可靠传输机制"></a>(四)流量控制与可靠传输机制</h2><ol><li><p>流量控制、可靠传输与滑动窗口机制</p></li><li><p>停止-等待协议</p></li><li><p>后退N帧协议(GBN)</p></li><li><p>选择重传协议(SR)</p></li></ol><h2 id="五-介质访问控制"><a href="#五-介质访问控制" class="headerlink" title="(五)介质访问控制"></a>(五)介质访问控制</h2><ol><li><p>信道划分<br>频分多路复用、时分多路复用、波分多路复用、码分多路复用的概念和基本原理.</p></li><li><p>随即访问<br>ALOHA协议;CSMA协议;CSMA&#x2F;CD协议;CSMA&#x2F;CA协议。</p></li><li><p>轮询访问<br>令牌传递协议</p></li></ol><h2 id="六-局域网"><a href="#六-局域网" class="headerlink" title="(六)局域网"></a>(六)局域网</h2><ol><li>局域网的基本概念不体系结构</li><li>以太网与IEEE802.3</li><li>IEEE802.11无线局域网</li><li>VLAN基本概念与基本原理</li></ol><h2 id="七-广域网"><a href="#七-广域网" class="headerlink" title="(七)广域网"></a>(七)广域网</h2><ol><li><p>广域网的基本概念</p></li><li><p>PPP协议</p></li></ol><h2 id="八-数据链路层设备"><a href="#八-数据链路层设备" class="headerlink" title="(八)数据链路层设备"></a>(八)数据链路层设备</h2><p>以太网交换机及其工作原理</p><h1 id="四、网络层"><a href="#四、网络层" class="headerlink" title="四、网络层"></a>四、网络层</h1><h2 id="一-网络层的功能"><a href="#一-网络层的功能" class="headerlink" title="(一)网络层的功能"></a>(一)网络层的功能</h2><ol><li><p>异构网络互联</p></li><li><p>路由与转发</p></li><li><p>SDN基本概念</p></li><li><p>拥塞控制</p></li></ol><h2 id="二-路由算法"><a href="#二-路由算法" class="headerlink" title="(二)路由算法"></a>(二)路由算法</h2><ol><li><p>静态路由与动态路由</p></li><li><p>距离-向量路由算法</p></li><li><p>链路状态路由算法</p></li><li><p>层次路由</p></li></ol><h2 id="三-IPv4"><a href="#三-IPv4" class="headerlink" title="(三)IPv4"></a>(三)IPv4</h2><ol><li><p>IPv4分组</p></li><li><p>IPv4地址与NAT</p></li><li><p>子网划分、路由聚集、于网掩码与CIDR</p></li><li><p>ARP协议、DHCP协议与ICMP协议</p></li></ol><h2 id="四-IPv6"><a href="#四-IPv6" class="headerlink" title="(四)IPv6"></a>(四)IPv6</h2><ol><li><p>IPv6的主要特点</p></li><li><p>IPv6地址</p></li></ol><h2 id="五-路由协议"><a href="#五-路由协议" class="headerlink" title="(五)路由协议"></a>(五)路由协议</h2><ol><li><p>自治系统</p></li><li><p>域内路由与域间路由</p></li><li><p>RIP路由协议</p></li><li><p>OSPF路由协议</p></li><li><p>BGP路由协议</p></li></ol><h2 id="六-IP组播"><a href="#六-IP组播" class="headerlink" title="(六)IP组播"></a>(六)IP组播</h2><ol><li><p>组播的概念</p></li><li><p>IP组播地址</p></li></ol><h2 id="七-移动IP"><a href="#七-移动IP" class="headerlink" title="(七)移动IP"></a>(七)移动IP</h2><ol><li><p>移动IP的概念</p></li><li><p>移动IP通信过程</p></li></ol><h2 id="八-网络层设备"><a href="#八-网络层设备" class="headerlink" title="(八)网络层设备"></a>(八)网络层设备</h2><ol><li><p>路由器的组成和功能</p></li><li><p>路由表与分组转发</p></li></ol><h1 id="五、传输层"><a href="#五、传输层" class="headerlink" title="五、传输层"></a>五、传输层</h1><h2 id="一-传输层提供的服务"><a href="#一-传输层提供的服务" class="headerlink" title="(一)传输层提供的服务"></a>(一)传输层提供的服务</h2><ol><li><p>传输层的功能</p></li><li><p>传输层寻址与端口</p></li><li><p>无连接服务与面向连接服务</p></li></ol><h2 id="二-UDP协议"><a href="#二-UDP协议" class="headerlink" title="(二)UDP协议"></a>(二)UDP协议</h2><ol><li><p>UDP数据报</p></li><li><p>UDP校验</p></li></ol><h2 id="三-TCP协议"><a href="#三-TCP协议" class="headerlink" title="(三)TCP协议"></a>(三)TCP协议</h2><ol><li><p>TCP段</p></li><li><p>TCP连接管理</p></li><li><p>TCP可靠传输</p></li><li><p>TCP流量控制</p></li><li><p>TCP拥塞控制</p></li></ol><h1 id="六、应用层"><a href="#六、应用层" class="headerlink" title="六、应用层"></a>六、应用层</h1><h2 id="一-网络应用模型"><a href="#一-网络应用模型" class="headerlink" title="(一)网络应用模型"></a>(一)网络应用模型</h2><ol><li>客户&#x2F;服务器(C&#x2F;S)模型</li><li>对等(P2P)模型</li></ol><h2 id="二-DNS系统"><a href="#二-DNS系统" class="headerlink" title="(二)DNS系统"></a>(二)DNS系统</h2><ol><li><p>层次域名空间</p></li><li><p>域名服务器</p></li><li><p>域名解析过程</p></li></ol><h2 id="三-FTP"><a href="#三-FTP" class="headerlink" title="(三)FTP"></a>(三)FTP</h2><ol><li><p>FTP协议的工作原理</p></li><li><p>控制连接与数据连接</p></li></ol><h2 id="四-电子邮件"><a href="#四-电子邮件" class="headerlink" title="(四)电子邮件"></a>(四)电子邮件</h2><ol><li>电子邮件系统的组成结构</li><li>电于邮件格式与MIME</li><li>SMTP协议与POP3协议</li></ol><h2 id="五-WWW"><a href="#五-WWW" class="headerlink" title="(五)WWW"></a>(五)WWW</h2><ol><li>WWW的概念与组成结构</li><li>HTTP协议</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统</title>
      <link href="/2021/12/15/Computer/03OS/"/>
      <url>/2021/12/15/Computer/03OS/</url>
      
        <content type="html"><![CDATA[<h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="【考查目标】"><a href="#【考查目标】" class="headerlink" title="【考查目标】"></a>【考查目标】</h2><ol><li><p>掌握操作系统的基本概念、方法和原理,了解操作系统的结构、功能和服务,理解操作系统所采用的策略、算法和机制。</p></li><li><p>能够从计算机系统的角度理解并描述应用程序、操作系统内核和计算机硬件协作完成任务的过程。</p></li><li><p>能够运用操作系统原理,分析并解决计算机系统中与操作系统相关的问题。</p></li></ol><h1 id="一、操作系统概述"><a href="#一、操作系统概述" class="headerlink" title="一、操作系统概述"></a>一、操作系统概述</h1><h2 id="一-操作系统的基本概念"><a href="#一-操作系统的基本概念" class="headerlink" title="(一)操作系统的基本概念"></a>(一)操作系统的基本概念</h2><h2 id="二-操作系统的发展历程"><a href="#二-操作系统的发展历程" class="headerlink" title="(二)操作系统的发展历程"></a>(二)操作系统的发展历程</h2><h2 id="三-程序运行环境"><a href="#三-程序运行环境" class="headerlink" title="(三)程序运行环境"></a>(三)程序运行环境</h2><ol><li><p>CPU运行模式<br>内核模式、用户模式</p></li><li><p>中断和异常的处理</p></li><li><p>系统调用</p></li><li><p>程序的链接与装入</p></li><li><p>程序运行时内存映像与地址空间</p></li></ol><h2 id="四-操作系统结构"><a href="#四-操作系统结构" class="headerlink" title="(四)操作系统结构"></a>(四)操作系统结构</h2><p>分层,模块化,宏内核,微内核,外核</p><h2 id="五-操作系统引导"><a href="#五-操作系统引导" class="headerlink" title="(五)操作系统引导"></a>(五)操作系统引导</h2><h2 id="六-虚拟机"><a href="#六-虚拟机" class="headerlink" title="(六)虚拟机"></a>(六)虚拟机</h2><h1 id="二、进程管理"><a href="#二、进程管理" class="headerlink" title="二、进程管理"></a>二、进程管理</h1><h2 id="一-进程与线程"><a href="#一-进程与线程" class="headerlink" title="(一)进程与线程"></a>(一)进程与线程</h2><ol><li><p>进程与线程的基本概念</p></li><li><p>进程&#x2F;线程的状态与转换</p></li><li><p>线程的实现<br>内核支持的线程,线程库支持的线程</p></li><li><p>进程与线程的组织与控制</p></li><li><p>进程间通信<br>共享内存,消息传递,管道</p></li></ol><h2 id="二-CPU调度与上下文切换"><a href="#二-CPU调度与上下文切换" class="headerlink" title="(二)CPU调度与上下文切换"></a>(二)CPU调度与上下文切换</h2><ol><li><p>调度的基本概念</p></li><li><p>调度的目标</p></li><li><p>调度的实现<br>调度器&#x2F;调度程序(scheduler),调度的时机与调度方式(抢占式&#x2F;非抢占步),间逛进程,内核级线程与用户级线程调度</p></li><li><p>典型调度算法</p><ul><li>先来先服务调度算法;</li><li>短作业(短进程、短线程)优先调度算法;</li><li>时间片轮转调度算法;优先级调度算法;</li><li>高响应比优先调度算法;</li><li>多级队列调度算法;</li><li>多级反馈队列调度算法.</li></ul></li><li><p>上下文及其切换机制</p></li></ol><h1 id="三-同步与互斥"><a href="#三-同步与互斥" class="headerlink" title="(三)同步与互斥"></a>(三)同步与互斥</h1><ol><li><p>同步于互斥的基本概念</p></li><li><p>基本的实现方法<br>软件方法;硬件方法:</p></li><li><p>锁</p></li><li><p>信号量</p></li><li><p>条件变量</p></li><li><p>经典同步问题</p><ul><li>生产者-消费者问题;</li><li>读者-写者问题;</li><li>哲学家进餐问题.</li></ul></li></ol><h2 id="四-死锁"><a href="#四-死锁" class="headerlink" title="(四)死锁"></a>(四)死锁</h2><ol><li><p>死锁的基本概念</p></li><li><p>死锁预防</p></li><li><p>死锁避免</p></li><li><p>死锁检测和解除</p></li></ol><h1 id="三、内存管理"><a href="#三、内存管理" class="headerlink" title="三、内存管理"></a>三、内存管理</h1><h2 id="一-内存管理基础"><a href="#一-内存管理基础" class="headerlink" title="(一)内存管理基础"></a>(一)内存管理基础</h2><ol><li><p>内存管理的基本概伊<br>逻辑地址空间与物理地址空间,地址变换,内存共享,内存保护,内存分配与回收</p></li><li><p>连续分配管理方式</p></li><li><p>页式管理</p></li><li><p>段式管理</p></li><li><p>段页式管理</p></li></ol><h2 id="二-虚拟内存管理"><a href="#二-虚拟内存管理" class="headerlink" title="(二)虚拟内存管理"></a>(二)虚拟内存管理</h2><ol><li><p>虚拟内存基本概念</p></li><li><p>请求页式管理</p></li><li><p>页框分配</p></li><li><p>页置换算法</p></li><li><p>内存映射文件(Memory-MappedFiles)</p></li><li><p>虚拟存储器性能的影响因素及改进方式</p></li></ol><h1 id="四、文件管理"><a href="#四、文件管理" class="headerlink" title="四、文件管理"></a>四、文件管理</h1><h2 id="一-文件"><a href="#一-文件" class="headerlink" title="(一)文件"></a>(一)文件</h2><ol><li>文件的基本概伊</li><li>文件元数据和索引节点(inode)</li><li>文件的操作<br>建立,删除,打开,关闭,读,写</li><li>文件的保护</li><li>文件的逻辑结构</li><li>文件的物理结构</li></ol><h2 id="二-目录"><a href="#二-目录" class="headerlink" title="(二)目录"></a>(二)目录</h2><ol><li><p>目录的基本概念</p></li><li><p>树形目录</p></li><li><p>目录的操作</p></li><li><p>硬链接和软链接</p></li></ol><h2 id="三-文件系统"><a href="#三-文件系统" class="headerlink" title="(三)文件系统"></a>(三)文件系统</h2><ol><li><p>文件系统的全局结构(layout)<br>文件系统在外存中的结构,文件系统在内存中的结构</p></li><li><p>外存空闲空间管理办法</p></li><li><p>虚拟文件系统</p></li><li><p>文件系统挂载(mounting)</p></li></ol><h1 id="五、输入输出-I-O-管理"><a href="#五、输入输出-I-O-管理" class="headerlink" title="五、输入输出(I&#x2F;O)管理"></a>五、输入输出(I&#x2F;O)管理</h1><h2 id="一-I-O管理基础"><a href="#一-I-O管理基础" class="headerlink" title="(一)I&#x2F;O管理基础"></a>(一)I&#x2F;O管理基础</h2><ol><li>设备<br>设备的基本概念,设备的分类,I&#x2F;O接口,I&#x2F;O端口</li><li>IO控制方式<br>轮询方式,中断方式,DMA方式</li><li>IO软件层次结构<br>中断处理程序,驱动程序,设备独立软件,用户层I&#x2F;O软件</li><li>输入&#x2F;输出应用程序接口<br>字符设备接口,块设备接口,网络设备接口,阻塞&#x2F;非阻塞I&#x2F;O</li></ol><h2 id="二-设备独立软件"><a href="#二-设备独立软件" class="headerlink" title="(二)设备独立软件"></a>(二)设备独立软件</h2><ol><li><p>缓冲区管理</p></li><li><p>设备分配与回收</p></li><li><p>假脱机技术(SPOOLing)</p></li><li><p>设备驱动程序接口</p></li></ol><h1 id="三-外存管理"><a href="#三-外存管理" class="headerlink" title="(三)外存管理"></a>(三)外存管理</h1><ol><li><p>磁盘<br>磁盘结构,格式化,分区,磁盘调度方法</p></li><li><p>固态硬盘<br>读写性能特性,磨损均衡</p></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理</title>
      <link href="/2021/12/15/Computer/02POCC/"/>
      <url>/2021/12/15/Computer/02POCC/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机组成原理"><a href="#计算机组成原理" class="headerlink" title="计算机组成原理"></a>计算机组成原理</h1><h2 id="考查目标"><a href="#考查目标" class="headerlink" title="考查目标"></a>考查目标</h2><ol><li><p>理解单处理器计算机系统中主要部件的工作原理、组成结构以及相互连接方式。</p></li><li><p>掌握指令集体系结构的基本知识和基本实现方法,对计算机硬件相关问题进行分析,并能够对相关部件进行设计。</p></li><li><p>理解计算机系统的整机概念,能够综合运用计算机组成的基本原理和基本方法,对高级编程语言(C语言)程序中的相关问题进行分析,具备软硬件协同分析和设计能力。</p></li></ol><h1 id="一、计算机系统概述"><a href="#一、计算机系统概述" class="headerlink" title="一、计算机系统概述"></a>一、计算机系统概述</h1><h2 id="一-计算机系统层次结构"><a href="#一-计算机系统层次结构" class="headerlink" title="(一)计算机系统层次结构"></a>(一)计算机系统层次结构</h2><ol><li><p>计算机系统的基本组成</p></li><li><p>计算机硬件的基本组成</p></li><li><p>计算机软件和硬件的关系</p></li><li><p>计算机系统的工作原理<br>“存储程序“工作方式,高级语言程序与机器语言程厌之间的转换,程序和指令的执行过程。</p></li></ol><h2 id="二-计算机性能指标"><a href="#二-计算机性能指标" class="headerlink" title="(二)计算机性能指标"></a>(二)计算机性能指标</h2><p>吞吐量、响应时间;CPU时钟周期、主频、CPI、CPU执行时间;MIPS、MFLOPS,GFLOPS、<br>TFLOP2、PFLOP2、EFLOPS3、ZFLOP53.</p><h1 id="二、数据的表示和运算"><a href="#二、数据的表示和运算" class="headerlink" title="二、数据的表示和运算"></a>二、数据的表示和运算</h1><h2 id="一-数制与编码"><a href="#一-数制与编码" class="headerlink" title="(一)数制与编码"></a>(一)数制与编码</h2><ol><li><p>进位计数制及其数据之间的相互转换</p></li><li><p>定友数的编码表示</p></li></ol><h2 id="三-运算方法和运算电路"><a href="#三-运算方法和运算电路" class="headerlink" title="(三)运算方法和运算电路"></a>(三)运算方法和运算电路</h2><ol><li><p>基本运算部件<br>加法器,算术逻辑部件(ALU)</p></li><li><p>加&#x2F;减运算<br>补码加&#x2F;减运算器,标志位的生成。</p></li><li><p>乘&#x2F;除运算<br>乘&#x2F;除法运算的基本原理,乘法电路和除法电路的基本结构.</p></li></ol><h2 id="三-整数的表示和运算"><a href="#三-整数的表示和运算" class="headerlink" title="(三)整数的表示和运算"></a>(三)整数的表示和运算</h2><ol><li><p>无符号整数的表示和运算</p></li><li><p>带符号整数的表示和运算</p></li></ol><h2 id="四-浮点数的表示和运算"><a href="#四-浮点数的表示和运算" class="headerlink" title="(四)浮点数的表示和运算"></a>(四)浮点数的表示和运算</h2><ol><li><p>浮炎数的表示<br>IEEE754标准</p></li><li><p>浮点数的加&#x2F;减运算</p></li></ol><h1 id="三、存储器层次结构"><a href="#三、存储器层次结构" class="headerlink" title="三、存储器层次结构"></a>三、存储器层次结构</h1><h2 id="一-存储器的分类"><a href="#一-存储器的分类" class="headerlink" title="(一)存储器的分类"></a>(一)存储器的分类</h2><h2 id="二-层次化存储器的基本结构"><a href="#二-层次化存储器的基本结构" class="headerlink" title="(二)层次化存储器的基本结构"></a>(二)层次化存储器的基本结构</h2><h2 id="三-半导体随机存取存储器"><a href="#三-半导体随机存取存储器" class="headerlink" title="(三)半导体随机存取存储器"></a>(三)半导体随机存取存储器</h2><ol><li><p>SRAM存储器</p></li><li><p>DRAM存储器</p></li><li><p>Flash存储器</p></li></ol><h2 id="四-主存储器"><a href="#四-主存储器" class="headerlink" title="(四)主存储器"></a>(四)主存储器</h2><ol><li><p>DRAM芯片和内存条</p></li><li><p>多模块存储器</p></li><li><p>主存和CPU之间的连接</p></li></ol><h2 id="五-外部存储器"><a href="#五-外部存储器" class="headerlink" title="(五)外部存储器"></a>(五)外部存储器</h2><ol><li><p>磁盘存储器</p></li><li><p>固态硬盘(SSD)</p></li></ol><h2 id="六-高速缓冲存储器-Cache"><a href="#六-高速缓冲存储器-Cache" class="headerlink" title="(六)高速缓冲存储器(Cache)"></a>(六)高速缓冲存储器(Cache)</h2><ol><li>Cache的基本原理</li><li>Cach和主存之间的映射方式</li><li>Cache中主存块的替换算法</li><li>Cache写策略</li></ol><h2 id="七-虚拟存储器"><a href="#七-虚拟存储器" class="headerlink" title="(七)虚拟存储器"></a>(七)虚拟存储器</h2><ol><li><p>虚拟存储器的基本概念</p></li><li><p>页式虚拟存储器<br>基本原理,页表,地址转换,TLB(块表)</p></li><li><p>段式虚拟存储器</p></li><li><p>段页式虚拟存储器</p></li></ol><h1 id="四、指令系统"><a href="#四、指令系统" class="headerlink" title="四、指令系统"></a>四、指令系统</h1><h2 id="一-指令系统的基本概念"><a href="#一-指令系统的基本概念" class="headerlink" title="(一)指令系统的基本概念"></a>(一)指令系统的基本概念</h2><h2 id="二-指令格式"><a href="#二-指令格式" class="headerlink" title="(二)指令格式"></a>(二)指令格式</h2><h2 id="三-寻址方式"><a href="#三-寻址方式" class="headerlink" title="(三)寻址方式"></a>(三)寻址方式</h2><h2 id="四-数据的对齐和大-小端存放方式"><a href="#四-数据的对齐和大-小端存放方式" class="headerlink" title="(四)数据的对齐和大&#x2F;小端存放方式"></a>(四)数据的对齐和大&#x2F;小端存放方式</h2><h2 id="五-CISC和RISC的基本概念"><a href="#五-CISC和RISC的基本概念" class="headerlink" title="(五)CISC和RISC的基本概念"></a>(五)CISC和RISC的基本概念</h2><h2 id="六-高级语言程序与机器级代码之间的对应"><a href="#六-高级语言程序与机器级代码之间的对应" class="headerlink" title="(六)高级语言程序与机器级代码之间的对应"></a>(六)高级语言程序与机器级代码之间的对应</h2><ol><li>编译器,汇编器和链路器的基本概念</li><li>选择结构语句的机器级表示</li><li>循环结构语句的机器级表示</li><li>过程(函数)调用对应的机器级表示</li></ol><h1 id="五、中央处理器-CPU"><a href="#五、中央处理器-CPU" class="headerlink" title="五、中央处理器(CPU)"></a>五、中央处理器(CPU)</h1><h2 id="一-CPU的功能和基本结构"><a href="#一-CPU的功能和基本结构" class="headerlink" title="(一)CPU的功能和基本结构"></a>(一)CPU的功能和基本结构</h2><h2 id="二-指令执行过程"><a href="#二-指令执行过程" class="headerlink" title="(二)指令执行过程"></a>(二)指令执行过程</h2><h2 id="三-数据通路的功能和基本结构"><a href="#三-数据通路的功能和基本结构" class="headerlink" title="(三)数据通路的功能和基本结构"></a>(三)数据通路的功能和基本结构</h2><h2 id="四-控制器的功能和工作原理"><a href="#四-控制器的功能和工作原理" class="headerlink" title="(四)控制器的功能和工作原理"></a>(四)控制器的功能和工作原理</h2><h2 id="五-异常和中断机制"><a href="#五-异常和中断机制" class="headerlink" title="(五)异常和中断机制"></a>(五)异常和中断机制</h2><ol><li>异常和中断的基本概念</li><li>异常和中断的分类</li><li>异常和中断的检测与响应</li></ol><h2 id="六-指令流水线"><a href="#六-指令流水线" class="headerlink" title="(六)指令流水线"></a>(六)指令流水线</h2><ol><li>指令流水线的基本概念</li><li>指令流水线的基本实现</li><li>结构冒险、数据冒险和控制冒险的处理</li><li>超标量和动态流水线的基本概念</li></ol><h2 id="七-多处理器基本概念"><a href="#七-多处理器基本概念" class="headerlink" title="(七)多处理器基本概念"></a>(七)多处理器基本概念</h2><ol><li>SISD、SIMD、MIMD、向量处理器的基本概念</li><li>硬件多线程的基本概念</li><li>多核处理器(multi-core)的基本概念</li><li>共享内存多处理器(SMP)的基本</li></ol><h1 id="六、总线和输入-输出系统"><a href="#六、总线和输入-输出系统" class="headerlink" title="六、总线和输入&#x2F;输出系统"></a>六、总线和输入&#x2F;输出系统</h1><h2 id="一-总线"><a href="#一-总线" class="headerlink" title="(一)总线"></a>(一)总线</h2><ol><li>总线的基本概念</li><li>总线的组成及性能指标</li><li>总线事务和定时</li></ol><h2 id="二-I-O接口-I-O控制器"><a href="#二-I-O接口-I-O控制器" class="headerlink" title="(二)I&#x2F;O接口(I&#x2F;O控制器)"></a>(二)I&#x2F;O接口(I&#x2F;O控制器)</h2><ol><li>I&#x2F;O接口的功能和基本结构</li><li>I&#x2F;O 端口及其编址</li></ol><h2 id="三-O方式"><a href="#三-O方式" class="headerlink" title="(三)&#x2F;&#x2F;O方式"></a>(三)&#x2F;&#x2F;O方式</h2><ol><li>程序查询方式</li><li>程序中断方式<br>中断的基本概念:中断响应过程;中断处理过程;多重中断和中断屏蔽的概念。</li><li>DMA 方式<br>DMA控制器的组成,DMA传送过程</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机组成原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构大纲</title>
      <link href="/2021/12/15/Computer/01DataStructure/"/>
      <url>/2021/12/15/Computer/01DataStructure/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="考查目标"><a href="#考查目标" class="headerlink" title="考查目标"></a>考查目标</h2><ol><li>掌握数据结构的基本概念、基本原理和基本方法。</li><li>掌握数据的逻辑结构、存储结构及基本操作的实现,能够对算法进行基本的时间复杂度与空间复杂度的分析。</li><li>能够运用数据结构基本原理和方法进行问题的分析与求解,具备采用C或C++语言设计与实现算法的能力。</li></ol><h1 id="一、线性表"><a href="#一、线性表" class="headerlink" title="一、线性表"></a>一、线性表</h1><h2 id="一-线性表的基本概念"><a href="#一-线性表的基本概念" class="headerlink" title="(一)线性表的基本概念"></a>(一)线性表的基本概念</h2><h2 id="二-线性表的实现"><a href="#二-线性表的实现" class="headerlink" title="(二)线性表的实现"></a>(二)线性表的实现</h2><ol><li>顺序存储</li><li>链式开储</li></ol><h2 id="三-线性表的应用"><a href="#三-线性表的应用" class="headerlink" title="(三)线性表的应用"></a>(三)线性表的应用</h2><h1 id="二、栈、队列和数组"><a href="#二、栈、队列和数组" class="headerlink" title="二、栈、队列和数组"></a>二、栈、队列和数组</h1><h2 id="一-栈和队列的基本概念"><a href="#一-栈和队列的基本概念" class="headerlink" title="(一)栈和队列的基本概念"></a>(一)栈和队列的基本概念</h2><h2 id="二-栈和队列的顺厌存储结构"><a href="#二-栈和队列的顺厌存储结构" class="headerlink" title="(二)栈和队列的顺厌存储结构"></a>(二)栈和队列的顺厌存储结构</h2><h2 id="三-栈和队列的链式存储结构"><a href="#三-栈和队列的链式存储结构" class="headerlink" title="(三)栈和队列的链式存储结构"></a>(三)栈和队列的链式存储结构</h2><h2 id="四-多维数组的存储"><a href="#四-多维数组的存储" class="headerlink" title="(四)多维数组的存储"></a>(四)多维数组的存储</h2><h2 id="五-特殊矩阵的压缩存储"><a href="#五-特殊矩阵的压缩存储" class="headerlink" title="(五)特殊矩阵的压缩存储"></a>(五)特殊矩阵的压缩存储</h2><h2 id="六-栈、队列和数组的应用"><a href="#六-栈、队列和数组的应用" class="headerlink" title="(六)栈、队列和数组的应用"></a>(六)栈、队列和数组的应用</h2><h1 id="三、树与二叉树"><a href="#三、树与二叉树" class="headerlink" title="三、树与二叉树"></a>三、树与二叉树</h1><h2 id="一-树的基本概念"><a href="#一-树的基本概念" class="headerlink" title="(一)树的基本概念"></a>(一)树的基本概念</h2><h2 id="二-二叉树"><a href="#二-二叉树" class="headerlink" title="(二)二叉树"></a>(二)二叉树</h2><ol><li>二叉树的定义及其主要特征</li><li>二叉树的顺序存储结构和链式存储结构</li><li>二叉树的遏历</li><li>线索二又树的基本概念和构适</li></ol><h2 id="三-树、森林"><a href="#三-树、森林" class="headerlink" title="(三)树、森林"></a>(三)树、森林</h2><ol><li>树的存储结构</li><li>森林与二叉树的转换</li><li>树和树林的遍历</li></ol><h2 id="四-树与二叉树的应用"><a href="#四-树与二叉树的应用" class="headerlink" title="(四)树与二叉树的应用"></a>(四)树与二叉树的应用</h2><ol><li>哈夫曼(Huffman)树和听夫曼编码</li><li>并查集及其应用</li></ol><h1 id="四、图"><a href="#四、图" class="headerlink" title="四、图"></a>四、图</h1><h2 id="一-图的基本概念"><a href="#一-图的基本概念" class="headerlink" title="(一)图的基本概念"></a>(一)图的基本概念</h2><h2 id="二-图的存储及基本操作"><a href="#二-图的存储及基本操作" class="headerlink" title="(二)图的存储及基本操作"></a>(二)图的存储及基本操作</h2><ol><li><p>邻接矩阵</p></li><li><p>邻接表</p></li><li><p>邻接多重表、十字链表</p></li></ol><h2 id="三-图的逼历"><a href="#三-图的逼历" class="headerlink" title="(三)图的逼历"></a>(三)图的逼历</h2><ol><li><p>深度优先搜索</p></li><li><p>广度优先搜索</p></li></ol><h2 id="四-图的基本应用"><a href="#四-图的基本应用" class="headerlink" title="(四)图的基本应用"></a>(四)图的基本应用</h2><ol><li><p>最小(代价)生成树</p></li><li><p>最短路径</p></li><li><p>拓扑排历</p></li><li><p>关键路径</p></li></ol><h1 id="五、查找"><a href="#五、查找" class="headerlink" title="五、查找"></a>五、查找</h1><h2 id="一-查找的基本概念"><a href="#一-查找的基本概念" class="headerlink" title="(一)查找的基本概念"></a>(一)查找的基本概念</h2><h2 id="二-顺序查找法"><a href="#二-顺序查找法" class="headerlink" title="(二)顺序查找法"></a>(二)顺序查找法</h2><h2 id="三-分块查找法"><a href="#三-分块查找法" class="headerlink" title="(三)分块查找法"></a>(三)分块查找法</h2><h2 id="四-折半查找法"><a href="#四-折半查找法" class="headerlink" title="(四)折半查找法"></a>(四)折半查找法</h2><h2 id="五-树型查找"><a href="#五-树型查找" class="headerlink" title="(五)树型查找"></a>(五)树型查找</h2><ol><li><p>二叉树搜索树</p></li><li><p>平衡二叉树</p></li><li><p>红黑树</p></li></ol><h2 id="六-B树及其基本操作、B-树的基本概念"><a href="#六-B树及其基本操作、B-树的基本概念" class="headerlink" title="(六)B树及其基本操作、B+树的基本概念"></a>(六)B树及其基本操作、B+树的基本概念</h2><h2 id="七-散列-Hash-表"><a href="#七-散列-Hash-表" class="headerlink" title="(七)散列(Hash)表"></a>(七)散列(Hash)表</h2><h2 id="八-字符串模式匹配"><a href="#八-字符串模式匹配" class="headerlink" title="(八)字符串模式匹配"></a>(八)字符串模式匹配</h2><h2 id="九-查找算法的分析及应用"><a href="#九-查找算法的分析及应用" class="headerlink" title="(九)查找算法的分析及应用"></a>(九)查找算法的分析及应用</h2><h1 id="六、排序"><a href="#六、排序" class="headerlink" title="六、排序"></a>六、排序</h1><h2 id="一-排序的基本概念"><a href="#一-排序的基本概念" class="headerlink" title="(一)排序的基本概念"></a>(一)排序的基本概念</h2><h2 id="二-直接插入排序"><a href="#二-直接插入排序" class="headerlink" title="(二)直接插入排序"></a>(二)直接插入排序</h2><h2 id="三-折半插入排序"><a href="#三-折半插入排序" class="headerlink" title="(三)折半插入排序"></a>(三)折半插入排序</h2><h2 id="四-冒泡排序-bubble-sort"><a href="#四-冒泡排序-bubble-sort" class="headerlink" title="(四)冒泡排序(bubble sort)"></a>(四)冒泡排序(bubble sort)</h2><h2 id="五-简单选择排序"><a href="#五-简单选择排序" class="headerlink" title="(五)简单选择排序"></a>(五)简单选择排序</h2><h2 id="六-希尔排序-shell-sort"><a href="#六-希尔排序-shell-sort" class="headerlink" title="(六)希尔排序(shell sort)"></a>(六)希尔排序(shell sort)</h2><h2 id="七-快速排序"><a href="#七-快速排序" class="headerlink" title="(七)快速排序"></a>(七)快速排序</h2><h2 id="八-堆排序"><a href="#八-堆排序" class="headerlink" title="(八)堆排序"></a>(八)堆排序</h2><h2 id="九-二路归并排序-merge-sort"><a href="#九-二路归并排序-merge-sort" class="headerlink" title="(九)二路归并排序(merge sort)"></a>(九)二路归并排序(merge sort)</h2><h2 id="十-基数排序"><a href="#十-基数排序" class="headerlink" title="(十)基数排序"></a>(十)基数排序</h2><h2 id="十一-外部排序"><a href="#十一-外部排序" class="headerlink" title="(十一)外部排序"></a>(十一)外部排序</h2><h2 id="十二-排序算法的分析和应用"><a href="#十二-排序算法的分析和应用" class="headerlink" title="(十二)排序算法的分析和应用"></a>(十二)排序算法的分析和应用</h2><div style="display:none"><ul><li>2022年计算机学科专业基础考试大纲</li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> data structure </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Civilization VI(文明6)</title>
      <link href="/2021/12/12/Game/CivilizationVI/"/>
      <url>/2021/12/12/Game/CivilizationVI/</url>
      
        <content type="html"><![CDATA[<h1 id="Sid-Meier’s-Civilization-VI-文明6"><a href="#Sid-Meier’s-Civilization-VI-文明6" class="headerlink" title="Sid Meier’s Civilization VI(文明6)"></a>Sid Meier’s Civilization VI(文明6)</h1><p>《文明6》是Firaxis Games开发，2K Games发行的历史策略回合制游戏，于2016年10月21日发行PC版本，2018年11月16日登陆Switch平台，2019年11月22日发布了XboxOne、PS4版本，为《文明》系列第六部。</p><h1 id="文明6控制台代码"><a href="#文明6控制台代码" class="headerlink" title="文明6控制台代码"></a>文明6控制台代码</h1><h2 id="控制台权限"><a href="#控制台权限" class="headerlink" title="控制台权限"></a>控制台权限</h2><ol><li>找到并修改<code>AppOptions.txt</code>文件内容</li><li>将<code>EnableDebugMenu 0</code>改成<code>EnableDebugMenu 1</code></li></ol><ul><li>Steam设置路径(xxx指Windows的用户名)</li></ul><p><span style="color:#4185c4;">C:\Users\xxx\AppData\Local\Firaxis Games\Sid Meier’s Civilization VI\AppOptions.txt</span></p><ul><li>Epic设置路径(xxx指Windows的用户名)</li></ul><p><span style="color:#4185c4;">C:\Users\xxx\Documents\My Games\Sid Meier’s Civilization VI (Epic)\AppOptions.txt</span></p><h2 id="开启控制台"><a href="#开启控制台" class="headerlink" title="开启控制台"></a>开启控制台</h2><ul><li>进入游戏按<code>~</code>就可以打开控制台</li><li>注意必须用英文键盘，中文输入法可能无法呼出控制台</li></ul><h2 id="修改-地图全开"><a href="#修改-地图全开" class="headerlink" title="修改(地图全开)"></a>修改(地图全开)</h2><ol><li><code>reveal all</code>是地图全亮无雾</li><li><code>explore all</code>是地图亮有雾</li></ol><h1 id="文明6MOD"><a href="#文明6MOD" class="headerlink" title="文明6MOD"></a>文明6MOD</h1><h2 id="大型MOD"><a href="#大型MOD" class="headerlink" title="大型MOD"></a>大型MOD</h2><ul><li>和而不同</li></ul><h2 id="界面MOD"><a href="#界面MOD" class="headerlink" title="界面MOD"></a>界面MOD</h2><ul><li>和而不同推荐UI</li></ul><h2 id="主题MOD"><a href="#主题MOD" class="headerlink" title="主题MOD"></a>主题MOD</h2><ul><li>文明太空主界面背景（文明：超越地球主界面背景）</li></ul><h2 id="领袖MOD"><a href="#领袖MOD" class="headerlink" title="领袖MOD"></a>领袖MOD</h2><ul><li></li></ul><div style="display:none"></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dead by Daylight(黎明杀机)</title>
      <link href="/2021/12/10/Game/DeadbyDaylight/"/>
      <url>/2021/12/10/Game/DeadbyDaylight/</url>
      
        <content type="html"><![CDATA[<h1 id="Dead-by-Daylight-黎明杀机"><a href="#Dead-by-Daylight-黎明杀机" class="headerlink" title="Dead by Daylight(黎明杀机)"></a>Dead by Daylight(黎明杀机)</h1><ul><li>Behaviour Interactive工作室开发非对称竞技类游戏</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li><p>黎明杀机官网<br>  <a href="https://deadbydaylight.com/">deadbydaylight.com </a></p></li><li><p>黎明杀机Wiki<br>  <a href="https://deadbydaylight.fandom.com/">deadbydaylight.fandom.com</a></p></li></ul><h1 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h1><h2 id="黎明杀机分数计算机制（人类）"><a href="#黎明杀机分数计算机制（人类）" class="headerlink" title="黎明杀机分数计算机制（人类）"></a>黎明杀机分数计算机制（人类）</h2><div style="display:none">- https://www.pkvs.com/guide/111072.html</div><ul><li>详解分数计算机制详解：屠夫就不用说了 分很容易够人类的话是7000分保段 上段就是分够两个圈一个圈满了是5000分 最大化是8000分<br>得分分为四种：</li></ul><h3 id="1、目标分"><a href="#1、目标分" class="headerlink" title="1、目标分"></a>1、目标分</h3><ul><li><p>技能试验 就是像靶子的那个（开大门 修电机等）</p></li><li><p>修好一个电机加1250分电机出来判定按上完美是150分 </p></li><li><p>普通的则是50分</p></li><li><p>翻一个箱子是250分</p></li><li><p>拉一个逃生门是1250分</p></li><li><p>走地道也会加2000分这是正常的分数 </p></li><li><p>非正常的就是地图了 如果一个普通的地图 每当你发现一个发电机就会加300分 </p></li><li><p>如果带记录屠夫东西的附件的话就是看到架子和钩子的时候也同样加300分 所以地图也就是一个刷分神器 只需要绕地图一圈</p></li></ul><h3 id="2、逃生分"><a href="#2、逃生分" class="headerlink" title="2、逃生分"></a>2、逃生分</h3><ul><li>自我分（自摸，自救，逃生）</li><li>逃跑出去加满一个圈 5000分</li><li>自我治疗自己满进度条300分</li><li>自己扒开夹子500分</li><li>自己脱钩500分</li></ul><h3 id="3、援助分"><a href="#3、援助分" class="headerlink" title="3、援助分"></a>3、援助分</h3><ul><li>帮助分（摸队友 救队友 合作修电机）</li><li>每当从队友身边走过就会有250分相逢</li><li>自我治疗或者治疗队友的时候出来判定的时候完美是150分 普通是50分</li><li>治疗受伤队友的话满的进度条是300分</li><li>帮队友扒夹子会有1000分</li><li>从钩子上救人会有1250分</li><li>和队友修电机的话每有一个队友就加250的合作分</li></ul><h3 id="4、无畏分"><a href="#4、无畏分" class="headerlink" title="4、无畏分"></a>4、无畏分</h3><ul><li>无畏分（拆图腾 躲追杀）</li><li>被屠夫追加250分</li><li>被屠夫发现250分</li><li>甩开屠夫加的分在与你6了多久</li><li>板子砸晕屠夫1000分</li><li>手电筒照瞎屠夫800分 如果隐身屠夫隐身的时候被照会加1000分</li><li>拆掉一个钩子500分 判定完美150分 普通50分</li><li>弹开一个夹子300分 毁掉一个夹子250分 判定完美150分 普通50分</li><li>被屠夫砍一刀加250分</li></ul><h2 id="段位机制概要（人类）"><a href="#段位机制概要（人类）" class="headerlink" title="段位机制概要（人类）"></a>段位机制概要（人类）</h2><p><a href="https://www.bilibili.com/read/cv11878938">https://www.bilibili.com/read/cv11878938</a></p><h3 id="助人为乐"><a href="#助人为乐" class="headerlink" title="助人为乐"></a>助人为乐</h3><ul><li>援助、解救、援助动作</li></ul><h3 id="东躲西藏"><a href="#东躲西藏" class="headerlink" title="东躲西藏"></a>东躲西藏</h3><ul><li>躲避杀手、木板击晕</li></ul><h3 id="光明使者"><a href="#光明使者" class="headerlink" title="光明使者"></a>光明使者</h3><ul><li>修电机、转移杀手注意、拆图腾</li><li>被追杀时其他逃生者分也算</li></ul><h3 id="百折不摧"><a href="#百折不摧" class="headerlink" title="百折不摧"></a>百折不摧</h3><ul><li>生存时长、不倒地</li></ul><h2 id="黎明杀机分数计算机制（屠夫）"><a href="#黎明杀机分数计算机制（屠夫）" class="headerlink" title="黎明杀机分数计算机制（屠夫）"></a>黎明杀机分数计算机制（屠夫）</h2><h3 id="凶残"><a href="#凶残" class="headerlink" title="凶残"></a>凶残</h3><ul><li>普通攻击击中逃生者，300分</li><li>打断逃生者的交互动作并直接背起逃生者，600分</li><li>破坏发电机或者板子，100分</li></ul><h3 id="阴险"><a href="#阴险" class="headerlink" title="阴险"></a>阴险</h3><ul><li>使用技能，分值各有不同，如夹子屠夫夹子生效困住逃生者获得1000分，电锯屠夫开启电锯击倒逃生者850分</li><li>本局无逃生者成功生存，2500分</li><li>关闭地道，500分</li><li>主动触发绝命终局，即主动打开大门或者在大门未打开时关闭地道，200分</li><li>被手电照到但是及时转头没有被照瞎，75分</li><li>使逃生者流血，在逃生者被治愈后结算，一般不超过个位数可忽略不计。</li></ul><h3 id="追猎"><a href="#追猎" class="headerlink" title="追猎"></a>追猎</h3><ul><li>发现逃生者，200分.如果是首次发现该逃生者，400分。</li><li>从柜子中发现逃生者，600分</li><li>追逐，追逐结束后根据追逐时间长短给予追猎分</li></ul><h3 id="献祭"><a href="#献祭" class="headerlink" title="献祭"></a>献祭</h3><ul><li>把逃生者放置在钩子上，500分，每个逃生者第一次被挂上额外奖励200分</li><li>逃生者在钩子上进入第二阶段，200分</li><li>在钩子上挂死一个人，200分</li><li>绝命终局之后挂上钩子有额外加分</li><li>通过技能、配件或祭品来处决逃生者，1000分</li></ul><h2 id="段位机制概要（屠夫）"><a href="#段位机制概要（屠夫）" class="headerlink" title="段位机制概要（屠夫）"></a>段位机制概要（屠夫）</h2><h3 id="大门守卫"><a href="#大门守卫" class="headerlink" title="大门守卫"></a>大门守卫</h3><h3 id="一秉虔诚"><a href="#一秉虔诚" class="headerlink" title="一秉虔诚"></a>一秉虔诚</h3><h3 id="心狠手辣"><a href="#心狠手辣" class="headerlink" title="心狠手辣"></a>心狠手辣</h3><h3 id="赶尽杀绝"><a href="#赶尽杀绝" class="headerlink" title="赶尽杀绝"></a>赶尽杀绝</h3><h1 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h1><h2 id="修电机"><a href="#修电机" class="headerlink" title="修电机"></a>修电机</h2><p>修电机（90S）V6.1.0以后</p><p>老版本在70S~71S之间徘徊。单人裸修电机时间理论上可以定为70S。官方说过，70个点，一个人修每秒1 ，2个人修每秒1.8。</p><table><thead><tr><th>修理速度：</th><th>即：</th></tr></thead><tbody><tr><td>1人修理需要时间70s</td><td>正常单人修理速度为每秒1.25%进度</td></tr><tr><td>2人修理需要时间44.44s</td><td>正常双人修理速度为每秒2.25%进度</td></tr><tr><td>3人修理需要时间33.33s</td><td>正常三人修理速度为每秒3.00%进度</td></tr><tr><td>4人修理需要时间28.57s</td><td>正常四人修理速度为每秒3.50%进度</td></tr></tbody></table><h2 id="治疗"><a href="#治疗" class="headerlink" title="治疗"></a>治疗</h2><h3 id="单人自我治愈时间"><a href="#单人自我治愈时间" class="headerlink" title="单人自我治愈时间"></a>单人自我治愈时间</h3><p>单人自我治愈时间(25S)<br>自我治愈，即在携带自我治愈技能的情况下，受伤后进行自摸，没有使用医疗包，没有DEBUFF的干扰，QTE都未失败，且未完美的情况下，单人受伤后自我治疗的时间。经过我测试，结果在25S左右徘徊。最终断定，单人自摸时间理论上可以定为25S。</p><h3 id="对他人进行治疗时间"><a href="#对他人进行治疗时间" class="headerlink" title="对他人进行治疗时间"></a>对他人进行治疗时间</h3><p>对他人进行治疗时间(12.5S)<br>对他人进行治疗，即未使用医疗包，对受伤后的他人进行治疗，没有DEBUFF干扰，QTE都未失败，且未完美的情况下，对受伤后的他人进行治疗的时间。<br>经测算，结果在12S~13S之间徘徊。<br>并且，通过自摸技能描述也能得知，自摸效率为原有效率的百分之五十，即对他人进行治疗的时间应该是自摸时间的一半，所以第三条测试结果与第二条测试结果可以相互印证。<br>最终断定，对他人自摸时间理论上可以定为12.5S（这个结果应该有误差，上下不超过1S）</p><h2 id="拆图腾-祝福图腾"><a href="#拆图腾-祝福图腾" class="headerlink" title="拆图腾&#x2F;祝福图腾"></a>拆图腾&#x2F;祝福图腾</h2><p>拆晦暗图腾(12.5S)<br>恶咒图腾时间翻倍</p><h2 id="开启逃生大门时间"><a href="#开启逃生大门时间" class="headerlink" title="开启逃生大门时间"></a>开启逃生大门时间</h2><p>开启逃生大门时间（16S）</p><h2 id="工具箱"><a href="#工具箱" class="headerlink" title="工具箱"></a>工具箱</h2><p>工具箱修机，完美检验减少（3S），良好减少（1S）左右</p><h2 id="板区博弈（人类）"><a href="#板区博弈（人类）" class="headerlink" title="板区博弈（人类）"></a>板区博弈（人类）</h2><p><a href="https://www.bilibili.com/read/cv15926388">https://www.bilibili.com/read/cv15926388</a></p><h3 id="人类翻越时间详解"><a href="#人类翻越时间详解" class="headerlink" title="人类翻越时间详解"></a>人类翻越时间详解</h3><p>板子：快速翻越1.1秒，慢速翻越2.1秒<br>窗户：快速翻越1秒（wiki0.5秒），中速翻越1.2秒（wiki0.9秒），慢速翻越wiki1.5秒。<br>快速翻越的窗前最少要有2.5m空位并且移速至少大于3.4m&#x2F;s（不确定具体移速多少）</p><h1 id="状态（BUFF-DEBUFF）介绍"><a href="#状态（BUFF-DEBUFF）介绍" class="headerlink" title="状态（BUFF&#x2F;DEBUFF）介绍"></a>状态（BUFF&#x2F;DEBUFF）介绍</h1><p><a href="https://www.bilibili.com/read/cv9391561">https://www.bilibili.com/read/cv9391561</a></p><h1 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h1><h2 id="迈克米伦庄园"><a href="#迈克米伦庄园" class="headerlink" title="迈克米伦庄园"></a>迈克米伦庄园</h2><p>迈克米伦庄园（5张）<br><a href="https://deadbydaylight.fandom.com/zh/wiki/%E8%BF%88%E5%85%8B%E7%B1%B3%E4%BC%A6%E5%BA%84%E5%9B%AD">https://deadbydaylight.fandom.com/zh/wiki/%E8%BF%88%E5%85%8B%E7%B1%B3%E4%BC%A6%E5%BA%84%E5%9B%AD</a></p><h2 id="煤矿废塔"><a href="#煤矿废塔" class="headerlink" title="煤矿废塔"></a>煤矿废塔</h2><h2 id="哀号仓库"><a href="#哀号仓库" class="headerlink" title="哀号仓库"></a>哀号仓库</h2><h2 id="悲惨钢铁厂"><a href="#悲惨钢铁厂" class="headerlink" title="悲惨钢铁厂"></a>悲惨钢铁厂</h2><h2 id="掩护林"><a href="#掩护林" class="headerlink" title="掩护林"></a>掩护林</h2><h2 id="窒息矿井"><a href="#窒息矿井" class="headerlink" title="窒息矿井"></a>窒息矿井</h2><h2 id="废旧车库"><a href="#废旧车库" class="headerlink" title="废旧车库"></a>废旧车库</h2><p>废旧车库（5张）<br><a href="https://deadbydaylight.fandom.com/zh/wiki/%E5%BA%9F%E6%97%A7%E8%BD%A6%E5%BA%93">https://deadbydaylight.fandom.com/zh/wiki/%E5%BA%9F%E6%97%A7%E8%BD%A6%E5%BA%93</a></p><h2 id="寒风农场"><a href="#寒风农场" class="headerlink" title="寒风农场"></a>寒风农场</h2><p>（5张）<br><a href="https://deadbydaylight.fandom.com/zh/wiki/%E5%AF%92%E9%A3%8E%E5%86%9C%E5%9C%BA">https://deadbydaylight.fandom.com/zh/wiki/%E5%AF%92%E9%A3%8E%E5%86%9C%E5%9C%BA</a></p><h2 id="克洛普瑞恩疯人院"><a href="#克洛普瑞恩疯人院" class="headerlink" title="克洛普瑞恩疯人院"></a>克洛普瑞恩疯人院</h2><p>(2张)<br><a href="https://deadbydaylight.fandom.com/zh/wiki/%E5%85%8B%E6%B4%9B%E6%99%AE%E7%91%9E%E6%81%A9%E7%96%AF%E4%BA%BA%E9%99%A2">https://deadbydaylight.fandom.com/zh/wiki/%E5%85%8B%E6%B4%9B%E6%99%AE%E7%91%9E%E6%81%A9%E7%96%AF%E4%BA%BA%E9%99%A2</a><br>精神病房</p><h2 id="哈登菲尔德"><a href="#哈登菲尔德" class="headerlink" title="哈登菲尔德"></a>哈登菲尔德</h2><p> 哈登菲尔德（1张）<br>兰普金巷</p><h2 id="黑水沼泽"><a href="#黑水沼泽" class="headerlink" title="黑水沼泽"></a>黑水沼泽</h2><p>黑水沼泽(2张)<br>苍白玫瑰<br>阴森棚屋</p><h1 id="教学"><a href="#教学" class="headerlink" title="教学"></a>教学</h1><h2 id="灵魂刺青"><a href="#灵魂刺青" class="headerlink" title="灵魂刺青"></a>灵魂刺青</h2><ul><li>B站于2022年2月份下架过全部的黎明杀机视频，后来又恢复了。</li><li>YOUTUBE</li></ul><h1 id="游戏设置"><a href="#游戏设置" class="headerlink" title="游戏设置"></a>游戏设置</h1><ul><li>(黎明杀机 Steam版解锁帧数方法)[<a href="https://www.bilibili.com/read/cv10688228]">https://www.bilibili.com/read/cv10688228]</a></li><li>(N卡滤镜设置)[<a href="https://www.bilibili.com/read/cv14238477]">https://www.bilibili.com/read/cv14238477]</a></li></ul><div style="display:none">附录黎明杀机WIKIhttps://deadbydaylight.fandom.com/zh/wiki/Dead_by_Daylight_Wiki<p>b站最详细的黎明杀机入坑指南！（文字版）<br><a href="https://www.bilibili.com/read/cv14238477">https://www.bilibili.com/read/cv14238477</a></p><p>黎明杀机&#x2F;浪漫世界 | 6种雕文 | 数据详解<br><a href="https://www.bilibili.com/read/cv17267102">https://www.bilibili.com/read/cv17267102</a></p><p>黎明杀机配件数据表（屠夫）<br><a href="https://www.bilibili.com/read/readlist/rl234542">https://www.bilibili.com/read/readlist/rl234542</a><br>黎明杀机人类ID旁边的小地球<br>黎明杀机是一款跨平台游戏，多平台数据互通，玩家可以和其他游戏平台的小伙伴一起玩。<br>黎明杀机中，人类ID旁边的小地球是指该玩家是是其他平台的玩家，带地球的不能看个人资料，一般主要是手柄端的玩家。</p><p>手电筒技巧<br><a href="https://www.pkvs.com/guide/114893.html">https://www.pkvs.com/guide/114893.html</a></p><p>《黎明杀机》拔线惩罚汇总<br><a href="https://gl.ali213.net/html/2017-6/172329.html">https://gl.ali213.net/html/2017-6/172329.html</a></p><p>各种工具箱加上配件的修理速度<br><a href="https://tieba.baidu.com/p/6232075699">https://tieba.baidu.com/p/6232075699</a></p></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Game </category>
          
      </categories>
      
      
        <tags>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用HTML美化Markdown文档</title>
      <link href="/2021/11/02/Markdown/03markdown/"/>
      <url>/2021/11/02/Markdown/03markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="图片大小"><a href="#图片大小" class="headerlink" title="图片大小"></a>图片大小</h2><img style="width:50%;" src="/images/Wlop/61.jpg" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width:50%;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/images/Wlop/61.jpg&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><p><span style="color:#4185c4;">&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;nginx</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#4185c4;&quot;</span>&gt;</span>/usr/local/nginx/sbin/nginx<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="彩色字体背景"><a href="#彩色字体背景" class="headerlink" title="彩色字体背景"></a>彩色字体背景</h2><p>博客主题默认全角空格为 <code>&amp;nbsp;</code> 不需要额外添加</p><p><b style="color:red;">Nginx is not running !</b></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">&quot;color:red;&quot;</span>&gt;</span>Nginx<span class="symbol">&amp;nbsp;</span>is<span class="symbol">&amp;nbsp;</span>not<span class="symbol">&amp;nbsp;</span>running<span class="symbol">&amp;nbsp;</span>!<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><p><b style="color:green;">Nginx is running!</b></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">&quot;color:green;&quot;</span>&gt;</span>Nginx<span class="symbol">&amp;nbsp;</span>is<span class="symbol">&amp;nbsp;</span>running<span class="symbol">&amp;nbsp;</span>!<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><p><b style="background-color:green;color:white;"> Nginx is running ! </b></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">&quot;background-color:green;color:white;&quot;</span>&gt;</span> Nginx is running ! <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h2><p>这里是用HTML实现，也可以通过博客主题的外挂标签实现</p><details> <summary>展开查看内容</summary> 这是展开后的内容。</details><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">summary</span>&gt;</span>展开查看内容<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line"> 这是展开后的内容。</span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="待办列表"><a href="#待办列表" class="headerlink" title="待办列表"></a>待办列表</h2><ol><li><ul><li><input disabled="" type="checkbox"> 记得找个女朋友</li></ul></li><li><ul><li><input disabled="" type="checkbox"> 天凉了，记得加衣喔</li></ul><ol><li><ul><li><input checked="" disabled="" type="checkbox"> 今日份单词打卡</li></ul></li><li><ul><li><input checked="" disabled="" type="checkbox"> 了解python和c++</li></ul></li></ol></li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> - [ ] 记得找个女朋友</span><br><span class="line"><span class="bullet">2.</span> - [ ] 天凉了，记得加衣喔   </span><br><span class="line"><span class="bullet">   1.</span> - [x] 今日份单词打卡   </span><br><span class="line"><span class="bullet">   2.</span> - [x] 了解python和c++</span><br></pre></td></tr></table></figure><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>博客主题暂时不支持。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你好[<span class="string">^脚注</span>][<span class="symbol">^脚注</span>]: 这是一个脚注</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">这里有一个简单的脚注，[^1] 这是一个更长的脚注。[^bignote]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^1</span>]: <span class="link">这是第一个脚注。</span></span><br><span class="line"></span><br><span class="line">[<span class="symbol">^bignote</span>]: <span class="link">这是一个包含多个段落和代码的内容。</span></span><br><span class="line"><span class="code">    </span></span><br><span class="line"><span class="code">    缩进段落以将它们包括在脚注中。 </span></span><br><span class="line"><span class="code">   </span></span><br><span class="line"><span class="code">    `&#123;我的代码…… &#125;`</span></span><br><span class="line"><span class="code">   </span></span><br><span class="line"><span class="code">    想加多少段落就加多少段落。</span></span><br></pre></td></tr></table></figure><h2 id="复杂表格"><a href="#复杂表格" class="headerlink" title="复杂表格"></a>复杂表格</h2><p>建议用<a href="https://tableconvert.com/zh-cn/html-generator">HTML表格在线工具</a>，从表格转换为HTML。</p><p>Markdown 绝大多数编辑器都是支持 html 语言，Markdown 本身不支持复杂的表格，所以使用 html 来编辑即可。</p><ul><li>使用跨行或者跨列时，使用 <code>th</code> 标签</li><li>跨行： <code>rowspan</code> 的的参数就是要跨的行数</li><li>跨列： <code>colspan</code> 的参数就是要跨的列数</li></ul><table align="center">    <tr>        <th rowspan="2">真实情况</th>        <th colspan="2">预测结果</th>    </tr>    <tr>        <td>正例</td>        <td>反例</td>    </tr>    <tr>        <td>正例</td>        <td>TP(真正例)</td>        <td>FN(假反例)</td>    </tr>    <tr>        <td>反例</td>        <td>FP(假正例)</td>        <td>TN(真反例)</td>    </tr></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>真实情况<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>预测结果<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>正例<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>反例<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>正例<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>TP(真正例)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>FN(假反例)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>反例<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>FP(假正例)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>TN(真反例)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本高亮"><a href="#文本高亮" class="headerlink" title="文本高亮"></a>文本高亮</h2><p>博客主题中有更加好用的label 标签</p><p>…… <mark>海森堡在 1927 年首先提出</mark> ……</p><p>…… <mark class="hl-label purple">海森堡在1927年首先提出</mark>…… </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">…… <span class="tag">&lt;<span class="name">mark</span>&gt;</span>海森堡在 1927 年首先提出<span class="tag">&lt;/<span class="name">mark</span>&gt;</span> ……</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">…… &#123;% label 海森堡在1927年首先提出 purple %&#125;…… </span><br></pre></td></tr></table></figure><hr><div style="display:none"><ul><li><a href="https://www.cnblogs.com/veezeng/p/15066598.html">https://www.cnblogs.com/veezeng/p/15066598.html</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 高级技巧</title>
      <link href="/2021/10/21/Markdown/02markdown/"/>
      <url>/2021/10/21/Markdown/02markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="支持的-HTML-元素"><a href="#支持的-HTML-元素" class="headerlink" title="支持的 HTML 元素"></a>支持的 HTML 元素</h1><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><p>输出结果为：</p><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**文本加粗** </span><br><span class="line">\*\* 正常显示星号 \*\*</span><br></pre></td></tr></table></figure><p>输出结果为：</p><p><strong>文本加粗</strong><br>** 正常显示星号 **</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><h1 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h1><p><strong>Markdown Preview Enhanced</strong> 使用 <a href="https://github.com/Khan/KaTeX">KaTeX</a> 或者 <a href="https://github.com/mathjax/MathJax">MathJax</a> 来渲染数学表达式。</p><p>KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax 拥有的特性。你可以查看 KaTeX supported functions&#x2F;symbols 来了解 KaTeX 支持那些符号和函数。</p><p>默认下的分隔符：</p><ul><li><code>$...$</code> 或者 <code>\(...\)</code> 中的数学表达式将会在行内显示。</li><li><code>$$...$$</code> 或者 <code>\[...\]</code> 或者 &#96;&#96;&#96;&#96;math&#96; 中的数学表达式将会在块内显示。</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/0e408954-fda8-11e5-9eb4-562d7c0ca431.gif" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;Bmatrix&#125;</span><br><span class="line">   a &amp; b \\</span><br><span class="line">   c &amp; d</span><br><span class="line">\end&#123;Bmatrix&#125;</span><br><span class="line">$$</span><br><span class="line">$$</span><br><span class="line">\begin&#123;CD&#125;</span><br><span class="line">   A @&gt;a&gt;&gt; B \\</span><br><span class="line">@VbVV @AAcA \\</span><br><span class="line">   C @= D</span><br><span class="line">\end&#123;CD&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>输出结果为：</p><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/A9031CEB-04DB-4822-9C98-2E99489D3662.jpeg" alt="img"></p><h1 id="Typora-画流程图、时序图-顺序图-、甘特图"><a href="#Typora-画流程图、时序图-顺序图-、甘特图" class="headerlink" title="Typora 画流程图、时序图(顺序图)、甘特图"></a>Typora 画流程图、时序图(顺序图)、甘特图</h1><p>复制以下代码使用 typora 的源码模式粘贴到编辑器中查看效果：</p><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/22A9BC11-BA3E-40D8-90B0-DC4FD29F9C02.jpg" alt="img"></p><p>以下几个实例效果图如下：</p><h2 id="1、横向流程图源码格式："><a href="#1、横向流程图源码格式：" class="headerlink" title="1、横向流程图源码格式："></a>1、横向流程图源码格式：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​```mermaid</span><br><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a=1| D[结果1]</span><br><span class="line">    C --&gt;|a=2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><h2 id="2、竖向流程图源码格式："><a href="#2、竖向流程图源码格式：" class="headerlink" title="2、竖向流程图源码格式："></a>2、竖向流程图源码格式：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​```mermaid</span><br><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a=1| D[结果1]</span><br><span class="line">    C --&gt; |a=2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><strong>3、标准流程图源码格式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​```flow</span><br><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><strong>4、标准流程图源码格式（横向）：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​```flow</span><br><span class="line">st=&gt;start: 开始框</span><br><span class="line">op=&gt;operation: 处理框</span><br><span class="line">cond=&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1=&gt;subroutine: 子流程</span><br><span class="line">io=&gt;inputoutput: 输入输出框</span><br><span class="line">e=&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><strong>5、UML时序图源码样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​```sequence</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><strong>6、UML时序图源码复杂样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">​```sequence</span><br><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><strong>7、UML标准时序图样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">​```mermaid</span><br><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><strong>8、甘特图样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">​```mermaid</span><br><span class="line">%% 语法示例</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI设计                     :         des3, after des2, 5d</span><br><span class="line">    未来任务                     :         des4, after des3, 5d</span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line">        耍                                   :2d</span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 基本语法</title>
      <link href="/2021/10/20/Markdown/01markdown/"/>
      <url>/2021/10/20/Markdown/01markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文章仅供查看渲染效果，不构成学习指导意见<br>详尽教程请参考官网 <a href="http://markdown.p2hp.com/">Markdown中文网</a><br>其他教程链接：<a href="https://www.runoob.com/markdown/">菜鸟教程</a></p><h1 id="在VSCode下Markdown环境配置"><a href="#在VSCode下Markdown环境配置" class="headerlink" title="在VSCode下Markdown环境配置"></a>在VSCode下Markdown环境配置</h1><ul><li>安装扩展：Markdown Preview Enhanced</li><li>右键md文档任意位置，在新出现的选项卡中选择：<br>Markdown Preview Enhanced: Open Preview to the Side</li><li>中文显示为：<br>MPE 打开侧边栏预览</li></ul><h1 id="Typora下载"><a href="#Typora下载" class="headerlink" title="Typora下载"></a>Typora下载</h1><ul><li><a href="https://typoraio.cn/">中文站</a></li><li><a href="https://typora.io/">官网</a></li></ul><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure><ul><li>输出结果：</li></ul><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这是加粗的文字**</span></span><br><span class="line"><span class="emphasis">*这是倾斜的文字*</span>`</span><br><span class="line"><span class="strong">**<span class="emphasis">*这是斜体加粗的文字*</span>**</span></span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure><ul><li>输出结果：<br><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em>&#96;<br><em><strong>这是斜体加粗的文字</strong></em><br><del>这是加删除线的文字</del></li></ul><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><ul><li>输出结果：<blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></li></ul><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">三个或者三个以上的 - 或者 * 都可以。</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line">----</span><br><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><ul><li>输出结果：</li></ul><hr><hr><hr><hr><h1 id="图片的插入（本地、网络）"><a href="#图片的插入（本地、网络）" class="headerlink" title="图片的插入（本地、网络）"></a>图片的插入（本地、网络）</h1><h2 id="插图最基础的格式"><a href="#插图最基础的格式" class="headerlink" title="插图最基础的格式"></a>插图最基础的格式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Alt text](图片链接 &quot;optional title&quot;)</span><br></pre></td></tr></table></figure><p>Alt text：图片的Alt标签，用来描述图片的关键词，可以不写。最初的本意是当图片因为某种原因不能被显示时而出现的替代文字，后来又被用于SEO，可以方便搜索引擎根据Alt text里面的关键词搜索到图片。 图片链接：可以是图片的本地地址或者是网址。”optional title”：鼠标悬置于图片上会出现的标题文字，可以不写。</p><h2 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h2><p>只需要在基础语法的括号中填入图片的位置路径即可，支持绝对路径和相对路径。 </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">赞赏码</span>](<span class="link">/img/wechat.png </span>)</span><br></pre></td></tr></table></figure><ul><li>输出结果：<br><img src="/img/wechat.png" alt="赞赏码"><br>不灵活不好分享，本地图片的路径更改或丢失都会造成markdown文件调不出图。</li></ul><h2 id="插入网络图片"><a href="#插入网络图片" class="headerlink" title="插入网络图片"></a>插入网络图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">avatar</span>](<span class="link">https://cdn.jsdelivr.net/gh/Winward-King/picture_host@master/image/1645216950299T93NaMG.png</span>)</span><br></pre></td></tr></table></figure><ul><li>输出结果：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Winward-King/picture_host@master/image/1645216950299T93NaMG.png" alt="尼尔" title="尼尔"></p><h1 id="文章插图视频"><a href="#文章插图视频" class="headerlink" title="文章插图视频"></a>文章插图视频</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">复制 嵌入代码 到文章，可通过width、height修改播放窗口尺寸</span><br></pre></td></tr></table></figure><ul><li>添加raw 标签防止干扰</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">添加raw 标签防止干扰</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><ul><li>用CSS代码调整样式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> style=&quot;<span class="attribute">position</span>: relative; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">height</span>: <span class="number">0</span>; <span class="attribute">padding-bottom</span>: <span class="number">75%</span>;&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">iframe</span> <span class="attribute">src</span>=&quot;&quot; scrolling=&quot;no&quot; <span class="attribute">border</span>=&quot;<span class="number">0</span>&quot; frameborder=&quot;no&quot; framespacing=&quot;<span class="number">0</span>&quot; allowfullscreen=&quot;true&quot; style=&quot;<span class="attribute">position</span>: absolute; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">height</span>: <span class="number">100%</span>; <span class="attribute">Left</span>: <span class="number">0</span>; <span class="attribute">top</span>: <span class="number">0</span>;&quot; &gt;&lt;/<span class="selector-tag">iframe</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>输出结果：</li></ul><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=838731446&bvid=BV1Ug4y1v7KB&cid=207262748&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h1 id="音频嵌入"><a href="#音频嵌入" class="headerlink" title="音频嵌入"></a>音频嵌入</h1><p>生成外链播放器，复制 HTML代码</p><ul><li>输出结果：</li></ul><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=530 height=86 src="//music.163.com/outchain/player?type=2&id=1840861309&auto=1&height=66"></iframe><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接名</span>](<span class="link">超链接地址  &quot;超链接title&quot;</span>)</span><br></pre></td></tr></table></figure><p>title可加可不加</p><ul><li>示例：</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">简书</span>](<span class="link">http://jianshu.com</span>)</span><br><span class="line">[<span class="string">百度</span>](<span class="link">http://baidu.com</span>)</span><br></pre></td></tr></table></figure><ul><li>输出结果：<br><a href="http://jianshu.com/">简书</a><br><a href="http://baidu.com/">百度</a></li></ul><h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">推荐几个网站[<span class="string">Google</span>][<span class="symbol">1</span>]、[<span class="string">github</span>][<span class="symbol">2</span>]以及</span><br><span class="line">百度是一个不错的[<span class="string">网站</span>][<span class="symbol">3</span>]。</span><br><span class="line"></span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">http://www.google.com</span></span><br><span class="line">[<span class="symbol">2</span>]:<span class="link">http://www.github.com</span></span><br><span class="line">[<span class="symbol">3</span>]:<span class="link">http://www.baidu.com</span></span><br></pre></td></tr></table></figure><ul><li>输出结果：</li></ul><p>推荐几个网站<a href="http://www.google.com/">Google</a>、<a href="http://www.github.com/">github</a>以及<br>百度是一个不错的<a href="http://www.baidu.com/">网站</a>。</p><h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> <span class="language-xml">&lt;https://baidu.com&gt;</span></span><br></pre></td></tr></table></figure><ul><li>输出结果：</li></ul><ol><li><a href="https://baidu.com/">https://baidu.com</a></li></ol><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 列表内容</span><br><span class="line"><span class="bullet">+</span> 列表内容</span><br><span class="line"><span class="bullet">*</span> 列表内容</span><br></pre></td></tr></table></figure><p>注意：- + * 跟内容之间都要有一个空格</p><ul><li>输出结果</li><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表1</span><br><span class="line"><span class="bullet">1.</span> 有序列表2</span><br><span class="line"><span class="bullet">    1.</span> 有序列表3</span><br><span class="line"><span class="bullet">        1.</span> 有序列表4</span><br></pre></td></tr></table></figure><ul><li>输出结果</li></ul><ol><li>有序列表1</li><li>有序列表2<ol><li>有序列表3<ol><li>有序列表4</li></ol></li></ol></li></ol><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br>在表格中转义管道字符<br>可以使用表格的HTML字符代码（<code>&amp;#124;</code>）在表中显示竖线（<code>|</code>）字符。<br>(博客需要通过标签识别)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><ul><li>输出结果</li></ul><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>第一行：第一行要显示的，类似Thead<br>第二行：对齐方式|:—–|左对齐，|:—–:|居中，|—–:|右对齐<br>每列的宽度是根据对应列里最长的文本来决定</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><ul><li>输出结果</li></ul><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>用两个反引号包起来，注意：是ESC下面那个键</p><h2 id="单行代码：代码之间分别用一个反引号包起来"><a href="#单行代码：代码之间分别用一个反引号包起来" class="headerlink" title="单行代码：代码之间分别用一个反引号包起来"></a>单行代码：代码之间分别用一个反引号包起来</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`代码内容`</span></span><br></pre></td></tr></table></figure><h2 id="代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行"><a href="#代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行" class="headerlink" title="代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行"></a>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</h2><pre>  &nbsp;```  &nbsp;代码内容  &nbsp;```</pre><h1 id="基于HTML语法"><a href="#基于HTML语法" class="headerlink" title="基于HTML语法"></a>基于HTML语法</h1><h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><ul><li>手动输入空格。注意！此时的分号为英文分号，但是不推荐使用此方法，太麻烦！</li><li>HEXO渲染器有可能不兼容，Markdown支持大部分HTML、CSS语法</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">&amp;nbsp;</span></span><br></pre></td></tr></table></figure><ul><li>使用全角空格。即：在全角输入状态下直接使用空格键就ok了</li></ul><h2 id="在markdown中加入上标、下标"><a href="#在markdown中加入上标、下标" class="headerlink" title="在markdown中加入上标、下标"></a>在markdown中加入上标、下标</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">H<span class="language-xml"><span class="tag">&lt;<span class="name">sub</span>&gt;</span></span>2<span class="language-xml"><span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span>O  CO<span class="language-xml"><span class="tag">&lt;<span class="name">sub</span>&gt;</span></span>2<span class="language-xml"><span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span></span><br><span class="line">爆米<span class="language-xml"><span class="tag">&lt;<span class="name">sup</span>&gt;</span></span>TM<span class="language-xml"><span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>输出结果</li></ul><p>H<sub>2</sub>O  CO<sub>2</sub><br>小米<sup>TM</sup></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决VSCode&#39;因为在此系统上禁止运行脚本&#39;报错</title>
      <link href="/2021/10/15/VSCode/01%E8%A7%A3%E5%86%B3VSCode&#39;%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC&#39;%E6%8A%A5%E9%94%99/"/>
      <url>/2021/10/15/VSCode/01%E8%A7%A3%E5%86%B3VSCode&#39;%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC&#39;%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="解决VSCODE”因为在此系统上禁止运行脚本”报错"><a href="#解决VSCODE”因为在此系统上禁止运行脚本”报错" class="headerlink" title="解决VSCODE”因为在此系统上禁止运行脚本”报错"></a>解决VSCODE”因为在此系统上禁止运行脚本”报错</h1><p>学习hexo搭建的时候，在VSCODE中使用hexo命令，结果报错：</p><p><img src="/images/VSCode/DisableToRun.png" alt="禁止运行脚本" title="因为在此系统上禁止运行脚本"></p><p>找了下原因，是因为PowerShell执行策略的问题</p><ul><li>以管理员身份运行vscode</li><li>执行：get-ExecutionPolicy，显示Restricted，表示状态是禁止的;</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">get-ExecutionPolicy</span></span><br></pre></td></tr></table></figure><ul><li>执行：set-ExecutionPolicy RemoteSigned;</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure><ul><li>这时再执行get-ExecutionPolicy，就显示RemoteSigned;</li></ul><p><img src="/./images/VSCode/SetRight.png" alt="禁止运行脚本" title="问题解决"></p><p>问题就解决了</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学常用符号</title>
      <link href="/2021/04/20/Math/01Math_sign/"/>
      <url>/2021/04/20/Math/01Math_sign/</url>
      
        <content type="html"><![CDATA[<h1 id="24个希腊字母-常用"><a href="#24个希腊字母-常用" class="headerlink" title="24个希腊字母(常用)"></a>24个希腊字母(常用)</h1><ul><li>希腊字母是希腊语所使用的字母，也广泛使用于数学、物理、生物、化学、天文等学科，希腊字母跟英文字母、俄文字母类似，只是符号不同，标音的性质是一样的。</li><li>希腊字母是世界上最早有元音的字母。俄语、乌克兰语等使用的西里尔字母和格鲁吉亚语字母都是由希腊字母发展而来，学过俄文的人使用希腊字母会觉得似曾相识。希腊字母进入了许多语言的词汇中，如Delta这个国际语汇就来自希腊字母Δ，因为Δ是三角形。</li></ul><p><img src="/images/Math/sign/cefc1e178a82b901d9c8a8a2618da9773912ef3e.gif" alt="24个希腊字母"></p><table><thead><tr><th align="center">序号</th><th align="center">希腊字母</th><th align="center">大写</th><th align="center">小写</th><th align="center">国际音标</th><th align="center">中文读音</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Alpha</td><td align="center">Α</td><td align="center">α</td><td align="center">a:lf</td><td align="center">阿尔法</td><td align="center">角度；系数</td></tr><tr><td align="center">2</td><td align="center">Beta</td><td align="center">Β</td><td align="center">β</td><td align="center">bet</td><td align="center">贝塔</td><td align="center">磁通系数；角度；系数</td></tr><tr><td align="center">3</td><td align="center">Gamma</td><td align="center">Γ</td><td align="center">γ</td><td align="center">ga:m</td><td align="center">伽马</td><td align="center">电导系数（小写）</td></tr><tr><td align="center">4</td><td align="center">Delta</td><td align="center">Δ</td><td align="center">δ</td><td align="center">delt</td><td align="center">德尔塔</td><td align="center">变动；密度；屈光度</td></tr><tr><td align="center">5</td><td align="center">Epsilon</td><td align="center">Ε</td><td align="center">ε</td><td align="center">ep&#96;silon</td><td align="center">伊普西龙</td><td align="center">对数之基数</td></tr><tr><td align="center">6</td><td align="center">Zeta</td><td align="center">Ζ</td><td align="center">ζ</td><td align="center">zat</td><td align="center">截塔</td><td align="center">系数；方位角；阻抗；相对粘度；原子序数</td></tr><tr><td align="center">7</td><td align="center">Eta</td><td align="center">Η</td><td align="center">η</td><td align="center">eit</td><td align="center">艾塔</td><td align="center">磁滞系数；效率（小写）</td></tr><tr><td align="center">8</td><td align="center">Theta</td><td align="center">Θ</td><td align="center">θ</td><td align="center">θit</td><td align="center">西塔</td><td align="center">温度；相位角</td></tr><tr><td align="center">9</td><td align="center">lota</td><td align="center">Ι</td><td align="center">ι</td><td align="center">aiot</td><td align="center">约塔</td><td align="center">微小，一点儿</td></tr><tr><td align="center">10</td><td align="center">Kappa</td><td align="center">Κ</td><td align="center">κ</td><td align="center">kap</td><td align="center">卡帕</td><td align="center">介质常数</td></tr><tr><td align="center">11</td><td align="center">Lambda</td><td align="center">Λ</td><td align="center">λ</td><td align="center">lambd</td><td align="center">兰布达</td><td align="center">波长（小写）；体积</td></tr><tr><td align="center">12</td><td align="center">Mu</td><td align="center">Μ</td><td align="center">μ</td><td align="center">mju</td><td align="center">缪</td><td align="center">磁导系数微（千分之一）放大因数（小写）</td></tr><tr><td align="center">13</td><td align="center">Nu</td><td align="center">Ν</td><td align="center">ν</td><td align="center">nju</td><td align="center">纽</td><td align="center">磁 磁阻系数</td></tr><tr><td align="center">14</td><td align="center">Xi</td><td align="center">Ξ</td><td align="center">ξ</td><td align="center">ksi</td><td align="center">克西</td><td align="center"></td></tr><tr><td align="center">15</td><td align="center">Omicron</td><td align="center">Ο</td><td align="center">ο</td><td align="center">omik&#96;ron</td><td align="center">奥密克戎</td><td align="center"></td></tr><tr><td align="center">16</td><td align="center">Pi</td><td align="center">Π</td><td align="center">π</td><td align="center">pai</td><td align="center">派</td><td align="center">圆周率</td></tr><tr><td align="center">17</td><td align="center">Rho</td><td align="center">Ρ</td><td align="center">ρ</td><td align="center">rou</td><td align="center">肉</td><td align="center">密度&#x2F;电阻系数（小写）</td></tr><tr><td align="center">18</td><td align="center">Sigma</td><td align="center">Σ</td><td align="center">σ</td><td align="center">sigma</td><td align="center">西格马</td><td align="center">总和（大写），表面密度；跨导（小写）</td></tr><tr><td align="center">19</td><td align="center">Tau</td><td align="center">Τ</td><td align="center">τ</td><td align="center">tau</td><td align="center">套</td><td align="center">时间常数</td></tr><tr><td align="center">20</td><td align="center">Upsilon</td><td align="center">Υ</td><td align="center">υ</td><td align="center">jup&#96;silon</td><td align="center">宇普西龙</td><td align="center">位移</td></tr><tr><td align="center">21</td><td align="center">Phi</td><td align="center">Φ</td><td align="center">φ</td><td align="center">fai</td><td align="center">佛爱</td><td align="center">磁通；角</td></tr><tr><td align="center">22</td><td align="center">Chi</td><td align="center">Χ</td><td align="center">χ</td><td align="center">phai</td><td align="center">西</td><td align="center"></td></tr><tr><td align="center">23</td><td align="center">Psi</td><td align="center">Ψ</td><td align="center">ψ</td><td align="center">psai</td><td align="center">普西</td><td align="center">角速；介质电通量（静电力线）；角</td></tr><tr><td align="center">24</td><td align="center">Omega</td><td align="center">Ω</td><td align="center">ω</td><td align="center">o&#96;miga</td><td align="center">欧米伽</td><td align="center">欧姆（大写）；角速（小写）；角</td></tr></tbody></table><div style="display:none">- https://zhidao.baidu.com/question/433084848289513412.html- https://zhuanlan.zhihu.com/p/139789982</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象 Object Oriented</title>
      <link href="/2020/04/05/Unity3D/06Unity_OOP/"/>
      <url>/2020/04/05/Unity3D/06Unity_OOP/</url>
      
        <content type="html"><![CDATA[<h1 id="OOP概述"><a href="#OOP概述" class="headerlink" title="OOP概述"></a>OOP概述</h1><p>面向过程的程序 &#x3D; 算法 + 数据结构； 关心解决问题的步骤。<br>面向对象的程序 &#x3D; 对象 + 交互；     关心谁在解决问题。<br>类：一个抽象的概念，即为生活中的”类别”。<br>对象：类的具体实例，即归属于某个类别的”个体”。<br>同类型的多个对象，行为相同，数据不同。 </p><h2 id="主要思想"><a href="#主要思想" class="headerlink" title="主要思想"></a>主要思想</h2><h3 id="分而治之"><a href="#分而治之" class="headerlink" title="分而治之"></a>分而治之</h3><ul><li>将一个大的需求分解为许多类，每个类处理一个独立的模块。</li><li>拆分好处：独立模块便于分工，每个模块便于复用，可扩展性强。</li></ul><h3 id="封装变化"><a href="#封装变化" class="headerlink" title="封装变化"></a>封装变化</h3><ul><li>变化的地方独立封装，避免影响其他模块。</li></ul><h3 id="高内聚"><a href="#高内聚" class="headerlink" title="高内聚"></a>高内聚</h3><ul><li>类中各个方法都在完成一项任务(单一职责的类)。</li><li>复杂的实现封装在内部，对外提供简单的调用。</li></ul><h3 id="低-耦-合"><a href="#低-耦-合" class="headerlink" title="低 耦 合"></a>低 耦 合</h3><ul><li>类与类的关联性依赖度要低(每个类独立)。</li><li>让一个模块的改变，尽少影响其他模块。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><blockquote><blockquote><blockquote><p>[例如：硬件高度集成化，又要可插拔]<br>最高的内聚莫过于类中仅包含1个方法，将会导致高内聚高耦合。<br>最低的耦合莫过于类中包含所有方法，将会导致低耦合低内聚。</p></blockquote></blockquote></blockquote><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>高复用性、高扩展性、高维护性、高移植性。</p><h2 id="三大特性"><a href="#三大特性" class="headerlink" title="三大特性"></a>三大特性</h2><h3 id="封装："><a href="#封装：" class="headerlink" title="封装："></a>封装：</h3><ul><li>数据角度讲，将一些基本数据类型复合成一个自定义类型。</li><li>方法角度讲，向类外提供功能，隐藏实现的细节。</li><li>设计角度讲，分而治之，高内聚低耦合，封装变化。</li></ul><h3 id="继承："><a href="#继承：" class="headerlink" title="继承："></a>继承：</h3><ul><li>统一概念。</li><li>重用现有类的功能，在此基础上进行扩展。</li></ul><h3 id="多态："><a href="#多态：" class="headerlink" title="多态："></a>多态：</h3><ul><li>父类的同一种动作或者行为，在不同的子类上有不同的实现。</li><li>(父类调用同一方法，在不同的子类上有不同的执行效果)</li><li>实现手段：虚方法、抽象方法、接口方法。</li></ul><h1 id="设计的八大原则"><a href="#设计的八大原则" class="headerlink" title="设计的八大原则"></a>设计的八大原则</h1><h2 id="开-闭原则（目标、总的指导思想）"><a href="#开-闭原则（目标、总的指导思想）" class="headerlink" title="开-闭原则（目标、总的指导思想）"></a>开-闭原则（目标、总的指导思想）</h2><ul><li>Open Closed Principle</li><li>对扩展开放，对修改关闭。</li><li>增加新功能，不改变原有代码。</li></ul><h2 id="类的单一职责（一个类的定义）"><a href="#类的单一职责（一个类的定义）" class="headerlink" title="类的单一职责（一个类的定义）"></a>类的单一职责（一个类的定义）</h2><ul><li>Single Responsibility Principle   </li><li>一个类有且只有一个改变它的原因。</li><li>适用于基础类，不适用基于基础类构建复杂的聚合类。</li></ul><h2 id="依赖倒置（依赖抽象）"><a href="#依赖倒置（依赖抽象）" class="headerlink" title="依赖倒置（依赖抽象）"></a>依赖倒置（依赖抽象）</h2><ul><li>Dependency Inversion Principle</li><li>客户端代码(调用的类)尽量依赖(使用)抽象的组件。</li><li>抽象的是稳定的。实现是多变的。</li></ul><h2 id="组合复用原则（复用的最佳实践）"><a href="#组合复用原则（复用的最佳实践）" class="headerlink" title="组合复用原则（复用的最佳实践）"></a>组合复用原则（复用的最佳实践）</h2><ul><li>Composite Reuse Principle</li><li>如果仅仅为了代码复用优先选择组合复用，而非继承复用。</li><li>组合的耦合性相对继承低。</li></ul><h2 id="里氏替换（继承后的重写，指导继承的设计）"><a href="#里氏替换（继承后的重写，指导继承的设计）" class="headerlink" title="里氏替换（继承后的重写，指导继承的设计）"></a>里氏替换（继承后的重写，指导继承的设计）</h2><ul><li>Liskov Substitution Principle</li><li>父类出现的地方可以被子类替换，在替换后依然保持原功能。</li><li>子类要拥有父类的所有功能。</li><li>子类在重写父类方法时，尽量选择扩展重写，防止改变了功能。</li></ul><h2 id="接口隔离（功能拆分）"><a href="#接口隔离（功能拆分）" class="headerlink" title="接口隔离（功能拆分）"></a>接口隔离（功能拆分）</h2><ul><li>Interface Segregation Principle</li><li>尽量定义小而精的接口interface，少定义大而全的接口。本质与单一职责相同。</li><li>小接口之间功能隔离，实现类需要多个功能时可以选择多实现.或接口之间做继承。</li></ul><h2 id="面向接口编程而非面向实现（切换、并行开发）"><a href="#面向接口编程而非面向实现（切换、并行开发）" class="headerlink" title="面向接口编程而非面向实现（切换、并行开发）"></a>面向接口编程而非面向实现（切换、并行开发）</h2><ul><li>客户端通过一系列抽象操作实例，而无需关注具体类型。</li><li>便于灵活切换一系列功能。</li><li>实现软件的并行开发。</li></ul><h2 id="迪米特法则（类与类交互的原则）"><a href="#迪米特法则（类与类交互的原则）" class="headerlink" title="迪米特法则（类与类交互的原则）"></a>迪米特法则（类与类交互的原则）</h2><ul><li>Law of Demeter</li><li>不要和陌生人说话。</li><li>类与类交互时，在满足功能要求的基础上，传递的数据量越少越好。因为这样可能降低耦合度。</li></ul><h1 id="封装-encapsulation"><a href="#封装-encapsulation" class="headerlink" title="封装 encapsulation"></a>封装 encapsulation</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ol><li>数据角度讲，将一些基本数据类型复合成一个自定义类型。</li><li>方法角度讲，向类外提供功能，隐藏实现的细节。</li><li>设计角度讲，分而治之，高内聚低耦合，封装变化。</li></ol><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ol><li>松散耦合，降低了程序各部分之间的依赖性。</li><li>简化编程，使用者不必了解具体的实现细节，只需要调用对外提供的功能。</li><li>增强安全性，以特定的访问权限来使用类成员，保护成员不被意外修改。</li></ol><h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><ol><li>private：私有的，类成员默认级别，仅在类内部可见。</li><li>internal：内部的，类默认级别，仅在程序集内可见。</li><li>protected：受保护的，类内部与派生类中可见。</li><li>protected internal：意为 internal 或 protected； 程序集内或者派生类中可见。</li><li>public：公有的，类内类外都可见。</li></ol><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><ol><li>玩家可以通过键盘或者摇杆控制主角运动。</li><li>运动过程中播放相应的动画。</li><li>玩家控制主角打怪，怪受伤，可能死亡。</li></ol><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>角色系统，成长系统，技能系统，动画系统，运动系统，任务系统，背包系统，结算系统。</p><ol><li>识别对象：主角，小怪，输入控制，动画。</li><li>分配职责：<br>主角：存储状态(攻击力，攻击速度,生命，魔法)，受伤，死亡。<br>小怪：存储状态(攻击力，攻击速度,生命，魔法)，受伤，死亡。<br>马达：移动, 旋转。<br>输入控制：控制移动,控制攻击。<br>动画系统：管理动画片段，提供动画事件。,</li><li>建立交互：<br>移动: 检测到玩家开始移动调用动画系统播动画调用马达的移动方法检测到玩家松开按钮结束触摸调用动画系统取消动画。<br>打怪: 按下技能按钮调用技能系统释放技能调用动画系统播动画处理动画事件<br>调用小怪的受伤可能调用死亡方法。</li></ol><h3 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h3><ol><li>运动系统<br>角色马达：CharacterMotor<br>数据：移动速度 moveSpeed,转向速度 rotationSpeed,角色控制器(chController)<br>行为：移动（Movement），转向(LookAtTarget) </li><li>动画系统<br> 角色动画参数类：CharacterAnimationParameter<br> 数据：动画片段<br> *动画事件行为：AnimationEventBehaviour<br> 数据：动画组件(anim)<br> 行为: 攻击时使用(OnAttack),撤销动画播放(OnCancelAnim) </li><li>角色系统<br> 主角状态：PlayerStatus<br> 数据：生命(HP,maxHP),魔法(SP,maxSP),基础攻击力(baseATK),防御(defence),攻击间隔 (attackInterval),攻击距离(attackDistance),动画参数(animParams)<br> 行为：受击(Damage) 死亡(Dead)  </li><li>小怪状态：MonsterStatus<br> 数据：生命(HP,maxHP),魔法(SP,maxSP),基础攻击力(baseATK),防御(defence),攻击间隔 (attackInterval),攻击距离(attackDistance),动画参数(animParams)<br> 行为：受击(Damage),死亡(Dead)</li><li>摇杆输入控制：CharacterInputController<br> 数据：马达(chMotor), (EasyTouch插件)<br> 行为：摇杆移动执行的方法，摇杆停止时执行的方法</li></ol><h1 id="继承-extends"><a href="#继承-extends" class="headerlink" title="继承 extends"></a>继承 extends</h1><h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>重用现有类的功能，在此基础上进行扩展。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ol><li>复用代码的一种方式。</li><li>统一概念，以层次化的方式管理类。</li></ol><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>耦合度高<br>适用性</p><ol><li>多个类具有相同的数据或行为。</li><li>多个类从概念上是一致的，且需要进行统一处理。</li></ol><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">A</span>: <span class="title">B</span> </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>表示A类继承B类，A类称为子类（派生类）,B类称为父类（基类，超类）</li><li>通过this关键字访问本类成员、通过base关键字访问父类成员。</li><li>一个类最多只能继承另一个类。</li></ol><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><ul><li><p>用abstract修饰类即为抽象类</p></li><li><p>抽象类中可能包含抽象成员(方法，属性)</p></li><li><p>抽象类不能创建对象</p></li></ul><h3 id="语义："><a href="#语义：" class="headerlink" title="语义："></a>语义：</h3><ul><li><p>表示一个概念的抽象. </p></li><li><p>只表示做什么，拥有什么数据，但往往不表达具体做法。</p></li></ul><h3 id="适用性："><a href="#适用性：" class="headerlink" title="适用性："></a>适用性：</h3><ol><li><p>当有行为，但是不需要实现的时候。</p></li><li><p>当有一些行为，在做法上有多种可能时，但又不希望客户了解具体做法。</p></li></ol><h3 id="抽象类与普通类区别："><a href="#抽象类与普通类区别：" class="headerlink" title="抽象类与普通类区别："></a>抽象类与普通类区别：</h3><ul><li>相同：都可以有静态、实例成员(数据、方法、构造函数)</li><li>不同：抽象类使用abstract修饰，可能有抽象方法，不能直接创建对象</li></ul><h2 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a>抽象方法</h2><h3 id="语法：-1"><a href="#语法：-1" class="headerlink" title="语法："></a>语法：</h3><ul><li>用abstract修饰并且没有实现的方法.只有方法声明，没有实现。</li><li>抽象方法只能出现在抽象类中。</li><li>抽象方法在本类中不实现，实现推迟到子类中，子类必须重写override实现。</li></ul><h3 id="语义：-1"><a href="#语义：-1" class="headerlink" title="语义："></a>语义：</h3><ul><li>描述做什么，不描述怎么做。</li><li>一个行为的抽象。</li></ul><h1 id="多态-polymorphism"><a href="#多态-polymorphism" class="headerlink" title="多态 polymorphism"></a>多态 polymorphism</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><ul><li><p>父类同一种动作或者行为(父类型的引用调用同一方法)，在不同的子类上有不同的实现。</p></li><li><p>继承将相关概念的共性进行抽象，并提供了一种复用的方式；多态在共性的基础上，体现类型及行为的个性化，即一个行为有多个不同的实现。</p></li></ul><h2 id="实现手段"><a href="#实现手段" class="headerlink" title="实现手段"></a>实现手段</h2><ol><li>虚方法： 父类型的引用 指向 子类的对象，调用虚方法，执行子类中的重写方法。</li><li>抽象方法：抽象类的引用 指向 实现类的对象，调用抽象方法，执行实现类中重写方法。</li><li>接口：接口的引用 指向 实现类的对象，调用接口方法，执行实现类中重新方法。</li></ol><h2 id="方法隐藏"><a href="#方法隐藏" class="headerlink" title="方法隐藏"></a>方法隐藏</h2><ul><li><p>定义：在子类中使用new关键字修饰的与父类同签名的方法。</p></li><li><p>作用：通过子类引用调用时，覆盖继承而来但不适用的旧方法，执行子类的新方法。</p></li></ul><h2 id="隐藏原理"><a href="#隐藏原理" class="headerlink" title="隐藏原理"></a>隐藏原理</h2><ul><li><p>子类在方法表中<strong>增加</strong>一个新地址。 </p></li><li><p>所以通过子类引用调用时使用新纪录，执行子类中新方法；</p></li><li><p>通过父类引用调用时使用旧纪录，执行父类中方法。</p></li></ul><h2 id="虚方法"><a href="#虚方法" class="headerlink" title="虚方法"></a>虚方法</h2><ul><li><p>定义：用vritual关键修饰的已实现方法。</p></li><li><p>作用：可以在子类中重写的方法，从而实现调用父类执行子类的效果。</p></li></ul><h2 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h2><ul><li><p>语法：在子类中使用override关键字修饰的方法。</p></li><li><p>作用：父类的方法在子类中不适用（虚方法），或父类没有实现(抽象方法)。子类重写可以满足对该方法的不同需求。方法重写时必须在方法前加override关键字。</p></li><li><p>三种方法可以重写：</p><ol><li><p>abstract 方法在子类必须重写，除非子类也是抽象类。</p></li><li><p>virtual 方法在子类可以重写，父类方法的做法与子类不同。</p></li><li><p>override方法，已经重写过的方法，在子类还可以继续重写，除非被标识为sealed。</p></li></ol></li></ul><h2 id="重写原理"><a href="#重写原理" class="headerlink" title="重写原理"></a>重写原理</h2><ul><li><p>子类在方法表中<strong>修改</strong>对应的地址。</p></li><li><p>所以不管通过父类还是子类型的引用，调用方法时，都执行对象真实类型中定义的方法。</p></li></ul><h2 id="动态绑定-晚期绑定-与静态绑定-早期绑定"><a href="#动态绑定-晚期绑定-与静态绑定-早期绑定" class="headerlink" title="动态绑定(晚期绑定)与静态绑定(早期绑定)"></a>动态绑定(晚期绑定)与静态绑定(早期绑定)</h2><ul><li><p>绑定：类型与关联的方法的调用关系，通俗讲就是一个类型能够调用哪些方法。</p></li><li><p>静态绑定：是指调用关系是在运行之前确定的，即编译期间。</p></li><li><p>动态绑定：是指调用关系是在运行期间确定的。</p></li><li><p>静态绑定因为在编译期确定，不占用运行时间，所以调用速度比动态绑定要快。</p></li><li><p>动态绑定因为在运行期确定，占用运行时间，但是更灵活。 </p></li><li><p>方法重写是动态绑定。</p></li><li><p>方法隐藏是静态绑定。</p></li></ul><h2 id="密封-Sealed"><a href="#密封-Sealed" class="headerlink" title="密封 Sealed"></a>密封 Sealed</h2><ol><li><p>用在类的定义上，指示当前类不能做父类,也就是任何类都不可继承当前类</p></li><li><p>用在重写的成员，指示当前类的子类，不能再次重写该成员</p></li></ol><h1 id="接口-interface"><a href="#接口-interface" class="headerlink" title="接口 interface"></a>接口 interface</h1><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><ul><li><p>一组对外的行为规范，要求它的实现类必须遵循。</p></li><li><p>只关注行为，不关注数据，且不关注行为的实现，实现由实现类完成。 </p></li><li><p>一组行为的抽象。</p></li></ul><h2 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h2><ul><li><p>规范不同类型的行为,达到了不同类型在行为上是一致的。</p></li><li><p>扩展一个已有类的行为。</p></li></ul><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><ul><li><p>使用interface关键定义。接口名建议用”I”开头，其后单词首字母大写。</p></li><li><p>接口中不能包含字段，可以包含：方法，属性，索引器，事件。  </p></li><li><p>接口中的所有成员不能有实现，全部默认抽象的。</p></li><li><p>实现类实现接口用<code>:</code>与继承相同。</p></li><li><p>类与类是单继承，类与接口是多实现，接口与接口是多继承。</p></li><li><p>结构（struct）可以实现接口，但不能被继承。</p></li></ul><h2 id="抽象类与接口的选择策略"><a href="#抽象类与接口的选择策略" class="headerlink" title="抽象类与接口的选择策略"></a>抽象类与接口的选择策略</h2><ul><li><p>抽象类与子类之间关系：is a [是一种]</p></li><li><p>接口与实现类之间关系：can do [能够做(功能)]</p></li></ul><h2 id="接口的显式实现"><a href="#接口的显式实现" class="headerlink" title="接口的显式实现"></a>接口的显式实现</h2><h3 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h3><ol><li><p>解决多接口实现时的二义性</p></li><li><p>解决接口中的成员对实现类不适用的问题</p></li></ol><h3 id="做法："><a href="#做法：" class="headerlink" title="做法："></a>做法：</h3><ul><li>在实现的成员前加接口名，并且不能加任何访问修饰符,默认为private</li><li>显式实现成员只能通过接口类型的引用调用。</li></ul><p><code>Void InterFace1.Fun() &#123;  &#125; </code></p><h2 id="Framework常用接口"><a href="#Framework常用接口" class="headerlink" title="Framework常用接口"></a>Framework常用接口</h2><ul><li><p>IComparable 可比较，使类型支持比大小的功能</p></li><li><p>IComparer  比较器，提供比较的方法，常用于排序比较</p></li><li><p>IEnumerable 可枚举，使类型支持简单迭代(foreach)</p></li><li><p>IEnumerator 枚举器,支持MoveNext ,自己可以控制迭代的节奏</p></li></ul><h2 id="Unity协同程序-Coroutine"><a href="#Unity协同程序-Coroutine" class="headerlink" title="Unity协同程序(Coroutine)"></a>Unity协同程序(Coroutine)</h2><h3 id="定义-4"><a href="#定义-4" class="headerlink" title="定义"></a>定义</h3><ul><li>具有多个返回点(yield)，可以在特定时机分部执行的函数。</li></ul><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><ul><li><p>Unity 每帧处理GameObject 中的协同函数，直到函数执行完毕。</p></li><li><p>当一个协同函数启动时, 本质创建迭代器对象；调用MoveNext方法，执行到yield暂时退出；待满足条件后再次调用MoveNext方法，执行后续代码, 直至遇到下一个yield为止，如此循环至整个函数结束。</p></li></ul><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><p>通过MonoBehaviour中的StartCoroutine方法启动，StopCoroutine方法停止。</p><p>协程函数返回值类型为IEnumerator，方法体中通过yield关键字定义返回点，通过return XX对象定义继续执行的条件。</p><h4 id="可以被yield-return的对象："><a href="#可以被yield-return的对象：" class="headerlink" title="可以被yield return的对象："></a>可以被yield return的对象：</h4><ol><li><p>null或数字 – 在Update后执行，适合分解耗时的逻辑处理。</p></li><li><p>WaitForFixedUpdate – 在FixedUpdate后执行，适合分解物理操作。 </p></li><li><p>WaitForSeconds  – 在指定时间后执行，适合延迟调用。</p></li></ol><p>WaitForSecondsRealtime – 同上，不受时间缩放影响。</p><ol start="4"><li><p>WaitForEndOfFrame – 在每帧结束后执行，适合相机的跟随操作。</p></li><li><p>Coroutine – 在另一个协程执行完毕后再执行。</p></li><li><p>WaitUntil – 在委托返回true时执行，适合等待某一操作。</p></li></ol><p>WaitWhile – 在委托返回false时执行，适合等待某一操作。</p><ol start="7"><li>WWW – 在请求结束后执行，适合加载数据，如文件、贴图、材质等。</li></ol><h3 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h3><ol><li><p>延时调用。</p></li><li><p>分解操作。</p></li></ol><h1 id="反射-reflection"><a href="#反射-reflection" class="headerlink" title="反射 reflection"></a>反射 reflection</h1><h2 id="定义-5"><a href="#定义-5" class="headerlink" title="定义"></a>定义</h2><p>动态获取类型信息,动态创建对象,动态访问成员的过程。</p><h2 id="作用-3"><a href="#作用-3" class="headerlink" title="作用"></a>作用</h2><p>在编译时无法了解类型，在运行时获取类型信息，创建对象，访问成员。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li><p>得到数据类型</p></li><li><p>动态创建对象</p></li><li><p>查看类型信息（了解本身信息,成员信息）</p></li></ol><h2 id="常用类"><a href="#常用类" class="headerlink" title="常用类"></a>常用类</h2><ol><li><p>取得数据类型Type </p><table><thead><tr><th align="center"><strong>序号</strong></th><th align="center"><strong>语法</strong></th><th align="center"><strong>适用范围</strong></th></tr></thead><tbody><tr><td align="center">方式一：</td><td align="center">Type.GetType(“类型全名”);</td><td align="center">​ 适合于类型的名称已知</td></tr><tr><td align="center">方式二：</td><td align="center">obj.GetType();</td><td align="center">适合于类型名未知，类型未知，存在已有对象</td></tr><tr><td align="center">方式三：</td><td align="center">typeof(类型)</td><td align="center">适合于已知类型</td></tr><tr><td align="center">方式四：</td><td align="center">Assembly.Load(“XXX”).GetType(“名字”);</td><td align="center">适合于类型在另一个程序集中</td></tr><tr><td align="center">P.S.</td><td align="center"></td><td align="center">Type类常用Get系列方法 Is系列属性。</td></tr></tbody></table></li><li><p>MethodInfo(方法)<br>重要方法: Invoke</p></li><li><p>PropertyInfo(属性)<br>重要方法：SetValue GetValue</p></li><li><p>FieldInfo(字段)<br>重要方法：SetValue GetValue</p></li><li><p>ConstructInfo(构造方法)<br> 重要方法：Invoke</p></li></ol><h2 id="动态创建对象"><a href="#动态创建对象" class="headerlink" title="动态创建对象"></a>动态创建对象</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Activator.CreateInstance(<span class="built_in">string</span> 程序集名称,<span class="built_in">string</span> 类型全名)</span><br><span class="line"></span><br><span class="line">Activator.CreateInstance(Type type);</span><br><span class="line"> </span><br><span class="line">Assembly assembly = Assembly.Load(程序集);</span><br><span class="line"></span><br><span class="line">assembly.CreateInstance(Type);</span><br><span class="line"></span><br><span class="line"><span class="comment">//找到有参构造方法，动态调用构造方法</span></span><br><span class="line">type.GetConstructor(<span class="keyword">typeof</span>(<span class="built_in">string</span>)).Invoke()</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> OOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何下载网页中嵌入的PPT</title>
      <link href="/2019/03/05/Office/01Office/"/>
      <url>/2019/03/05/Office/01Office/</url>
      
        <content type="html"><![CDATA[<h1 id="如何下载网页中嵌入的PPT"><a href="#如何下载网页中嵌入的PPT" class="headerlink" title="如何下载网页中嵌入的PPT"></a>如何下载网页中嵌入的PPT</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><ol><li>复制当前网页地址。</li><li>打开powerpoint 选择“文件”“打开”在文件名的地方粘贴刚才复制的地址，然后就会出现一个连接到服务器的图案，耐心等待。</li><li>如果防火墙弹出提示请选择允许访问网络。等全部下载完之后选择 “文件”“另存为”ppt格式即可</li></ol><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><ol><li>也可以先将此网页中打开的有PPT的地址收藏到IE的收藏夹中</li><li>命名为“XXXppt，记住其收藏夹中的位置(这里要说明:你至少应该知道你的收藏夹的位置)，</li><li>然后运行PPT，点击文件&#x2F;打开，选择收藏夹，找到“XXXppt”，打开,然后另存为PPT。</li><li>就是把当前网页保存收藏，一定要记住保存后的名字和位置。然后运行powerpoint，打开文件，选择你刚才收藏的网页，这时候就自动下载到硬盘啦！</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Office </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中特殊的文件夹</title>
      <link href="/2018/04/23/Unity3D/30Unity_files/"/>
      <url>/2018/04/23/Unity3D/30Unity_files/</url>
      
        <content type="html"><![CDATA[<h2 id="隐藏文件夹"><a href="#隐藏文件夹" class="headerlink" title="隐藏文件夹."></a>隐藏文件夹<code>.</code></h2><ul><li>隐藏文件夹以<code>.</code>开头的文件夹会被Unity忽略<br>  在这种文件夹中的资源不会被导入，脚本不会被编译。也不会出现在Project视图中。</li></ul><h2 id="Standard-Assets"><a href="#Standard-Assets" class="headerlink" title="Standard Assets"></a>Standard Assets</h2><ul><li><code>Standard Assets</code>在这个文件夹中的脚本最先被编译<br>  这个文件夹中的脚本会被导出到Assembly-CSharp-firstpass, Assembly-UnityScript-firstpass 或 Assembly-Boo-firstpass项目中，依语言而定。<br>  在这个文件夹中的脚本比其他脚本都要先编译。<br>  将脚本放在这个文件夹里，就可以用C#脚本来访问js脚本或其他语言的脚本。<blockquote><p>参考 <a href="https://links.jianshu.com/go?to=http://docs.unity3d.com/Documentation/Manual/ScriptCompileOrderFolders.html">http://docs.unity3d.com/Documentation/Manual/ScriptCompileOrderFolders.html</a></p></blockquote></li></ul><h2 id="Pro-Standard-Assets"><a href="#Pro-Standard-Assets" class="headerlink" title="Pro Standard Assets"></a>Pro Standard Assets</h2><ul><li><code>Pro Standard Assets</code>跟<code>Standard Assets</code>相同，只不过里面的文件是给Pro版本的Unity使用的</li></ul><h2 id="Editor"><a href="#Editor" class="headerlink" title="Editor"></a>Editor</h2><ul><li>以<code>Editor</code>命名的文件夹允许其中的脚本访问<code>Unity Editor</code>的API<br>  如果脚本中使用了在UnityEditor命名空间中的类或方法，它必须被放在名为Editor的文件夹中。<br>  <strong>Editor文件夹中的脚本不会在build时被包含。</strong><br>  在项目中可以有多个Editor文件夹。<br>  注意：如果在普通的文件夹下，Editor文件夹可以处于目录的任何层级。如果在特殊文件夹下，那Editor文件夹必须是特殊文件夹的直接子目录。</li></ul><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h2><ul><li><p><code>Plugins</code>文件夹用来放native插件,它们会被自动包含进build中去。<br>  注意这个文件夹只能是Assets文件夹的直接子目录。<br>  在Windows平台下，native 插件是dll文件；<br>  Mac OS X下，是bundle文件；Linux下，是.so文件。<br>  跟Standard Assets一样，这里的脚本会更早的编译，允许它们被之外的脚本访问。</p></li><li><p><code>Plugins/x86</code>如果为32bit或64bit平台创建游戏，那么这个文件夹下的native plugin文件会被自动的包含在游戏build中。<br>如果这个文件夹不存在，则Unity会查找Plugins文件夹下的native pluglins。</p></li><li><p><code>Plugins/x86_64</code>如果为32bit或64bit平台创建游戏，那么这个文件夹下的native plugin文件会被自动的包含在游戏build中。<br>如果这个文件夹不存在，则Unity会查找Plugins文件夹下的native pluglins。<br>如果要创建universal build，建议你同时使用这两个文件夹。然后将32bit和64bit的native plugins放进相应的文件夹中。</p></li><li><p><code>Plugins/Android</code>在这个文件夹里放入Java.jar文件。用于java语言的plugins。.so文件也会被包含进来。</p><blockquote><p>参考<a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvciY82xyiNlAjeBmjilxKnjHUZ8hq2uu7RrsEvKtQRij5w5KTeMCk5rRR0mWV3IgBUVMj6gNF1N/AUVK3RZV/6d1HeoQXiVNBsEmICBz/viPAAVsn6HN03nkAPd8u8/vYeMAiZcKdUDdW4LJvSMBWIhYq/niSDh2pvIU4f3khJbM2lsJwy1I4bZWPMiI/bylV2Pah4egTNMg==">http://docs.unity3d.com/Documentation/Manual/PluginsForAndroid.html</a></p></blockquote></li><li><p><code>Plugins/iOS</code></p></li><li><p>A limited, simple way to automatically add (as symbolic links) any .a, .m, .mm, .c, or .cpp files into the generated Xcode project.</p><blockquote><p>  See<a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvciY82xyiNlAjeBmjilxKnjHUZ8hq2uu7RrsEvKtQRij5w5KTeMCk5rRR0mWV3IgBUVMj6gNF1N/AUVK3RZV/68DbAcQ5sUveRu9HihWIPfp5AD3fLvP72HjAImXCnVA3VuCyb0jAViIWKv54kg4dqbyFOH95ISWzNpbCcMtSOG2VjzIiP28pVdj2oeHoEzTI=">http://docs.unity3d.com/Documentation/Manual/PluginsForIOS.html</a></p></blockquote></li><li><p>If you need more control how to automatically add files to the Xcode project, you should make use of the PostprocessBuildPlayer feature. Doing so does not require you to place such files in the Plugins&#x2F;iOS folder.</p><blockquote><p> See <a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvciY82xyiNlAjeBmjilxKnjHUZ8hq2uu7RrsEvKtQRij5w5KTeMCk5rRR0mWV3IgDNfaf+9EifWtgS7/nJiyDGrX+l9jJ9vzBEXSLXQqXdXZG70eKFYg9+nkAPd8u8/vYeMAiZcKdUDdW4LJvSMBWIhYq/niSDh2pvIU4f3khJbM2lsJwy1I4bZWPMiI/bylV2Pah4egTNMg==">http://docs.unity3d.com/Documentation/Manual/BuildPlayerPipeline.html</a></p></blockquote></li><li><p>尝试在目录中导入多个子项 <code>plugins</code> 目录，且放入 <code>EasySave3</code> 时，导出的包体丢失<code>Assembly-CSharp-firstpass</code> 程序集，解决方法将 <code>EasySave3 </code>放入<code>Asset</code>直属目录下的<code>Plugins</code>里。</p></li></ul><h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ol><li><strong>Resources文件夹允许你在脚本中通过文件路径和名称来访问资源</strong><br> 但还是推荐使用直接引用来访问资源。**放在这一文件夹的资源永远被包含进build中，即使它没有被使用。**因为Unity无法判断脚本有没有访问了其中的资源。项目中可以有多个Resources文件夹，因此不建议在多个文件夹中放同名的资源。一旦build游戏，Resources文件夹中的所有资源被打包进游戏存放资源的archive中。这样在游戏的build中就不存在Resources文件夹了。即使脚本中仍然使用了资源在项目中的路径。<blockquote><p>参考 <a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvciY82xyiNlAjeBmjilxKnjHUZ8hq2uu7RrsEvKtQRij5w5KTeMCk5rRR0mWV3IgAS3yRKlqycocZRd+n6Yf84P446pdyig5+THpkTRlkW2FNUCC4vf3fBkbvR4oViD36eQA93y7z+9h4wCJlwp1QN1bgsm9IwFYiFir+eJIOHam8hTh/eSElszaWwnDLUjhtlY8yIj9vKVXY9qHh6BM0y">http://docs.unity3d.com/Documentation/Manual/LoadingResourcesatRuntime.html</a></p></blockquote></li></ol><ul><li>注意：当资源作为脚本变量被访问时，这些资源在脚本被实例化后就被加载进内存。如果资源太大，你可能不希望它被这样加载。那么你可以将这些大资源放进Resources文件夹中，通过Resources.Load来加载。当不再使用这些资源了，可以通过Destroy物体，再调用Resources.UnloadUnusedAssets来释放内存。</li></ul><h2 id="Editor-Default-Resources"><a href="#Editor-Default-Resources" class="headerlink" title="Editor Default Resources"></a>Editor Default Resources</h2><ul><li><strong>Editor Default Resources这是为editor 脚本使用的文件夹</strong></li></ul><h2 id="Gizmos"><a href="#Gizmos" class="headerlink" title="Gizmos"></a>Gizmos</h2><ul><li><strong>Gizmos文件夹存放用Gizmos.DrawIcon方法使用的贴图、图标资源</strong><br>  放在Gizmos文件夹中的贴图资源可以直接通过名称使用，可以被Editor作为gizmo画在屏幕上。</li></ul><h2 id="WebPlayerTemplates"><a href="#WebPlayerTemplates" class="headerlink" title="WebPlayerTemplates"></a>WebPlayerTemplates</h2><ul><li><strong>WebPlayerTemplates用来替换web build的默认网页</strong><br>  这个文件夹中的脚本都不会被编译。这个文件夹必须作为Assets文件夹的直接子目录。</li></ul><h2 id="StreamingAssets"><a href="#StreamingAssets" class="headerlink" title="StreamingAssets"></a>StreamingAssets</h2><ol start="3"><li><strong>StreamingAssets这里的文件会被拷贝到build文件夹中，不会修改（移动和网页版不同，他们会被嵌入到最终build文件中)</strong><br> 它们的路径会因平台而有差异，但都可以通过Application.streamingAssetsPath来访问。<blockquote><p>参考<br>  <a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvciY82xyiNlAjeBmjilxKnjHUZ8hq2uu7RrsEvKtQRij5w5KTeMCk5rRR0mWV3IgDPpotONP6odw6vFdw8nnXiaFT9lfxnaZ1B49q5Oh8l1SRmqJQ2bM+JJm1co5XpNTxBNV2uIprPAGSvKqjtmNypY0oHVbN9Cydf7PyaYMkTCUjGVpD9Z8m6yqvBGCnETvQwPGbuJnYGNA==">http://docs.unity3d.com/Documentation/Manual/StreamingAssets.html</a>-<br>  <a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAvciY82xyiNlAjeBmjilxKnjHUZ8hq2uu7RrsEvKtQRij5w5KTeMCk59VmCQnX79Up8q/iF4q/IcJTHlkYakSmmPW00btLnu9QSxZVPK2iaH76NOnu15f8jKc80+XVbgfMjGjhXeAe9D26pl+6ZZnYrJGaolDZsz4kmbVyjlek1PEE1Xa4ims8AZK8qqO2Y3KljSgdVs30LJ1/s/JpgyRMJSMZWkP1nybrKq8EYKcRO9DA8Zu4mdgY0">http://docs.unity3d.com/Documentation/ScriptReference/Application-streamingAssetsPath.html</a>。<br>参考文献：<a href="https://links.jianshu.com/go?to=http://jump.bdimg.com/safecheck/index?url=x+Z5mMbGPAsPGrHzfl+rWQjeBmjilxKnjHUZ8hq2uu7Jyhn4x917MFu3uPeBYY16ZjL6Z89+J4F1bS3lg49ChqErxT2893T2vurrk+zqNSzwcvLLeljEL1f/4rEF1R+OhX2szyxZPpskZqiUNmzPiSZtXKOV6TU8QTVdriKazwBkryqo7ZjcqWNKB1WzfQsnX+z8mmDJEwlIxlaQ/WfJusqrwRgpxE70MDxm7iZ2BjQ=">http://wiki.unity3d.com/index.php/Special_Folder_Names_in_your_Assets_Folder</a></p></blockquote></li></ol><div style="display:none">[Unity特殊文件夹最全详解](https://www.jianshu.com/p/425bbecaabf4)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中的HTTP网络通信</title>
      <link href="/2018/04/20/Unity3D/24Unity_HTTP/"/>
      <url>/2018/04/20/Unity3D/24Unity_HTTP/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity中的HTTP编程"><a href="#Unity中的HTTP编程" class="headerlink" title="Unity中的HTTP编程"></a>Unity中的HTTP编程</h1><p>Unity中的HTTP通信主要依赖的是Unity自带的UnityWebRequest类（虽然也有一些第三方插件，但一般使用这个就足够了）。<br>HTTP是<code>请求-响应模型</code>，所以通信的过程主要分为请求部分和响应部分。</p><p>官方文档：<a href="https://docs.unity3d.com/cn/current/Manual/UnityWebRequest.html">https://docs.unity3d.com/cn/current/Manual/UnityWebRequest.html</a></p><h1 id="HTTP请求（REQUEST）"><a href="#HTTP请求（REQUEST）" class="headerlink" title="HTTP请求（REQUEST）"></a>HTTP请求（REQUEST）</h1><p>客户端发送一个HTTP请求到服务器的请求消息包括以下格式：</p><p>请求行（request line）、请求头部（header）、空行和请求数据四个部分组成。</p><p><img src="/images/Unity3D/http/dc084b8c88d579d93a47aa360f323032.png" alt="HTTP"></p><h2 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h2><h2 id="请求实例"><a href="#请求实例" class="headerlink" title="请求实例"></a>请求实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Networking;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UnityPageRequest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function">IEnumerator <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&quot;https://www.baidu.com&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> www = UnityWebRequest.Get(url);</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> www.SendWebRequest();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (www.isHttpError || www.isNetworkError)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(www.error);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(www.downloadHandler.text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本例中我们使用了<code>UnityWebRequest.Get(url)</code>来获取对应的信息。<br>这里的Get方法对应了HTTP方法中的GET。</p><h1 id="HTTP方法"><a href="#HTTP方法" class="headerlink" title="HTTP方法"></a>HTTP方法</h1><p>根据HTTP标准，HTTP请求可以使用多种请求方法。<br>HTTP1.0定义了三种请求方法： GET, POST 和 HEAD方法。<br>HTTP1.1新增了五种请求方法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT 方法。</p><ul><li><em>GET</em> 请求指定的页面信息，并返回实体主体。</li><li><em>POST</em> 向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和&#x2F;或已有资源的修改。</li><li><em>HEAD</em> 类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头</li><li><em>PUT</em> 从客户端向服务器传送的数据取代指定的文档的内容。</li><li><em>DELETE</em> 请求服务器删除指定的页面。</li><li><em>CONNECT</em> HTTP&#x2F;1.1协议中预留给能够将连接改为管道方式的代理服务器。</li><li><em>OPTIONS</em> 允许客户端查看服务器的性能。</li><li><em>TRACE</em> 回显服务器收到的请求，主要用于测试或诊断。</li></ul><p>通常我们用的比较多的是GET和POST方法。GET一般用来获取信息，POST一般用来向服务器上传信息，比如表单、文件等。</p><h1 id="Unity中对应的HTTP方法"><a href="#Unity中对应的HTTP方法" class="headerlink" title="Unity中对应的HTTP方法"></a>Unity中对应的HTTP方法</h1><p>UnityWebRequest类中封装了几种HTTP方法的高级操作：</p><ul><li>GET对应<code>UnityWebRequest.Get</code></li><li>POST对应<code>UnityWebRequest.Post</code></li><li>HEAD对应<code>UnityWebRequest.Head</code></li><li>PUT对应<code>UnityWebRequest.Put</code></li><li>DELETE对应<code>UnityWebRequest.Delete</code></li></ul><p>此外，还能使用底层的API来手动创建UnityWebRequest。</p><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><p>上面的几行代码请求了<code>https://www.baidu.com</code>这一URL对应的资源，返回的数据是一个html文件的文本内容。</p><p>URL它是一个资源地址，就本例来说：</p><ol><li>协议部分：该URL的协议部分为“https：”，这代表网页使用的是HTTPS协议，S代表Secure，安全的，是一种加密传输的HTTP协议，在”https”后面的“&#x2F;&#x2F;”为分隔符。</li><li>域名部分：该URL的域名部分为“<a href="https://www.baidu.com/">www.baidu.com</a>”。一个URL中，也可以使用IP地址作为域名使用</li><li>端口部分：端口不是一个URL必须的部分，如果省略，将采用默认端口80。本例中就省略了端口号。</li><li>虚拟目录部分：从域名后的第一个“&#x2F;”开始到最后一个“&#x2F;”为止，是虚拟目录部分。虚拟目录也不是一个URL必须的部分。本例中的虚拟目录是根目录“&#x2F;”</li><li>文件名部分：文件名部分也不是一个URL必须的部分，可以在服务端配置和开发。</li></ol><p>如果你不参与服务端开发的话，一般只需要知道URL地址是什么就可以了。</p><h1 id="HTTP-HEADERS（头部）"><a href="#HTTP-HEADERS（头部）" class="headerlink" title="HTTP HEADERS（头部）"></a>HTTP HEADERS（头部）</h1><p>请求头部经常用来设置请求的一些属性参数。</p><p>比如我们想告诉服务器给我们返回json格式的数据，通常要设置：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-type:application/json</span><br></pre></td></tr></table></figure><p>在Unity中需要这么设置：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.SetRequestHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h1><p>有些请求方法如POST和PUT还可以携带请求数据，通常用于上传文件。</p><p>在Unity中，请求数据通常以这种方式添加，例如上传一张图片：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IEnumerator <span class="title">UploadTexture</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> tex = <span class="keyword">new</span> Texture2D(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    tex.ReadPixels(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, Screen.width, Screen.height), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    tex.Apply();</span><br><span class="line">    <span class="comment">// tex.Apply() 对性能影响较大，故等待一帧再执行</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">var</span> bytes = tex.EncodeToPNG();</span><br><span class="line">    <span class="keyword">var</span> form = <span class="keyword">new</span> WWWForm();</span><br><span class="line">    form.AddBinaryData(<span class="string">&quot;screenshot&quot;</span>, bytes);</span><br><span class="line">    <span class="keyword">var</span> www = UnityWebRequest.Post(<span class="string">&quot;server url&quot;</span>, form);</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> www.SendWebRequest();</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="HTTP响应（RESPONSE）"><a href="#HTTP响应（RESPONSE）" class="headerlink" title="HTTP响应（RESPONSE）"></a>HTTP响应（RESPONSE）</h1><p>Http请求的结果都是字节流。</p><p>那么为什么我们能看到在浏览器上有的能呈现文字，还有图片、视频呢？</p><p><img src="/images/Unity3D/http/2d4154afde067866398e0ce57ec38b04.png"></p><p>这是因为响应结果中都有Content-Type报头，浏览器会根据报头来解析接收到的数据，显示为不同的内容。</p><h2 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h2><p>HTTP响应的第一行会显示使用的协议以及状态码。</p><h1 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h1><h2 id="状态码的定义"><a href="#状态码的定义" class="headerlink" title="状态码的定义"></a>状态码的定义</h2><p>状态代码有三位数字组成，第一个数字定义了响应的类别，共分五种类别:</p><ul><li>1xx：指示信息–表示请求已接收，继续处理</li><li>2xx：成功–表示请求已被成功接收、理解、接受</li><li>3xx：重定向–要完成请求必须进行更进一步的操作</li><li>4xx：客户端错误–请求有语法错误或请求无法实现</li><li>5xx：服务器端错误–服务器未能实现合法的请求</li></ul><h2 id="常见状态码"><a href="#常见状态码" class="headerlink" title="常见状态码"></a>常见状态码</h2><ul><li>200 OK &#x2F;&#x2F;客户端请求成功</li><li>301 Moved Permanently&#x2F;&#x2F;重定向（当前页面已过时，跳转到新的页面）</li><li>400 Bad Request &#x2F;&#x2F;客户端请求有语法错误，不能被服务器所理解</li><li>401 Unauthorized &#x2F;&#x2F;请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用</li><li>403 Forbidden &#x2F;&#x2F;服务器收到请求，但是拒绝提供服务</li><li>404 Not Found &#x2F;&#x2F;请求资源不存在，eg：输入了错误的URL</li><li>500 Internal Server Error &#x2F;&#x2F;服务器发生不可预期的错误</li><li>502 Bad Gateway&#x2F;&#x2F;服务器从上游服务器收到一个无效的响应（访问量过大，不能提供服务的就会收到）</li><li>503 Server Unavailable &#x2F;&#x2F;服务器当前不能处理客户端的请求，一段时间后可能恢复正常</li></ul><p>在Unity中可以使用如下代码获取状态码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Debug.Log(www.responseCode);</span><br></pre></td></tr></table></figure><p>这个状态码也决定了<a href="http://www.ishttperror的返回值/">www.isHttpError的返回值</a></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isHttpError = reponseCode &gt;= <span class="number">400</span>;</span><br></pre></td></tr></table></figure><h1 id="UNITY中的HTTP响应"><a href="#UNITY中的HTTP响应" class="headerlink" title="UNITY中的HTTP响应"></a>UNITY中的HTTP响应</h1><p>但是在Unity中，UnityWebRequest并没有自动帮我们处理这个过程，我们需要手动来处理。</p><p>通常我们使用：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text = www.downloadHandler.text; <span class="comment">// 文本信息，使用UTF8编码解析</span></span><br><span class="line"><span class="keyword">var</span> bytes = www.downloadHandler.data; <span class="comment">// 字节数组</span></span><br></pre></td></tr></table></figure><p>注意<a href="http://www.downloadhandler.text实际上是自动使用utf8编码解析了字节数组,如果发送的数据不是采用utf8编码,需要获取字节数组自行解析./">www.downloadHandler.text实际上是自动使用UTF8编码解析了字节数组，如果发送的数据不是采用UTF8编码，需要获取字节数组自行解析。</a></p><p>另外在Unity中，Unity结合游戏开发中的常见需求，也加入了请求图片、音频请求的接口。</p><h2 id="请求图片："><a href="#请求图片：" class="headerlink" title="请求图片："></a>请求图片：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IEnumerator <span class="title">RequestTexture</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://www.baidu.com/img/bd_logo1.png&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> www = UnityWebRequestTexture.GetTexture(url);</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> www.SendWebRequest();</span><br><span class="line">    Debug.Log(<span class="string">&quot;status code:&quot;</span> + www.responseCode);</span><br><span class="line">    <span class="keyword">if</span> (www.isHttpError || www.isNetworkError)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(www.error);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> tex = DownloadHandlerTexture.GetContent(www);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请求音频："><a href="#请求音频：" class="headerlink" title="请求音频："></a>请求音频：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IEnumerator <span class="title">RequestMedia</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> url = <span class="string">&quot;https://www.xxx.com/music.ogg&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> www = UnityWebRequestMultimedia.GetAudioClip(url, AudioType.OGGVORBIS);</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> www.SendWebRequest();</span><br><span class="line">    Debug.Log(<span class="string">&quot;status code:&quot;</span> + www.responseCode);</span><br><span class="line">    <span class="keyword">if</span> (www.isHttpError || www.isNetworkError)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(www.error);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> audio = DownloadHandlerAudioClip.GetContent(www);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请求视频"><a href="#请求视频" class="headerlink" title="请求视频"></a>请求视频</h2><p>目前Unity的VideoPlayer中支持直接从file或http协议直接播放视频，如果你想将这个视频下载到本地，可以使用<code>UnityWebRequest.Get</code>方法获取到所有字节再将字节保存到本地。</p><h2 id="请求Assetbundle"><a href="#请求Assetbundle" class="headerlink" title="请求Assetbundle"></a>请求Assetbundle</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">IEnumerator <span class="title">InstantiateObject</span>(<span class="params"><span class="built_in">string</span> assetBundleName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> uri = <span class="string">&quot;file:///&quot;</span> + Application.dataPath + <span class="string">&quot;/AssetBundles/&quot;</span> + assetBundleName;</span><br><span class="line">    UnityWebRequest request = UnityWebRequestAssetBundle.GetAssetBundle(uri, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">return</span> request.SendWebRequest();</span><br><span class="line">    AssetBundle bundle = DownloadHandlerAssetBundle.GetContent(request);</span><br><span class="line">    GameObject cube = bundle.LoadAsset&lt;GameObject&gt;(<span class="string">&quot;Cube&quot;</span>);</span><br><span class="line">    GameObject sprite = bundle.LoadAsset&lt;GameObject&gt;(<span class="string">&quot;Sprite&quot;</span>);</span><br><span class="line">    Instantiate(cube);</span><br><span class="line">    Instantiate(sprite);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>Unity有一个旧的Web请求API是WWW，但是对HTTP请求不完善。</li><li>建议使用新的UnityWebRequest类拥有更好的性能和更完善的HTTP请求。</li></ul><div style="display:none">- (UNITY中的HTTP网络通信)[https://www.freesion.com/article/29501003340/]</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shader入门浅析</title>
      <link href="/2018/04/19/Unity3D/19Unity_Shader/"/>
      <url>/2018/04/19/Unity3D/19Unity_Shader/</url>
      
        <content type="html"><![CDATA[<h1 id="Shader编程语言"><a href="#Shader编程语言" class="headerlink" title="Shader编程语言"></a>Shader编程语言</h1><p>Shader主流的编程语言有三种语言：</p><ol><li>基于OpenGL的OpenGL Shading Language，简称GLSL。</li><li>基于DirectX的High Level Shading Language,简称HLSL。</li><li>还有NVIDIA公司的C for Graphic，简称Cg语言。</li></ol><h1 id="Unity的3种Shader"><a href="#Unity的3种Shader" class="headerlink" title="Unity的3种Shader"></a>Unity的3种Shader</h1><p>在Unity中有3种Shader（其实就是三种不同的写法）：</p><ol><li>Surface Shaders 表面着色器</li><li>Vertex&#x2F;Fragment Shaders 顶点&#x2F;片断着色器</li><li>Fixed Function Shaders 固定管线着色器</li></ol><div style="display:none">- [Unity Shader——不一样的入门宝典](https://zhuanlan.zhihu.com/p/105217655)- [零基础入门Unity Shader（一）](https://zhuanlan.zhihu.com/p/46745694)- [基于菲涅尔的半透明透射](https://zhuanlan.zhihu.com/p/346389785)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> Shader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON在Unity中的应用(LitJson)</title>
      <link href="/2018/04/19/Unity3D/21Unity_JSON/"/>
      <url>/2018/04/19/Unity3D/21Unity_JSON/</url>
      
        <content type="html"><![CDATA[<p>了解JSON的数据结构<br>了解C#数据和JSON数据的转化关系<br>了解常见的JSON类库使用方法<br>实现简单的JSON数据表功能</p><h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><ul><li>全名：JavaScript Object Notation</li><li>功能：JavaScript对象标记语言，是一种跨平台，跨语言，轻量级的数据交换和存储</li></ul><div style="display:none">- Word M3W2- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热更新</title>
      <link href="/2018/04/19/Unity3D/23Unity_Lua/"/>
      <url>/2018/04/19/Unity3D/23Unity_Lua/</url>
      
        <content type="html"><![CDATA[<div style="display:none">- Word M3W3- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Editor</title>
      <link href="/2018/04/19/Unity3D/22Unity_Editor/"/>
      <url>/2018/04/19/Unity3D/22Unity_Editor/</url>
      
        <content type="html"><![CDATA[<div style="display:none">- Word M3W3- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML在Unity中的应用</title>
      <link href="/2018/04/19/Unity3D/20Unity_XML/"/>
      <url>/2018/04/19/Unity3D/20Unity_XML/</url>
      
        <content type="html"><![CDATA[<h1 id="XML简介"><a href="#XML简介" class="headerlink" title="XML简介"></a>XML简介</h1><ul><li>XML 被设计用来传输和存储数据。</li><li>HTML 被设计用来显示数据。</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li>万维网联盟 <a href="http://www.w3.org/">www.w3.org</a></li><li>教程目录 w3.org&#x2F;tutorials</li></ul><h2 id="什么是XML"><a href="#什么是XML" class="headerlink" title="什么是XML"></a>什么是XML</h2><ul><li>Extensible Markup Language</li><li>可扩展标记语言，标准通用标记语言的子集，是一种用于标记电子文件使其具有结构性的标记语言。</li><li>在电子计算机中，标记指计算机所能理解的信息符号，通过此种标记，计算机之间可以处理包含各种的信息比如文章等。它可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了<code>XML1.0</code>规范，使用它来简化Internet的文档信息传输</li></ul><h2 id="XML介绍（XML逐渐被Json替代）"><a href="#XML介绍（XML逐渐被Json替代）" class="headerlink" title="XML介绍（XML逐渐被Json替代）"></a>XML介绍（XML逐渐被Json替代）</h2><ul><li>XML 指可扩展标记语言（EXtensible Markup Language）。</li><li>XML 是一种很像HTML的标记语言。</li><li>XML 的设计宗旨是传输数据，而不是显示数据。</li><li>XML 标签没有被预定义。您需要自行定义标签。</li><li>XML 被设计为具有自我描述性。</li><li>XML 是 W3C 的推荐标准。</li></ul><h2 id="XML简单实例"><a href="#XML简单实例" class="headerlink" title="XML简单实例"></a>XML简单实例</h2><ul><li>XML 不会做任何事情。XML被设计用来结构化、存储以及传输信息。</li><li>下面实例是 Jani 写给 Tove 的便签，存储为 XML：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;ISO-8859-1&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Tove<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Jani<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>Don&#x27;t forget me this weekend !<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>上面的这条便签具有自我描述性。它包含了发送者和接受者的信息，同时拥有标题以及消息主体。</li><li>但是，这个 XML 文档仍然没有做任何事情。它仅仅是包装在 XML 标签中的纯粹的信息。我们需要编写软件或者程序，才能传送、接收和显示出这个文档。</li></ul><h1 id="XmlDocument"><a href="#XmlDocument" class="headerlink" title="XmlDocument"></a>XmlDocument</h1><ul><li>XmlDocument将XML视为树状结构，它装载XML文档，并在内存中构建该文档的树状结构。</li><li>复制下面代码另存为<code>.xml</code>，在浏览器中查看</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root_CharacterTemplateData</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">CharacterTemplateData</span> <span class="attr">id</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">name</span>=<span class="string">&quot;法师&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JobID</span>&gt;</span>2<span class="tag">&lt;/<span class="name">JobID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JobMode</span>&gt;</span>Wizard<span class="tag">&lt;/<span class="name">JobMode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">InitForce</span>&gt;</span>100<span class="tag">&lt;/<span class="name">InitForce</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">CharacterTemplateData</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">CharacterTemplateData</span> <span class="attr">id</span>=<span class="string">&quot;1001&quot;</span> <span class="attr">name</span>=<span class="string">&quot;战士&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JobID</span>&gt;</span>3<span class="tag">&lt;/<span class="name">JobID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JobMode</span>&gt;</span>Warrior<span class="tag">&lt;/<span class="name">JobMode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">InitForce</span>&gt;</span>200<span class="tag">&lt;/<span class="name">InitForce</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">CharacterTemplateData</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">CharacterTemplateData</span> <span class="attr">id</span>=<span class="string">&quot;1002&quot;</span> <span class="attr">name</span>=<span class="string">&quot;农夫&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JobID</span>&gt;</span>4<span class="tag">&lt;/<span class="name">JobID</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JobMode</span>&gt;</span>Farmer<span class="tag">&lt;/<span class="name">JobMode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">InitForce</span>&gt;</span>20<span class="tag">&lt;/<span class="name">InitForce</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">CharacterTemplateData</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root_CharacterTemplateData</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="创建XML-Unity"><a href="#创建XML-Unity" class="headerlink" title="创建XML(Unity)"></a>创建XML(Unity)</h1><h2 id="引入命名空间"><a href="#引入命名空间" class="headerlink" title="引入命名空间"></a>引入命名空间</h2><p>引入XML命名空间<code>using System.Xml;</code></p><h2 id="添加header和root节点"><a href="#添加header和root节点" class="headerlink" title="添加header和root节点"></a>添加header和root节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xmlDocument实例</span></span><br><span class="line">XmlDocument xmlDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line"><span class="comment">// Head 头部声明</span></span><br><span class="line">XmlDeclaration header = xmlDoc.CreateXmlDeclaration(<span class="string">&quot;1.0&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">xmlDoc.AppendChild(header);</span><br><span class="line"><span class="comment">//创建根节点&lt;root_CharacterTemplateData&gt;</span></span><br><span class="line">XmlElement root = xmlDoc.CreateElement(<span class="string">&quot;root_CharacterTemplateData&quot;</span>);</span><br><span class="line"><span class="comment">//添加根节点</span></span><br><span class="line">xmlDoc.AppendChild(root);</span><br></pre></td></tr></table></figure><h2 id="添加一级节点"><a href="#添加一级节点" class="headerlink" title="添加一级节点"></a>添加一级节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一级子节点&lt;CharacterTemplateData&gt;</span></span><br><span class="line">XmlElement e = xmlDoc.CreateElement(<span class="string">&quot;CharacterTemplateData&quot;</span> ) ;</span><br><span class="line">root.AppendChild(e);</span><br></pre></td></tr></table></figure><h2 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> fileName = <span class="string">&quot;test.xml&quot;</span>; <span class="comment">//文件名</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> filePath&#123; <span class="comment">//保存路径</span></span><br><span class="line">    <span class="keyword">get</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//Application.streamingAssetsPath</span></span><br><span class="line">        <span class="keyword">return</span> Application.dataPath + <span class="string">&quot;/&quot;</span> +fileName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存到本地</span></span><br><span class="line">xmlDoc.Save(filePath);</span><br></pre></td></tr></table></figure><h2 id="保存文件-Android"><a href="#保存文件-Android" class="headerlink" title="保存文件(Android)"></a>保存文件(Android)</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> fileName = <span class="string">&quot;test.xml&quot;</span>;<span class="comment">//文件名</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> filePath&#123;<span class="comment">//保存路径</span></span><br><span class="line">    <span class="keyword">get</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Application.platform == RuntimePlatform.Android)</span><br><span class="line">            <span class="keyword">return</span> Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName;           </span><br><span class="line">        <span class="keyword">return</span>  Application.dataPath + <span class="string">&quot;/&quot;</span> + fileName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//保存到本地</span></span><br><span class="line">xmlDoc.Save(filePath);</span><br></pre></td></tr></table></figure><h2 id="添加属性"><a href="#添加属性" class="headerlink" title="添加属性"></a>添加属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一级子节点&lt;CharacterTemplateData&gt;</span></span><br><span class="line">XmlElement eleNew = xmlDoc.CreateElement(<span class="string">&quot;characterTemplateData&quot;</span>);</span><br><span class="line">root.AppendChild(eleNew);</span><br><span class="line"><span class="comment">//添加属性id id=&quot;1000&quot;</span></span><br><span class="line">eleNew.SetAttribute(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;1000&quot;</span>);</span><br><span class="line"><span class="comment">//添加属性name name=&quot;xml&quot;</span></span><br><span class="line">eleNew.SetAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;xml&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="添加二级节点"><a href="#添加二级节点" class="headerlink" title="添加二级节点"></a>添加二级节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成二级子节点 &lt; JobID &gt; 2 &lt;/ JobID &gt;</span></span><br><span class="line">XmlElement jobID = xmlDoc.CreateElement(<span class="string">&quot;JobID&quot;</span>);<span class="comment">//设置二级子节点的属性</span></span><br><span class="line">jobID.InnerText = <span class="string">&quot;2&quot;</span>;<span class="comment">//添加二级子节点</span></span><br><span class="line">eleNew.AppendChild(jobID);</span><br></pre></td></tr></table></figure><h2 id="添加节点函数方法"><a href="#添加节点函数方法" class="headerlink" title="添加节点函数方法"></a>添加节点函数方法</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddElement</span>(<span class="params">XmlDocument xmlDoc,XmlElement root,</span></span></span><br><span class="line"><span class="params"><span class="function">      <span class="built_in">string</span> id, <span class="built_in">string</span> name, <span class="built_in">string</span> jobIDText</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="comment">//创建一级子节点&lt;CharacterTemplateData</span></span><br><span class="line">      XmlElement eleNew = xmlDoc.CreateElement(<span class="string">&quot;characterTemplateData&quot;</span>);</span><br><span class="line">      root.AppendChild(eleNew);</span><br><span class="line">      <span class="comment">//添加属性id id=&quot;1000&quot;</span></span><br><span class="line">      eleNew.SetAttribute(<span class="string">&quot;id&quot;</span>, id);</span><br><span class="line">      <span class="comment">//添加属性name name=&quot;xml&quot;</span></span><br><span class="line">      eleNew.SetAttribute(<span class="string">&quot;name&quot;</span>, name); </span><br><span class="line">      <span class="comment">// 生成二级子节点 &lt; JobID &gt; 2 &lt;/ JobID &gt;</span></span><br><span class="line">      XmlElement jobID = xmlDoc.CreateElement(<span class="string">&quot;JobID&quot;</span>);</span><br><span class="line">      <span class="comment">//设置二级子节点的属性</span></span><br><span class="line">      jobID.InnerText = jobIDText;</span><br><span class="line">      <span class="comment">//添加二级子节点</span></span><br><span class="line">      eleNew.AppendChild(jobID);</span><br><span class="line">      <span class="comment">//添加二级子节点&lt;JobMode&gt;none&lt;JobMode&gt;</span></span><br><span class="line">      <span class="comment">//添加二级子节点&lt;InitForce&gt;1.1&lt;/InitForce&gt;</span></span><br><span class="line">  &#125;</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"><span class="meta">## 批量添加节点</span></span><br><span class="line"></span><br><span class="line">```c<span class="meta">#</span></span><br><span class="line">XmlDocument xmlDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line"><span class="comment">//添加头部信息</span></span><br><span class="line">XmlDeclaration header = xmlDoc.CreateXmlDeclaration(<span class="string">&quot;1.0&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">xmlDoc.AppendChild(header);</span><br><span class="line"><span class="comment">//创建根节点&lt;root_CharacterTemplateData&gt;</span></span><br><span class="line">XmlElement root = xmlDoc.CreateElement(<span class="string">&quot;root_CharacterTemplateData&quot;</span>);<span class="comment">//添加根节点</span></span><br><span class="line">xmlDoc.AppendChild(root);<span class="comment">//创建一级子节点</span></span><br><span class="line">AddElement(xmlDoc, root,<span class="string">&quot;1000&quot;</span>, <span class="string">&quot;xml&quot;</span>, <span class="string">&quot;2&quot;</span>);</span><br><span class="line">AddElement(xmlDoc, root,<span class="string">&quot;1001&quot;</span>, <span class="string">&quot;xmltest&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br><span class="line">AddElement(xmlDoc, root,<span class="string">&quot;1002&quot;</span>, <span class="string">&quot;xmlssssss&quot;</span>, <span class="string">&quot;4&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="添加XML-Unity"><a href="#添加XML-Unity" class="headerlink" title="添加XML(Unity)"></a>添加XML(Unity)</h1><h2 id="异常处理-检测文件是否存在"><a href="#异常处理-检测文件是否存在" class="headerlink" title="异常处理:检测文件是否存在"></a>异常处理:检测文件是否存在</h2><ul><li>引入命名空间<code>using System.IO;</code></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检测XML文件是否存在，如果不存在，直接返回</span></span><br><span class="line"><span class="keyword">if</span> (!File.Exists ( filePath ) )</span><br><span class="line">  &#123;</span><br><span class="line">      Debug.LogError(<span class="string">&quot;请先执行创建XML&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="加载XML文件"><a href="#加载XML文件" class="headerlink" title="加载XML文件"></a>加载XML文件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// xmlDoc 实例</span></span><br><span class="line">XmlDocument xmlDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line"><span class="comment">// 加载XML文件</span></span><br><span class="line">xmlDoc.Load( filePath );</span><br><span class="line"><span class="comment">// 查看加载文件</span></span><br><span class="line">Debug.Log( xmlDoc.InnerXml );</span><br></pre></td></tr></table></figure><h2 id="添加和保存文件"><a href="#添加和保存文件" class="headerlink" title="添加和保存文件"></a>添加和保存文件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取根节点</span></span><br><span class="line">XmlNode root = xmlDoc.SelectSingleNode(<span class="string">&quot;root_CharacterTemplateData&quot;</span>);</span><br><span class="line"><span class="comment">//添加一级节点</span></span><br><span class="line">AddElement(xmlDoc, root, <span class="string">&quot;1003&quot;</span>, <span class="string">&quot;射手&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;Bow&quot;</span>, <span class="number">80</span>);</span><br><span class="line"><span class="comment">//保存文件</span></span><br><span class="line">xmlDoc.Save(filePath);</span><br></pre></td></tr></table></figure><h1 id="更新XML-Unity"><a href="#更新XML-Unity" class="headerlink" title="更新XML(Unity)"></a>更新XML(Unity)</h1><h2 id="加载文件"><a href="#加载文件" class="headerlink" title="加载文件"></a>加载文件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取和遍历根节点所有子节点"><a href="#获取和遍历根节点所有子节点" class="headerlink" title="获取和遍历根节点所有子节点"></a>获取和遍历根节点所有子节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查找id为1002的节点"><a href="#查找id为1002的节点" class="headerlink" title="查找id为1002的节点"></a>查找id为1002的节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改id和jobID"><a href="#修改id和jobID" class="headerlink" title="修改id和jobID"></a>修改id和jobID</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="查找XML-Unity"><a href="#查找XML-Unity" class="headerlink" title="查找XML(Unity)"></a>查找XML(Unity)</h1><h2 id="加载文件-1"><a href="#加载文件-1" class="headerlink" title="加载文件"></a>加载文件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取和遍历根节点所有子节点-1"><a href="#获取和遍历根节点所有子节点-1" class="headerlink" title="获取和遍历根节点所有子节点"></a>获取和遍历根节点所有子节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查找id为1000的节点"><a href="#查找id为1000的节点" class="headerlink" title="查找id为1000的节点"></a>查找id为1000的节点</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="显示查找内容"><a href="#显示查找内容" class="headerlink" title="显示查找内容"></a>显示查找内容</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="删除XML-Unity"><a href="#删除XML-Unity" class="headerlink" title="删除XML(Unity)"></a>删除XML(Unity)</h1><h2 id="遍历根节点所有子节点"><a href="#遍历根节点所有子节点" class="headerlink" title="遍历根节点所有子节点"></a>遍历根节点所有子节点</h2><h2 id="查找id是1000的节点"><a href="#查找id是1000的节点" class="headerlink" title="查找id是1000的节点"></a>查找id是1000的节点</h2><h2 id="删除属性和子节点"><a href="#删除属性和子节点" class="headerlink" title="删除属性和子节点"></a>删除属性和子节点</h2><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><div style="display:none">- 2018学习笔记- XML系列教程之一：XML教程.pdf</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP</title>
      <link href="/2018/04/19/Unity3D/26Unity_TCP/"/>
      <url>/2018/04/19/Unity3D/26Unity_TCP/</url>
      
        <content type="html"><![CDATA[<div style="display:none">- Word M3W3- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IOS</title>
      <link href="/2018/04/19/Unity3D/28Unity_IOS/"/>
      <url>/2018/04/19/Unity3D/28Unity_IOS/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP</title>
      <link href="/2018/04/19/Unity3D/25Unity_IP/"/>
      <url>/2018/04/19/Unity3D/25Unity_IP/</url>
      
        <content type="html"><![CDATA[<div style="display:none">- Word M3W3- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UDP</title>
      <link href="/2018/04/19/Unity3D/27Unity_UDP/"/>
      <url>/2018/04/19/Unity3D/27Unity_UDP/</url>
      
        <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航系统</title>
      <link href="/2018/04/16/Unity3D/15Unity_Navigation/"/>
      <url>/2018/04/16/Unity3D/15Unity_Navigation/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity的寻路系统"><a href="#Unity的寻路系统" class="headerlink" title="Unity的寻路系统"></a>Unity的寻路系统</h1><p>AStarPathFinding：</p><p>Navigation：unity自带的寻路系统；比较简单<br>AgentRadius：烘焙路径可行区域和非可行区域的间隔；<br>AgentHeight：烘焙路径时当高度小于这个值的地方，就是不可行区域；<br>Max Slope：最大可行区域的坡度；<br>Step Height：最大台阶高度；<br>Drop Height：下落高度；<br>Jump Distance：最大跳跃距离；</p><p>实现从低点到高点的跳跃：从cube3的位置到cube4的位置（如下图）：</p><h1 id="NavMeshAgent-寻路组件："><a href="#NavMeshAgent-寻路组件：" class="headerlink" title="NavMeshAgent   寻路组件："></a>NavMeshAgent   寻路组件：</h1><p>Base offset：组件的竖直方向的偏移量；</p><p>Speed：速度；<br>Agular Speed：角速度；<br>Acceleration：加速度（加速度是矢量，有大小有方向，在加速时是加速度，减速时是减速的加速度）；<br>StoppingDistance：距离目标点多远就停止（速度不能太快，加速度不能太小，否则跟目标点距离等于stoppingdistance时停不下来）</p><p>Radiu：寻路组件半径；<br>Height：寻路组件高度；<br>Quality：寻路精细度，速度越快对寻路精细度要求越高；<br>Priority：寻路权重（0-99，值越小优先级越高，优先级低的游戏寻路组件需要绕着他走）；</p><p>Auto traverse off mesh Link：是否支持off mesh link功能；<br>Auto repath ：自动重新规划路径;<br>Area Mask:区域覆盖，当前寻路组件没有覆盖的区域，即使有时可行区域，对当前这个组件来说也是不可行区域；</p><div style="display:none">- Word M2W4- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动画系统(Animation 和 Animator)</title>
      <link href="/2018/04/16/Unity3D/14Unity_Animation/"/>
      <url>/2018/04/16/Unity3D/14Unity_Animation/</url>
      
        <content type="html"><![CDATA[<h1 id="Animation：老版动画"><a href="#Animation：老版动画" class="headerlink" title="Animation：老版动画"></a>Animation：老版动画</h1><ol><li>   Unity对老版Animation动画支持越来越弱，推荐使用的是新版动画Animator；</li><li>   编辑Animation动画</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><p>   Animation组件：<br>Animation：这个是当前默认播放动画片段；<br>Animations：是Animation数组，可以放多个animation动画片段；<br>Play Auto：是否自动播放；Idle</p></li><li><p>   通过动画组件播放动画</p></li></ol><h1 id="Animator新动画系统"><a href="#Animator新动画系统" class="headerlink" title="Animator新动画系统"></a>Animator新动画系统</h1><div style="display:none">- Word M2W4- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UI基础知识</title>
      <link href="/2018/04/16/Unity3D/16Unity_UI/"/>
      <url>/2018/04/16/Unity3D/16Unity_UI/</url>
      
        <content type="html"><![CDATA[<h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><ul><li>UI：User Interface 用户界面</li><li>UE：User Experience 用户体验</li></ul><h1 id="常见的UI类型"><a href="#常见的UI类型" class="headerlink" title="常见的UI类型"></a>常见的UI类型</h1><h2 id="环抱式"><a href="#环抱式" class="headerlink" title="环抱式"></a>环抱式</h2><p><img src="/images/Unity3D/Unity_UI/huanbao.jpg" alt="环抱式" title="环抱式"></p><h2 id="弹框"><a href="#弹框" class="headerlink" title="弹框"></a>弹框</h2><p><img src="/images/Unity3D/Unity_UI/tankuang.png" alt="弹框" title="弹框"></p><h2 id="全屏覆盖"><a href="#全屏覆盖" class="headerlink" title="全屏覆盖"></a>全屏覆盖</h2><p><img src="/images/Unity3D/Unity_UI/quanping.jpg" alt="全屏覆盖" title="全屏覆盖"></p><h2 id="超全屏"><a href="#超全屏" class="headerlink" title="超全屏"></a>超全屏</h2><p><img src="/images/Unity3D/Unity_UI/chaoquanping.png" alt="超全屏" title="超全屏"></p><h2 id="3D"><a href="#3D" class="headerlink" title="3D"></a>3D</h2><p><img src="/images/Unity3D/Unity_UI/3dping.png" alt="3D" title="3D"></p><h1 id="常见设备的分辨率"><a href="#常见设备的分辨率" class="headerlink" title="常见设备的分辨率"></a>常见设备的分辨率</h1><h2 id="常见设备显示比例"><a href="#常见设备显示比例" class="headerlink" title="常见设备显示比例"></a>常见设备显示比例</h2><ul><li>4：3：iPad，安卓Pad</li><li>16：9：非全面屏的手机，PC的显示器</li><li>18：9：全面屏</li><li>异形屏：向标准分辨率靠近</li></ul><h2 id="配置常见设备分辨率"><a href="#配置常见设备分辨率" class="headerlink" title="配置常见设备分辨率"></a>配置常见设备分辨率</h2><p><img src="/images/Unity3D/Unity_UI/fenbianlv.png" alt="分辨率" title="分辨率"></p><h1 id="Unity界面的发展史"><a href="#Unity界面的发展史" class="headerlink" title="Unity界面的发展史"></a>Unity界面的发展史</h1><ul><li>Unity 图形用户界面  unity Graphical User Interface</li><li>Unity4.6版本之后引入的界面显示系统</li><li>Unity公司自己研发的一套界面显示系统</li></ul><h1 id="Unity的UI系统-OnGUI、NGUI、UGUI"><a href="#Unity的UI系统-OnGUI、NGUI、UGUI" class="headerlink" title="Unity的UI系统(OnGUI、NGUI、UGUI)"></a>Unity的UI系统(OnGUI、NGUI、UGUI)</h1><h2 id="OnGUI"><a href="#OnGUI" class="headerlink" title="OnGUI"></a>OnGUI</h2><ul><li>OnGUI：最早的UI系统，纯代码实现，写法类似Update</li><li>优点：出现很早，纯代码可控制</li><li>缺点：只能程序开发</li></ul><h2 id="NGUI"><a href="#NGUI" class="headerlink" title="NGUI"></a>NGUI</h2><ul><li>NGUI：Unity著名插件，可实现2D和3D的界面，出现在老项目</li><li>优点：功能完整，集成了动态效果</li><li>缺点：性能较弱，交互使用物理引擎实现，需要付费</li></ul><h2 id="UGUI：官方制作的UI系统，NGUI作者开发"><a href="#UGUI：官方制作的UI系统，NGUI作者开发" class="headerlink" title="UGUI：官方制作的UI系统，NGUI作者开发"></a>UGUI：官方制作的UI系统，NGUI作者开发</h2><ul><li>优点：性能优秀，功能较完整</li><li>缺点：功能需要再完善，动画需要配合DOTween</li></ul><h2 id="UGUI和OnGUI-NGUI的区别"><a href="#UGUI和OnGUI-NGUI的区别" class="headerlink" title="UGUI和OnGUI,NGUI的区别"></a>UGUI和OnGUI,NGUI的区别</h2><ol><li>uGUI的Canvas 有世界坐标和屏幕坐标</li><li>uGUI的Image可以使用material  </li><li>UGUI通过Mask来裁剪，而NGUI通过Panel的Clip </li><li>NGUI的渲染前后顺序是通过Widget的Depth，而UGUI渲染顺序根据Hierarchy的顺序，越下面渲染在顶层. </li><li>UGUI 不需要绑定Colliders，UI可以自动拦截事件</li><li>UGUI的Anchor是相对父对象，没有提供高级选项</li><li>UGUI没有Atlas一说，使用Sprite Packer </li><li>UGUI的Navigation在Scene中能可视化</li><li>UGUI的事件需要实现事件系统的接口，但写起来也算简单</li><li>NGUI还保留着图集，需要进行图集的维护。而UGUI没有图集的概念，可以充分利用资源，避免重复资源。</li><li>UGUI出现了锚点的概念，更方便屏幕自适应。 </li><li>NGUI支持图文混排，UGUI暂未发现支持此功能。 </li><li>UGUI没有 UIWrap 来循环 scrollview 内容。 </li><li>UGUI暂时没有Tween组件。</li></ol><div style="display:none">- Word M3W1- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中UI基础控件</title>
      <link href="/2018/04/16/Unity3D/17Unity_UI/"/>
      <url>/2018/04/16/Unity3D/17Unity_UI/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity中UI基础控件"><a href="#Unity中UI基础控件" class="headerlink" title="Unity中UI基础控件"></a>Unity中UI基础控件</h1><ul><li>Canvas 画布</li><li><a href="#Rect-Transform-%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2">Rect Transform 矩形变换</a></li><li><a href="#Text-%E6%96%87%E6%9C%AC">Text 文本</a></li><li><a href="#Image-%E5%9B%BE%E7%89%87">Image 图片</a></li><li><a href="#Raw-Image-%E5%8E%9F%E5%A7%8B%E5%9B%BE%E7%89%87">Raw Image 原始图片</a></li><li><a href="#Button-%E6%8C%89%E9%92%AE">Button 按钮</a></li><li><a href="#Toggle-%E5%BC%80%E5%85%B3"># Toggle 开关 </a></li><li><a href="#Slider-%E6%BB%91%E5%8A%A8%E6%9D%A1">Slider 滑动条</a></li><li><a href="#Scrollbar-%E6%BB%9A%E5%8A%A8%E6%9D%A1">Scrollbar 滚动条</a></li><li><a href="#Dropdown-%E4%B8%8B%E6%8B%89%E6%A1%86">Dropdown 下拉框</a></li><li><a href="#InputField-%E8%BE%93%E5%85%A5%E6%A1%86">InputField 输入框</a></li><li><a href="#Panel-%E9%9D%A2%E6%9D%BF">Panel 面板</a></li><li><a href="#Scroll-View-%E6%BB%91%E5%8A%A8%E8%A7%86%E5%9B%BE">Scroll View 滑动视图</a></li></ul><h1 id="Canvas-画布"><a href="#Canvas-画布" class="headerlink" title="Canvas 画布"></a>Canvas 画布</h1><ul><li>画布，绘制UI元素的载体，所有元素必须在Canvas之下。     </li><li>UI元素的绘制顺序依赖于<code>Hierarchy (层级面板)</code>中的顺序。</li><li><blockquote><p>参考<a href="https://docs.unity3d.com/cn/current/Manual/class-Canvas.html">https://docs.unity3d.com/cn/current/Manual/class-Canvas.html</a></p></blockquote></li></ul><h2 id="UI元素渲染顺序"><a href="#UI元素渲染顺序" class="headerlink" title="UI元素渲染顺序"></a>UI元素渲染顺序</h2><ul><li>在同一个Canvas下的UI对象会根据在Hierarchy窗口中从上到下的顺序进行渲染</li></ul><p><img src="/images/Unity3D/Unity_UI/renderOrder01.png" alt="渲染顺序" title="渲染顺序"></p><ul><li>以Hierarchy参考<ol><li>下方物体在上方物体前显示</li><li>子物体在父物体前显示</li><li>下方物体永远在前显示，无论上方的层次结构</li></ol></li></ul><h2 id="Render-Mode-渲染方式-三种"><a href="#Render-Mode-渲染方式-三种" class="headerlink" title="Render Mode 渲染方式(三种)"></a>Render Mode 渲染方式(三种)</h2><ul><li>Screen Space-Overlay 覆盖模式</li><li>Screen Space-Camera 摄像机模式</li><li>World Space 世界空间模式</li></ul><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left">Sort Order</td><td align="left">渲染顺序：在多个Canvas中，值越大越渲染到最上层。</td></tr><tr><td align="left">Receives Events</td><td align="left">此画布是否处理 UI 事件？</td></tr></tbody></table><h2 id="Screen-Space-Overlay-覆盖模式"><a href="#Screen-Space-Overlay-覆盖模式" class="headerlink" title="Screen Space-Overlay 覆盖模式"></a>Screen Space-Overlay 覆盖模式</h2><ul><li><code>Screen Space-Overlay</code> 覆盖模式：UI元素将绘制在其他元素之前，且绘制过程独立于场景元素和摄像机设置，画布尺寸由屏幕大小和分辨率决定。</li><li><code>Pixel Perfect</code> 完美像素：若勾选，则会锐化屏幕显示效果。</li><li><code>Sort Order</code> 渲染顺序：在多个Canvas中，值越大越渲染到最上层。</li></ul><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left">Pixel Perfect</td><td align="left">（仅限 Screen Space 模式）是否应该无锯齿精确渲染 UI？</td></tr></tbody></table><h2 id="Screen-Space-Camera-摄像机模式"><a href="#Screen-Space-Camera-摄像机模式" class="headerlink" title="Screen Space-Camera 摄像机模式"></a>Screen Space-Camera 摄像机模式</h2><ul><li><code>Screen Space-Camera</code> 摄像机模式：提供UICamera， Canvas对象被绘制在一个与摄像机固定距离的平面上，且绘制效果受摄像机参数的影响。</li><li><code>Render Camera</code> 渲染摄像机。</li><li><code>Plane Distance</code> 平面与摄像机的距离。</li><li><code>Sorting Layer</code> 排序层：通过<code>Edit--Project Settings</code>— <code>Tags and Layers</code>调整<code>Canvas</code>渲染顺序。</li></ul><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left">Render Camera</td><td align="left">（仅限 Screen Space - Camera 模式）应该将 UI 渲染到的摄像机</td></tr><tr><td align="left">Plane Distance</td><td align="left">（仅限 Screen Space - Camera 模式）UI 平面在摄像机前方的距离。</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ol><li>修改Canvas下Canvas组件<code>Render Mode</code>属性：<code>Screen Space-Camera</code> 摄像机模式</li><li>将相机拖给Canvas下Canvas组件Render Camera属性</li><li>将Cube位置调整到<code>Canvas</code>前</li><li>调整<code>Canvas</code>中<code>Plane Distance</code>，控制Canvas到渲染相机的距离<br><img src="/images/Unity3D/Unity_UI/canvas_camera01.png" alt="调整Plane Distance" title="调整Plane Distance"></li><li><code>Plane Distance</code>：Canvas到相机的距离<br> 当SortingLayer和Order In Layer相同时，距离相机越近，显示越靠前（满足相机渲染关系）</li><li>Sorting Layer：排序层（多层Canvas中间加粒子）<br> 建立排序层<br> <img src="/images/Unity3D/Unity_UI/canvas_camera02.png" alt="建立排序层" title="建立排序层"><br> 建立顺序<br> <img src="/images/Unity3D/Unity_UI/canvas_camera03.png" alt="建立顺序" title="建立顺序"><br> 修改Sorting Layer<br> 特效的调整（粒子）<br> 粒子中，Render选项，调整Sorting Layer值为粒子层次值</li><li>Order in layer<br> 先通过Sorting Layer，再根据排序层，调整顺序（越大越靠前）</li><li>排序关系<br> 排序层一致时，Order in layer越大越靠前<br> Sorting Layer：配置的排序层顺序，越靠下，显示越靠前</li><li>双相机叠加<ol><li>建立Camera</li><li>将UI相机拖给Canvas</li><li>将UI的相机设置为使用深度值填充，UI相机的深度要高于主相机</li><li>将主相机不渲染UI元素，将UI相机只渲染UI元素（Culling Mask）</li></ol></li></ol><h2 id="World-Space-世界空间模式"><a href="#World-Space-世界空间模式" class="headerlink" title="World Space 世界空间模式"></a>World Space 世界空间模式</h2><ul><li><code>World Space</code> 世界空间模式：画布渲染于世界空间，与场 景中其他3D物体性质相同。</li></ul><h1 id="Canvas-Scaler-Canvas缩放"><a href="#Canvas-Scaler-Canvas缩放" class="headerlink" title="Canvas Scaler(Canvas缩放)"></a>Canvas Scaler(Canvas缩放)</h1><blockquote><p>参考<a href="https://docs.unity3d.com/cn/current/Manual/script-CanvasScaler.html">https://docs.unity3d.com/cn/current/Manual/script-CanvasScaler.html</a></p></blockquote><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left"><strong>UI Scale Mode</strong></td><td align="left">确定画布中的 UI 元素的缩放方式。</td></tr><tr><td align="left">- Constant Pixel Size</td><td align="left">无论屏幕大小如何，UI 元素都保持相同的像素大小。</td></tr><tr><td align="left">- Scale With Screen Size</td><td align="left">屏幕越大，UI 元素越大。</td></tr><tr><td align="left">- Constant Physical Size</td><td align="left">无论屏幕大小和分辨率如何，UI 元素都保持相同的物理大小。</td></tr></tbody></table><h2 id="Ui-Scale-Mode应用场景"><a href="#Ui-Scale-Mode应用场景" class="headerlink" title="Ui Scale Mode应用场景"></a>Ui Scale Mode应用场景</h2><ul><li><code>Ui Scale Mode</code>：UI 缩放模式&#x2F;拉伸类型</li><li><code>Constant Pixel Size</code>：像素大小始终不变，即一个100<em>100的图片在任何的分辨率下都占用100</em>100的像素。<br>一般PC上会使用这种方式，因为PC端分辨率差异并不大。</li></ul><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left"><strong>Scale Factor</strong></td><td align="left">按此系数缩放画布中的所有 UI 元素。</td></tr><tr><td align="left"><strong>Reference Pixels Per Unit</strong></td><td align="left">如果精灵具有此“Pixels Per Unit”设置，则精灵中的每个像素将覆盖 UI 中的一个单位。</td></tr></tbody></table><ul><li><code>Scale With Screen Size</code>：不关心图片的实际像素大小，而只关心Width及Height值，这个值如果是1000，那么100高度的图片在任何分辨率下都只占用屏幕1&#x2F;10的尺寸。<br>  一般移动端会使用这种方式，因为移动端分辨率差异较大。</li></ul><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>Reference Resolution</strong></td><td align="left">UI 布局设计的目标分辨率。如果屏幕分辨率较大，则 UI 会放大，如果较小，则 UI 会缩小。</td></tr><tr><td align="left"><strong>Screen Match Mode</strong></td><td align="left">在当前分辨率的宽高比不适应参考分辨率时，用于缩放画布区域的模式。</td></tr><tr><td align="left">- Match Width or Height</td><td align="left">以宽度、高度或二者的某种平均值作为参考来缩放画布区域。</td></tr><tr><td align="left">- Expand</td><td align="left">水平或垂直扩展画布区域，使画布不会小于参考。</td></tr><tr><td align="left">- Shrink</td><td align="left">水平或垂直裁剪画布区域，使画布不会大于参考。</td></tr><tr><td align="left"><strong>Match</strong></td><td align="left">确定是否以宽度、高度或二者的某种平均值作为参考进行缩放。</td></tr><tr><td align="left"><strong>Reference Pixels Per Unit</strong></td><td align="left">如果精灵具有此“Pixels Per Unit”设置，则精灵中的每个像素将覆盖 UI 中的一个单位。</td></tr></tbody></table><ul><li><code>Constant Physical Size</code>：根据物理单位来进行缩放。根据英寸进行拉伸计算。</li></ul><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>Physical Unit</strong></td><td align="left">用于指定位置和大小的物理单位。</td></tr><tr><td align="left"><strong>Fallback Screen DPI</strong></td><td align="left">在屏幕 DPI 未知时采用的 DPI。</td></tr><tr><td align="left"><strong>Default Sprite DPI</strong></td><td align="left">用于精灵的每英寸像素，使其“Pixels Per Unit”设置与“Reference Pixels Per Unit”设置匹配。</td></tr><tr><td align="left"><strong>Reference Pixels Per Unit</strong></td><td align="left">如果精灵具有此“Pixels Per Unit”设置，则其 DPI 将与“Default Sprite DPI”设置匹配。</td></tr></tbody></table><h2 id="Graphic-Raycaster"><a href="#Graphic-Raycaster" class="headerlink" title="Graphic Raycaster"></a>Graphic Raycaster</h2><ul><li>场景中的射线调整，用于交互事件的配置。</li></ul><h2 id="EventSystem"><a href="#EventSystem" class="headerlink" title="EventSystem"></a>EventSystem</h2><ul><li>事件检测系统，如果要发生点击事件，必须在层级试图添加该对象</li></ul><h1 id="Rect-Transform-矩形变换"><a href="#Rect-Transform-矩形变换" class="headerlink" title="Rect Transform 矩形变换"></a>Rect Transform 矩形变换</h1><ul><li>简介<br>派生自Transform，在UGUI控件上替代原有变换组件，表 示一个可容纳UI元素的矩形。<blockquote><p>参考<a href="https://docs.unity3d.com/cn/current/Manual/class-RectTransform.html">https://docs.unity3d.com/cn/current/Manual/class-RectTransform.html</a></p></blockquote></li></ul><h2 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left"><strong>Pos (X, Y, Z)</strong></td><td align="left">矩形轴心点相对于锚点的位置。轴心点是矩形旋转所围绕的位置。</td></tr><tr><td align="left"><strong>Width&#x2F;Height</strong></td><td align="left">矩形的宽度和高度。</td></tr><tr><td align="left"><strong>Left, Top, Right, Bottom</strong></td><td align="left">矩形边缘相对于锚点的位置。可视为由锚点定义的矩形内的填充。当锚点分离时（见下文）将取代 <em>Pos</em> 和 <em>Width&#x2F;Height</em> 显示。要访问这些选项，请单击 RectTransform 组件左上方的 Anchor Presets 方框。</td></tr><tr><td align="left"><strong>Anchors</strong></td><td align="left">矩形左下角和右上角的锚点。</td></tr><tr><td align="left">- Min</td><td align="left">矩形左下角的锚点，定义为父矩形大小的一个比例。0,0 相当于锚定到父项的左下角，而 1,1 相当于锚定到父项的右上角。</td></tr><tr><td align="left">- Max</td><td align="left">矩形右上角的锚点，定义为父矩形大小的一个比例。0,0 相当于锚定到父项的左下角，而 1,1 相当于锚定到父项的右上角。</td></tr><tr><td align="left"><strong>Pivot</strong></td><td align="left">矩形旋转围绕的轴心点的位置，定义为矩形本身大小的一个比例。0,0 相当于左下角，而 1,1 相当于右上角。</td></tr><tr><td align="left"><strong>Rotation</strong></td><td align="left">对象围绕其轴心点沿 X、Y 和 Z 轴的旋转角度（以度为单位）。</td></tr><tr><td align="left"><strong>Scale</strong></td><td align="left">在 X、Y 和 Z 维度中应用于对象的缩放因子。</td></tr><tr><td align="left"><strong>Blueprint Mode</strong></td><td align="left">编辑 RectTransform，就好像它们没有旋转和缩放一样。这也会启用贴靠。</td></tr><tr><td align="left"><strong>Raw Edit Mode</strong></td><td align="left">启用此属性后，编辑轴心和锚点值不会反向调整矩形的位置和大小来使矩形保持在同一个位置。</td></tr></tbody></table><h1 id="Text-文本"><a href="#Text-文本" class="headerlink" title="Text 文本"></a>Text 文本</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Text.html">https://docs.unity3d.com/cn/current/Manual/script-Text.html</a></p></blockquote><h2 id="富文本语法"><a href="#富文本语法" class="headerlink" title="富文本语法"></a>富文本语法</h2><p>Unity中富文本语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;b&gt;粗体&lt;/b&gt;</span><br><span class="line">&lt;i&gt;斜体&lt;/i&gt;</span><br><span class="line">&lt;size=14&gt;字号&lt;/size&gt;</span><br><span class="line">&lt;color=green&gt;颜色&lt;/color&gt;</span><br></pre></td></tr></table></figure><h2 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="left"><strong>属性：</strong></th><th align="left"><strong>功能：</strong></th></tr></thead><tbody><tr><td align="left"><strong>Character</strong></td><td align="left">字符</td></tr><tr><td align="left">Font</td><td align="left">用于显示文本的<a href="https://docs.unity3d.com/cn/current/Manual/class-Font.html">字体</a>。</td></tr><tr><td align="left">Font Style</td><td align="left">应用于文本的样式。选项包括 <em>Normal</em>、<em>Bold</em>、<em>Italic</em> 和 <em>Bold And Italic</em>。</td></tr><tr><td align="left">Font Size*</td><td align="left">显示的文本的大小。</td></tr><tr><td align="left">Line Spacing*</td><td align="left">文本行之间的垂直间距。</td></tr><tr><td align="left">Rich Text</td><td align="left">文本中的标记元素是否应解释为<a href="https://docs.unity3d.com/cn/current/Manual/StyledText.html">富文本</a>样式？</td></tr><tr><td align="left"><strong>Paragraph</strong></td><td align="left">段落</td></tr><tr><td align="left">Alignment</td><td align="left">文本的水平和垂直对齐方式。</td></tr><tr><td align="left">Align by Geometry</td><td align="left">使用字形几何形状的范围（而不是字形指标）执行水平对齐。</td></tr><tr><td align="left">Horizontal Overflow</td><td align="left">用于处理文本太宽而无法放入矩形内的情况的方法。提供的选项为 <em>Wrap</em> 和 <em>Overflow</em>。</td></tr><tr><td align="left">Vertical Overflow</td><td align="left">用于处理换行文本太高而无法放入矩形内的情况的方法。提供的选项为 <em>Truncate</em> 和 <em>Overflow</em>。</td></tr><tr><td align="left">Best Fit*</td><td align="left">Unity 应该忽略大小属性并尝试直接将文本放入控件的矩形？</td></tr><tr><td align="left"></td><td align="left"></td></tr><tr><td align="left"><strong>Color</strong></td><td align="left">用于渲染文本的颜色。</td></tr><tr><td align="left"><strong>Material</strong></td><td align="left">用于渲染文本的<a href="https://docs.unity3d.com/cn/current/Manual/class-Material.html">材质</a>。</td></tr></tbody></table><h1 id="Image-图片"><a href="#Image-图片" class="headerlink" title="Image 图片"></a>Image 图片</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Image.html">https://docs.unity3d.com/cn/current/Manual/script-Image.html</a></p></blockquote><h2 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="left">属性：</th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left"><strong>Source Image</strong></td><td align="left">表示要显示的图像的纹理（必须作为<a href="https://docs.unity3d.com/cn/current/Manual/class-TextureImporter.html">精灵</a>导入）。</td></tr><tr><td align="left"><strong>Color</strong></td><td align="left">要应用于图像的颜色。</td></tr><tr><td align="left"><strong>Material</strong></td><td align="left">用于渲染图像的<a href="https://docs.unity3d.com/cn/current/Manual/class-Material.html">材质</a>。</td></tr><tr><td align="left"><strong>Raycast Target</strong></td><td align="left">如果希望 Unity 将图像视为射线投射的目标，请启用 <strong>Raycast Target</strong>。</td></tr><tr><td align="left"><strong>Preserve Aspect</strong></td><td align="left">确保图像保持其现有尺寸。</td></tr><tr><td align="left"><strong>Set Native Size</strong></td><td align="left">将图像框的尺寸设置为纹理的原始像素大小。</td></tr></tbody></table><table><thead><tr><th>属性：</th><th>功能：</th></tr></thead><tbody><tr><td><strong>Image Type</strong></td><td>贴图类型</td></tr><tr><td><strong>Simple</strong></td><td>简单</td></tr><tr><td>- Preserve Aspect</td><td>保持贴图原始比例</td></tr><tr><td>- Set Native Size</td><td>将贴图设置为原始尺寸</td></tr><tr><td><strong>Sliced</strong></td><td>切割</td></tr><tr><td>- Fill Center</td><td>填充中部区域，如果取消中部区域为透明</td></tr><tr><td><strong>Tiled</strong></td><td>平铺</td></tr><tr><td></td><td>保持图片原始尺寸，从左下角重复多次填充空白</td></tr></tbody></table><h1 id="Raw-Image-原始图片"><a href="#Raw-Image-原始图片" class="headerlink" title="Raw Image 原始图片"></a>Raw Image 原始图片</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-RawImage.html">https://docs.unity3d.com/cn/current/Manual/script-RawImage.html</a></p></blockquote><h2 id="属性-4"><a href="#属性-4" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th>属性：</th><th>功能：</th></tr></thead><tbody><tr><td>UV Rectangle</td><td>图像在控件矩形内的偏移和大小，以标准化坐标（范围 0.0 到 1.0）表示。图像边缘将进行拉伸来填充 UV 矩形周围的空间。</td></tr></tbody></table><ul><li>P.S. 使图片的一部分显示在Raw Image组件里。X和Y属性指定图片左下角的位置，w和h属性指定图片右上角的位置</li></ul><table><thead><tr><th>属性：</th><th>功能：</th></tr></thead><tbody><tr><td>UV Rectangle</td><td>图像在控件矩形内的偏移和大小，以标准化坐标（范围 0.0 到 1.0）表示。图像边缘将进行拉伸来填充 UV 矩形周围的空间。</td></tr></tbody></table><h2 id="实例-使用Raw-Image制作小地图"><a href="#实例-使用Raw-Image制作小地图" class="headerlink" title="实例-使用Raw Image制作小地图"></a>实例-使用Raw Image制作小地图</h2><p>使用Raw Image制作小地图</p><ul><li>添加<code>Mask</code> 遮罩组件<table><thead><tr><th>属性：</th><th>功能：</th></tr></thead><tbody><tr><td>Mask</td><td>遮罩</td></tr><tr><td>Show   Mask     Graphic</td><td>是否显示父级图片</td></tr></tbody></table></li></ul><ol><li>制作一个小地图</li><li>将相机放置在地图的正上方，可以设置Culling  Mask（遮挡剔除）</li><li>创建一张Render Texture，将Target Texture属性指向这张纹理</li><li>创建UI面板，创建Raw Iamge，将Raw Image下的Texture属性指向小地图纹理即可</li><li>如果要制作圆形的小地图，可以为Raw Image添加Iamge为父物体，为Image添加Mask（遮罩），然后为Image选择图片就可以实现</li></ol><h1 id="Button-按钮"><a href="#Button-按钮" class="headerlink" title="Button 按钮"></a>Button 按钮</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Button.html">https://docs.unity3d.com/cn/current/Manual/script-Button.html</a></p></blockquote><h2 id="属性-5"><a href="#属性-5" class="headerlink" title="属性"></a>属性</h2><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>Interactable</strong></td><td align="left">如果想要此按钮接受输入，请启用 <strong>Interactable</strong>。请参阅关于 <a href="https://docs.unity3d.com/cn/current/Manual/script-Selectable.html">Interactable</a> 的 API 文档以了解更多详细信息。</td></tr><tr><td align="left"><strong>Transition</strong></td><td align="left">确定控件以何种方式对用户操作进行可视化响应的属性。请参阅<a href="https://docs.unity3d.com/cn/current/Manual/script-SelectableTransition.html">过渡选项</a>。</td></tr><tr><td align="left"><strong>Navigation</strong></td><td align="left">确定控件顺序的属性。请参阅<a href="https://docs.unity3d.com/cn/current/Manual/script-SelectableNavigation.html">导航选项</a>。</td></tr></tbody></table><h2 id="Transition"><a href="#Transition" class="headerlink" title="Transition"></a>Transition</h2><table><thead><tr><th align="left">*<strong>过渡选项：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>None</strong></td><td align="left">此选项用于使按钮完全没有状态效果。</td></tr><tr><td align="left"><strong>Color Tint</strong></td><td align="left">根据按钮所处的状态更改按钮的颜色。可为每个单独的状态选择颜色。还可在不同状态之间设置 Fade Duration 属性。数字越大，颜色之间的淡入淡出越慢。</td></tr><tr><td align="left"><strong>Sprite Swap</strong></td><td align="left">允许根据按钮当前的状态显示不同的精灵，并可自定义精灵。</td></tr><tr><td align="left"><strong>动画 (Animation)</strong></td><td align="left">允许根据按钮的状态产生动画，必须存在动画器组件才能使用动画过渡。确保禁用根运动非常重要。要创建动画控制器，请单击 Generate Animation（或自行创建），并确保已将动画控制器添加到按钮的动画器组件。</td></tr></tbody></table><h3 id="Color-Tint"><a href="#Color-Tint" class="headerlink" title="Color Tint"></a>Color Tint</h3><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>Target Graphic</strong></td><td align="left">用于交互组件的图形。</td></tr><tr><td align="left"><strong>Normal Color</strong></td><td align="left">控件的正常颜色</td></tr><tr><td align="left"><strong>Highlighted Color</strong></td><td align="left">控件突出显示时的颜色</td></tr><tr><td align="left"><strong>Pressed Color</strong></td><td align="left">控件按下时的颜色</td></tr><tr><td align="left"><strong>Disabled Color</strong></td><td align="left">控件禁用时的颜色</td></tr><tr><td align="left"><strong>Color Multiplier</strong></td><td align="left">这会将每个过渡的着色颜色乘以其值。由此可以创建大于 1 的颜色，从而使基色小于白色（或小于完整 Alpha）的图形元素上的颜色（或 Alpha 通道）变亮。</td></tr><tr><td align="left"><strong>Fade Duration</strong></td><td align="left">从一个状态淡入淡出到另一个状态所需的时间（以秒为单位）</td></tr></tbody></table><h2 id="Sprite-Swap"><a href="#Sprite-Swap" class="headerlink" title="Sprite Swap"></a>Sprite Swap</h2><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>Target Graphic</strong></td><td align="left">要使用的正常精灵</td></tr><tr><td align="left"><strong>Highlighted Sprite</strong></td><td align="left">控件突出显示时要使用的精灵</td></tr><tr><td align="left"><strong>Pressed Sprite</strong></td><td align="left">控件按下时要使用的精灵</td></tr><tr><td align="left"><strong>Disabled Sprite</strong></td><td align="left">控件禁用时要使用的精灵</td></tr></tbody></table><h2 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h2><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>Normal Trigger</strong></td><td align="left">要使用的正常动画触发器</td></tr><tr><td align="left"><strong>Highlighted Trigger</strong></td><td align="left">控件突出显示时要使用的触发器</td></tr><tr><td align="left"><strong>Pressed Trigger</strong></td><td align="left">控件按下时要使用的触发器</td></tr><tr><td align="left"><strong>Disabled Trigger</strong></td><td align="left">控件禁用时要使用的触发器</td></tr></tbody></table><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><table><thead><tr><th align="left">*<strong>属性：*</strong></th><th align="left">*<strong>功能：*</strong></th></tr></thead><tbody><tr><td align="left"><strong>On Click</strong></td><td align="left">用户单击按钮再松开时 Unity 调用的 <a href="https://docs.unity3d.com/cn/current/Manual/UnityEvents.html">UnityEvent</a>。</td></tr></tbody></table><h2 id="制作按钮"><a href="#制作按钮" class="headerlink" title="制作按钮"></a>制作按钮</h2><ul><li>使用Image或Text制作Button按钮</li></ul><h1 id="Toggle-开关"><a href="#Toggle-开关" class="headerlink" title="Toggle 开关"></a>Toggle 开关</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Toggle.html">https://docs.unity3d.com/cn/current/Manual/script-Toggle.html</a><br>属性</p></blockquote><pre><code>  Is On                       复选框的选中状态  Toggle Transition  状态改变时,是否启动过渡效果  Graphic                  切换的背景图片  Group                     单选组</code></pre><h1 id="Slider-滑动条"><a href="#Slider-滑动条" class="headerlink" title="Slider 滑动条"></a>Slider 滑动条</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Slider.html">https://docs.unity3d.com/cn/current/Manual/script-Slider.html</a></p></blockquote><h2 id="属性-6"><a href="#属性-6" class="headerlink" title="属性"></a>属性</h2><pre><code>  Fill Rect                         填充矩形区域  Handle Rect                 手柄矩形区域  Direction                      手柄方向  Min / Max Value          最小/最大值  Whole Numbers          整数数值  Value                             数值  </code></pre><h1 id="Scrollbar-滚动条"><a href="#Scrollbar-滚动条" class="headerlink" title="Scrollbar 滚动条"></a>Scrollbar 滚动条</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Slider.html">https://docs.unity3d.com/cn/current/Manual/script-Slider.html</a></p></blockquote><h2 id="属性-7"><a href="#属性-7" class="headerlink" title="属性"></a>属性</h2><pre><code>Size                              手柄大小Number of Steps         从开始滑动到末尾的步骤</code></pre><h1 id="Dropdown-下拉框"><a href="#Dropdown-下拉框" class="headerlink" title="Dropdown 下拉框"></a>Dropdown 下拉框</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Slider.html">https://docs.unity3d.com/cn/current/Manual/script-Slider.html</a></p></blockquote><h2 id="属性-8"><a href="#属性-8" class="headerlink" title="属性"></a>属性</h2><pre><code>   Template                          模板   Caption  Text                 标题文本   Caption   Image            标题图片   Item      Text                  下拉列表中的文本   Item       Image             下拉列表中的图片   Value                             下拉列表选项对应的值   Options                         下拉列表中的文字和图片</code></pre><h1 id="InputField-输入框"><a href="#InputField-输入框" class="headerlink" title="InputField 输入框"></a>InputField 输入框</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Slider.html">https://docs.unity3d.com/cn/current/Manual/script-Slider.html</a></p></blockquote><h2 id="属性-9"><a href="#属性-9" class="headerlink" title="属性"></a>属性</h2><p>Character Limit 字符数量限制<br>      Content Type 内容类型<br>            Standard 标准                          Autocorrected 自动验证<br>            Integer Number 数字              Decimal Number 小数<br>            Alphanumeric 字母数字         Name 姓名<br>            Email Address 邮件地址         Password 密码<br>            Pin 仅输入整数，用*隐藏字符<br>            Custom 自定义</p><h1 id="Panel-面板"><a href="#Panel-面板" class="headerlink" title="Panel 面板"></a>Panel 面板</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Slider.html">https://docs.unity3d.com/cn/current/Manual/script-Slider.html</a></p></blockquote><p>实质就是一张透明度为100的Image</p><h1 id="Scroll-View-滑动视图"><a href="#Scroll-View-滑动视图" class="headerlink" title="Scroll View 滑动视图"></a>Scroll View 滑动视图</h1><blockquote><p><a href="https://docs.unity3d.com/cn/current/Manual/script-Slider.html">https://docs.unity3d.com/cn/current/Manual/script-Slider.html</a></p></blockquote><h2 id="属性-10"><a href="#属性-10" class="headerlink" title="属性"></a>属性</h2><pre><code>ViewPort Content         用来存放内容</code></pre><p>   ScrollBar Horizontal     水平的滚轮<br>   ScrollBar Vertical          垂直的滚轮<br>   Visiblity                        层级显示<br>   Spacing                        间隔</p><div style="display:none">- Word M3W1- [Unity知识点详解-UI渲染排序总结](https://blog.csdn.net/huoyixian/article/details/106078159)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UI的事件交互</title>
      <link href="/2018/04/16/Unity3D/18Unity_UI/"/>
      <url>/2018/04/16/Unity3D/18Unity_UI/</url>
      
        <content type="html"><![CDATA[<div style="display:none">- Word M3W1- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>射线</title>
      <link href="/2018/04/14/Unity3D/13Unity_Ray/"/>
      <url>/2018/04/14/Unity3D/13Unity_Ray/</url>
      
        <content type="html"><![CDATA[<h1 id="LineRenderer-划线组件"><a href="#LineRenderer-划线组件" class="headerlink" title="LineRenderer(划线组件)"></a>LineRenderer(划线组件)</h1><p>Material:划线的材质；<br>Positions：多个点，划线的点集；<br>Use World Space：是否使用世界坐标系；<br>Loop：是否循环，是指第一个点和最后一个点是否形成闭环；<br>Width：划线的宽度，通过曲线来控制；</p><h1 id="一条射线碰撞到多个碰撞体"><a href="#一条射线碰撞到多个碰撞体" class="headerlink" title="一条射线碰撞到多个碰撞体"></a>一条射线碰撞到多个碰撞体</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Ray ray1 = <span class="keyword">new</span> Ray(Vector3.zero, Vector3.forward);</span><br><span class="line"><span class="comment">//同理一条射线能触碰多个碰撞体，并返回碰撞信息数组﹔如果没有磁撞到碰撞体，数组长度为0</span></span><br><span class="line">RaycastHit[] hitinfos = Physics.RaycastAll(ray1,<span class="number">1000</span>,(<span class="number">1</span> &lt;&lt;LayerMask.NameToLayer(<span class="string">&quot;UI&quot;</span>)) + (<span class="number">1</span> &lt;&lt; LayerMask.NameToLayer(<span class="string">&quot;Cube&quot;</span>)));</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; hitinfos.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(hitinfos[i].transform.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="延迟相关函数"><a href="#延迟相关函数" class="headerlink" title="延迟相关函数"></a>延迟相关函数</h1><h2 id="延迟函数"><a href="#延迟函数" class="headerlink" title="延迟函数"></a>延迟函数</h2><ul><li>延迟函数<code>Destroy(object, float time);</code> </li><li>time时间之后销毁object类型；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="延迟执行函数"><a href="#延迟执行函数" class="headerlink" title="延迟执行函数"></a>延迟执行函数</h2><ul><li>延迟执行函数<code>Invoke()</code> </li><li>通过方法名延迟调用对应函数；</li><li>注意：<ol><li>当此脚本或者当前脚本所在的游戏物体失活，延迟函数依然会执行；</li><li>但是当前脚本或者游戏物体被销毁，延迟函数就不会执行；</li></ol></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestInvoke</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    transform.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;TestInvoke&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="取消延迟函数"><a href="#取消延迟函数" class="headerlink" title="取消延迟函数"></a>取消延迟函数</h2><ul><li>取消延迟函数<code>CanceInvoke();</code> </li><li>如果不传参数，那么就会取消当前代码内的所有延迟函数；</li><li>如果传参数，就是取消对应函数延迟调用；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.D))</span><br><span class="line">&#123;</span><br><span class="line">    CancelInvoke(<span class="string">&quot;TestInvoke&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="延迟重复调用"><a href="#延迟重复调用" class="headerlink" title="延迟重复调用"></a>延迟重复调用</h2><ul><li>延迟重复调用 <code>InvokeRepeating(string methodName, float time, float repeatRate);</code></li><li>Time时间之后调用methodName方法，每隔repeatRate秒之后在调用一次methodName函数；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InvokeRepeating(<span class="string">&quot;TestInvoke&quot;</span>, <span class="number">2</span> , <span class="number">1</span> );</span><br></pre></td></tr></table></figure><h1 id="异步加载："><a href="#异步加载：" class="headerlink" title="异步加载："></a>异步加载：</h1><p>不会引起代码阻塞；</p><h1 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h1><p>协程：协程不是多线程，是假的“多线程”；</p><p>应用场景：1.WWW加载网络数据；2.异步加载资源、场景；</p><h1 id="Unity的特殊文件夹"><a href="#Unity的特殊文件夹" class="headerlink" title="Unity的特殊文件夹"></a>Unity的特殊文件夹</h1><div style="display:none">- Word M2W3- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相机</title>
      <link href="/2018/04/13/Unity3D/12Unity_Camera/"/>
      <url>/2018/04/13/Unity3D/12Unity_Camera/</url>
      
        <content type="html"><![CDATA[<h1 id="在线文档"><a href="#在线文档" class="headerlink" title="在线文档"></a>在线文档</h1><p><a href="https://docs.unity.cn/cn/current/Manual/class-Camera.html">https://docs.unity.cn/cn/current/Manual/class-Camera.html</a></p><h1 id="Camera-component-摄像机组件"><a href="#Camera-component-摄像机组件" class="headerlink" title="Camera component(摄像机组件)"></a>Camera component(摄像机组件)</h1><table><thead><tr><th align="left">属性：</th><th align="left"></th><th align="left">功能：</th></tr></thead><tbody><tr><td align="left">Clear Flags</td><td align="left">Skybox</td><td align="left">天空盒</td></tr><tr><td align="left"></td><td align="left">Solid Color</td><td align="left">填充颜色，当有空白处，填充背景颜色</td></tr><tr><td align="left"></td><td align="left">Depth Only</td><td align="left">仅考虑深度；只渲染我需要渲染的层，而且不受其他不渲染层遮挡影响</td></tr><tr><td align="left"></td><td align="left">Don’t Clear</td><td align="left">不清除上一帧留下的渲染数据，类似残影效果</td></tr><tr><td align="left">Culling Mask</td><td align="left"></td><td align="left">裁剪层；这里面控制当前摄像机会渲染哪些层的游戏物体，是通过二进制的形式去控制的</td></tr><tr><td align="left">Projection</td><td align="left">Perspective</td><td align="left">透视摄像机；一般渲染3D场景或者说是3D摄像机，能渲染出z轴值变化效果</td></tr><tr><td align="left"></td><td align="left">Orthographic</td><td align="left">正交摄像机，一般渲染2D场景或者2D游戏，游戏物体在z轴运动效果不能显示</td></tr><tr><td align="left">Size&#x2F;Field of view</td><td align="left"></td><td align="left">摄像机渲染范围大小</td></tr><tr><td align="left">Clipping Planes：Near&#x2F;far</td><td align="left"></td><td align="left">渲染最近&#x2F;最远距离；所需要渲染的游戏物体必须在这个范围内，否则不会被渲染；</td></tr><tr><td align="left">Viewport Rect：</td><td align="left">xy：</td><td align="left">是以屏幕左下角为起始点，按比例来计算当前摄像机渲染画面的位置；</td></tr><tr><td align="left"></td><td align="left">WH：</td><td align="left">当前摄像机渲染的画面在整个屏幕中大小；</td></tr><tr><td align="left">Depth：</td><td align="left"></td><td align="left">值越大越后渲染，后渲染的画面覆盖前面渲染的画面；所以值越大，显示越靠前；</td></tr><tr><td align="left">Target</td><td align="left">RenderTexturer</td><td align="left">渲染的画面</td></tr></tbody></table><h1 id="创建-RenderTexture"><a href="#创建-RenderTexture" class="headerlink" title="创建 RenderTexture"></a>创建 RenderTexture</h1><p>创建一个新的摄像机，作为渲染当前人物渲染摄像机，当给摄像机Target Texture赋值Rendertexture时，这个摄像机的Depth就会失效，不会跟其他摄像机进行对比渲染到主屏幕；将当前摄像机拍摄到的内容显示到RenderTexture上</p><div style="display:none">- Word M2W3- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>声音系统</title>
      <link href="/2018/04/12/Unity3D/11Unity_Audio/"/>
      <url>/2018/04/12/Unity3D/11Unity_Audio/</url>
      
        <content type="html"><![CDATA[<h1 id="AudioSource"><a href="#AudioSource" class="headerlink" title="AudioSource"></a>AudioSource</h1><p>AudioSource：播放声音的组件，音源<br>Mute：静音<br>Play On Awake：自动播放；<br>Loop：循环；<br>Priority：优先级；<br>Volume：音量大小；<br>Pitch：音调高低；</p><h1 id="AudioListener"><a href="#AudioListener" class="headerlink" title="AudioListener"></a>AudioListener</h1><p>AudioListener：监听声音；一般放摄像机上，相当于是耳朵<br>重要：一个场景内只能有一个这个组件；</p><h1 id="AudioClip"><a href="#AudioClip" class="headerlink" title="AudioClip"></a>AudioClip</h1><p>AudioClip：<br>Unity支持的音频格式：<br>.aiff:适用于较短声音片段；<br>.wav: 适用于较短声音片段；<br>.mp3、OGG:适合较长的音乐片段；</p><pre><code>Force to mono:强制将多声道音频转换成单声道音频，占用大小会缩小；勾选Normalize之后会对声音有优化；</code></pre><p>Load In Background：在后台加载声音；<br>Load Type：Decompress On Load：以不压缩的形式存在内存，用的时候方便，但是占用内存高；<br>Compress in memory:以压缩的形式存在内存，<br>Streaming：以流的形式存在内存，使用时现解码；<br>Preload Audio Data：预加载音频资源；如果勾选进入场景就会马上加载；如果不勾选，第一次使用音频时才会加载进来；</p><p>Compression Format：PCM：音频以最高质量进行存储；<br>  Vorbis：相对来说压缩的更小；根据质量控制Quality选择；<br>  ADPCM：脚步声、武器碰撞的声音；</p><div style="display:none">- Word M2W2- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity中的3D数学</title>
      <link href="/2018/04/11/Unity3D/10Unity_Math/"/>
      <url>/2018/04/11/Unity3D/10Unity_Math/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//角度转换成弧度</span></span><br><span class="line"><span class="built_in">float</span> x= Mathf.Deg2Rad*<span class="number">180</span>;</span><br><span class="line"><span class="comment">//弧度转换成角度</span></span><br><span class="line"><span class="built_in">float</span> y = Mathf.Rad2Deg*<span class="number">3.14f</span>;</span><br><span class="line">Debug. Log(<span class="string">&quot;x:&quot;</span>+ x+<span class="string">&quot;, y:&quot;</span>+y);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三角函数曲线"><a href="#三角函数曲线" class="headerlink" title="三角函数曲线"></a>三角函数曲线</h2><h1 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h1><ul><li>Unity所采用的左手坐标系</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Vector3.forward 0，0，1定值</span></span><br><span class="line"><span class="comment">//transform.forward这个值不固定，本地坐标正方向所在世界坐标系中的方向</span></span><br><span class="line">Vector3 v = cube.transform.forward;</span><br><span class="line">Debug. Log(<span class="string">&quot;V:&quot;</span> + v);</span><br><span class="line">transform. Translate(Vector3.forward,Space. Self);</span><br><span class="line">transform. Translate(transform.forward,Space.World);</span><br></pre></td></tr></table></figure><h1 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h1><h2 id="向量的定义"><a href="#向量的定义" class="headerlink" title="向量的定义"></a>向量的定义</h2><h2 id="向量的加法"><a href="#向量的加法" class="headerlink" title="向量的加法"></a>向量的加法</h2><h2 id="向量的减法"><a href="#向量的减法" class="headerlink" title="向量的减法"></a>向量的减法</h2><h2 id="向量的点乘"><a href="#向量的点乘" class="headerlink" title="向量的点乘"></a>向量的点乘</h2><h2 id="向量的叉乘"><a href="#向量的叉乘" class="headerlink" title="向量的叉乘"></a>向量的叉乘</h2><div style="display:none">- Word M2W2- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧拉角万向节死锁(Gimbal Lock)</title>
      <link href="/2018/04/09/Unity3D/09Unity_Gimbal/"/>
      <url>/2018/04/09/Unity3D/09Unity_Gimbal/</url>
      
        <content type="html"><![CDATA[<h1 id="版权声明（转载）"><a href="#版权声明（转载）" class="headerlink" title="版权声明（转载）"></a>版权声明（转载）</h1><p>本文总结归纳自知乎的<mark class="hl-label purple">天下行走</mark>和CSDN的<mark class="hl-label purple">AndrewFan</mark>。</p><mark class="hl-label purple">FCND-Gimbal-Demo</mark>用于讨论万向节死锁(Gimbal Lock)的Unity3D开源项目<ul><li><a href="https://zhuanlan.zhihu.com/p/344050856">https://zhuanlan.zhihu.com/p/344050856</a></li><li><a href="https://blog.csdn.net/andrewfan/article/details/60981437">https://blog.csdn.net/andrewfan/article/details/60981437</a></li><li><a href="https://github.com/udacity/FCND-Gimbal-Demo">https://github.com/udacity/FCND-Gimbal-Demo</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="四元数"><a href="#四元数" class="headerlink" title="四元数"></a>四元数</h2><p>四元数相对于其他形式的优点，大略为：</p><ol><li>解决万向节死锁</li><li>仅需4个浮点数，相比矩阵更轻量</li><li>无论求逆、串联等操作，相比矩阵更高效</li></ol><p>本文简要分析“万向节死锁”形成原因。</p><h2 id="欧拉角"><a href="#欧拉角" class="headerlink" title="欧拉角"></a>欧拉角</h2><p>欧拉角用于表示刚体当前的姿态。<br>思想：将刚体绕某一轴的一次旋转，分解为依次分别绕X、Y、Z轴的三次旋转。这三个轴分别旋转的转动角度，就是一组三个欧拉角。<br>图片中即为上述的三次旋转（而其实可以绕某一轴，一次旋转即可达到最终位置）</p><p><img src="/images/Unity3D/Gimbal_Lock/eulerAngles01.gif" alt="三次旋转图解" title="三次旋转图解"></p><p>具体旋转过程举例，如图：</p><p><img src="/images/Unity3D/Gimbal_Lock/eulerAngles02.jpg" alt="旋转过程举例" title="旋转过程举例"></p><p>图中有两组坐标系，我们定义为：</p><ul><li><mark class="hl-label blue">x、y、z</mark>：世界坐标系（固定不动）</li><li><mark class="hl-label red">X、Y、Z</mark>：刚体坐标系（与刚体同步运动）</li></ul><p>具体旋转步骤为：</p><ol><li>绕世界坐标系的 <mark class="hl-label blue">z</mark> 轴，旋转 <mark class="hl-label red">α</mark> 角。</li><li>绕刚体坐标系的 <mark class="hl-label red">X</mark> 轴，旋转 <mark class="hl-label red">β</mark> 角。</li><li>绕刚体坐标系的 <mark class="hl-label red">Z</mark> 轴，旋转 <mark class="hl-label red">γ</mark>角。</li></ol><p>下面有一个直观的动图展示。图片来源<a href="https://gfycat.com/fr/gifs/detail/flakyconventionalbarnowl">gfycat</a>。</p><p><img src="/images/Unity3D/Gimbal_Lock/eulerAngles03.gif" alt="动图展示" title="动图展示"></p><ul><li><p>动图旋转步骤为 <mark class="hl-label blue">z</mark> → <mark class="hl-label red">Y</mark> → <mark class="hl-label red">X</mark></p></li><li><p>按照顺序标记为 <mark class="hl-label red">zYX</mark></p></li><li><p>加上角度即为一个完整欧拉角<mark class="hl-label red">(ψ,θ,Φ)</mark></p></li></ul><h1 id="万向节死锁（Gimbal-Lock）"><a href="#万向节死锁（Gimbal-Lock）" class="headerlink" title="万向节死锁（Gimbal Lock）"></a>万向节死锁（Gimbal Lock）</h1><ul><li>万向节死锁发生在欧拉角形式下，是由欧拉旋转定义本身造成的。</li><li>Gimbal Lock 产生的原因不是欧拉角也不是旋转顺序，而是我們的思维方式和程序的执行逻辑没有对应，也就是说是我们的观念导致这个情况的发生。</li><li>欧拉旋转的顺规和轴向定义，自然造就了“万向节死锁”问题。本节主要来探索它自然形成的原因。</li></ul><h1 id="陀螺仪"><a href="#陀螺仪" class="headerlink" title="陀螺仪"></a>陀螺仪</h1><p>首先，我们来了解Gimbal 究竟是个什么玩意儿。下面来自维基百科中关于Gimbal的一段引述：</p><blockquote><p>平衡环架（英语：Gimbal），是一具有枢纽的装置，作用是使得一物体能以单一轴旋转。由彼此垂直的枢纽轴所组成的一组三只平衡环架，则可使架在最内的环架的物体维持旋转轴不变，而应用在船上的陀螺仪、罗盘、饮料杯架等用途上，而不受船体因波浪上下震动、船身转向的影响。<br>————百度百科</p></blockquote><p>如图：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-2f3d8c9c2de8c7f225ab65092598685d_b.gif" alt="动图封面"></p><p>静态图：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-614c6c6cb3bcbb46129847e77a72895f_1440w.webp" alt="img"></p><p>上图就是一Gimbal装置，是一<strong>陀螺仪</strong>。中间有一根竖轴，穿过一个金属圆盘。金属圆盘称为转子，竖轴称为旋转轴。转子用金属制成，应该是了增加质量，从而增大惯性。竖轴外侧是三层嵌套的圆环，它们互相交叉，带来了三个方向自由度的旋转。</p><p>称作<strong>陀螺仪</strong>即可。</p><h1 id="Pitch、Yaw、Roll"><a href="#Pitch、Yaw、Roll" class="headerlink" title="Pitch、Yaw、Roll"></a>Pitch、Yaw、Roll</h1><p>陀螺仪分别绕X、Y、Z三个轴旋转时的旋转角。这里直接等同于欧拉角即可。如图：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-2455f2d17a26c0e63ae5dea94267bf95_1440w.webp" alt="img"></p><ul><li>绕机身右方<mark class="hl-label red">X</mark>轴旋转，称为<strong>pitch，俯仰</strong>。</li><li>绕机头上方<mark class="hl-label red">Z</mark>轴旋转，称为<strong>Yaw，偏航</strong>。</li><li>绕机头前方<mark class="hl-label red">Y</mark>轴旋转，称为<strong>Roll，横滚</strong>。</li></ul><p>可以看出，与欧拉角形式基本相同。</p><h1 id="万向节死锁的产生"><a href="#万向节死锁的产生" class="headerlink" title="万向节死锁的产生"></a>万向节死锁的产生</h1><p>陀螺仪是用来测量平衡和转速的工具，在载体高速转动的时候，陀螺仪始终要通过自我调节，使得转子保持原有的平衡。</p><p>为助于理解，下面是一个简单的陀螺仪示意图（省略了金属圆盘）。</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-217dec0507137fe47d9bebcee70cb8a9_1440w.webp" alt="img"></p><blockquote><p>把三个Gimbal环用不同的颜色做了标记，底部三个轴向，RGB分别对应XYZ。<br>假设现在这个陀螺仪被放在一艘船上，船头的方向沿着+Z轴，也就是右前方。</p></blockquote><h2 id="横滚"><a href="#横滚" class="headerlink" title="横滚"></a>横滚</h2><p>现在假设，船体发生了摇晃，是沿着前方进行旋转的摇晃，也就是横滚。由于转子和旋转轴具有较大的惯性，只要没有直接施加扭矩，就会保持原有的姿态。由于上图中绿色的活动的连接头处是可以灵活转动的，此时将发生相对旋转，从而出现以下的情形：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-a8062c2503bcce4f7f16953ab8ff0d28_b.gif" alt="动图封面"></p><h2 id="俯仰"><a href="#俯仰" class="headerlink" title="俯仰"></a>俯仰</h2><p>再次假设，船体发生了pitch摇晃，也就是俯仰。同样，由于存在相应方向的可以相对旋转的连接头（红色连接头），转子和旋转轴将仍然保持平衡，如下图：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-f05ee40c6a176d6dc63e93d3db205217_b.gif" alt="动图封面"></p><h2 id="偏航"><a href="#偏航" class="headerlink" title="偏航"></a>偏航</h2><p>最后假设，船体发生了yaw摇晃，也就是偏航，此时船体在发生水平旋转。相对旋转发生在蓝色连接头。如下图：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-1946761c674d591a31eb3eab3af91499_b.webp" alt="动图封面"></p><p>最终，在船体发生Pitch、Yaw、Roll的情况下，陀螺仪都可以通过自身的调节，而让转子和旋转轴保持平衡。</p><h2 id="死锁的产生"><a href="#死锁的产生" class="headerlink" title="死锁的产生"></a>死锁的产生</h2><p>以上陀螺仪一切正常，在船体发生任意方向摇晃都可以通过自身调节来应对。</p><p>假如，船体发生了剧烈的变化，此时船首仰起（抬头）了90度，此时的陀螺仪调节状态如下图：</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-d88a60efdc2348fe83f14204d9943fb7_1440w.webp" alt="img"></p><p>此时，船体再次发生转动，沿着当前世界坐标的+Z轴（蓝色轴，应该正指向船底）进行转动，那么来看看发生了什么情况。</p><p><img src="/images/Unity3D/Gimbal_Lock/v2-c626dfd039fbe5d8e0e31c4fa8c27fed_b.webp" alt="动图封面"></p><p>现在，转子不平衡了，陀螺仪的三板斧不起作用了。它失去了自身的调节能力。那么这是为什么呢？<br>之前陀螺仪之所以能通过自身调节，保持平衡，是因为存在可以相对旋转的连接头。在这种情况下，已经不存在可以相对旋转的连接头了。<br>那么连接头呢？去了哪里？显然，它还是在那里，只不过是，连接头可以旋转的相对方向不是现在需要的按着+Z轴方向。从上图中，我们清楚地看到：</p><ul><li>红色连接头：可给予一个相对俯仰的自由度。</li><li>绿色连接头：可给予一个相对偏航的自由度。</li><li>蓝色连接头：可给予一个相对偏航的自由度。</li></ul><p>没错，三个连接头，提供的自由度只对应了俯仰和偏航两个自由度，桶滚自由度丢失了。这就是陀螺仪上的“<strong>万向节死锁</strong>”问题。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总结来说，欧拉角的“万向节死锁”问题，是由于欧拉旋转定义本身造成的。这种围绕选旋转前固定轴的先Z、再X、再Y的旋转操作，与其最终所预期的三个轴向可以旋转的结果并非一定是一对一的映射。某些情况下是多对一的映射，造成一些旋转自由度的缺失，也就是“死锁”。</p><p>在编程中很难规避死锁，所以现在更多使用四元数形式进行姿态表示与旋转。</p><div style="display:none"><ul><li><a href="https://www.cnblogs.com/psklf/p/5656938.html">https://www.cnblogs.com/psklf/p/5656938.html</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> Gimbal Lock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧拉角与四元数(eulerAngles and Quaternion)</title>
      <link href="/2018/04/09/Unity3D/08Unity_Angles/"/>
      <url>/2018/04/09/Unity3D/08Unity_Angles/</url>
      
        <content type="html"><![CDATA[<h1 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h1><h1 id="欧拉角-eulerAngles"><a href="#欧拉角-eulerAngles" class="headerlink" title="欧拉角(eulerAngles)"></a>欧拉角(eulerAngles)</h1><ul><li>使用三个数字来保存方位（描述物体的朝向），使用<code>Vector3</code>存储但并不代表向量；代表一系列的三维基本旋转，也就是围绕一个坐标系的每个轴的一系列旋转。</li><li>仅使用三个数字表达方位，占用空间小。</li></ul><h2 id="Unity在线文档"><a href="#Unity在线文档" class="headerlink" title="Unity在线文档"></a>Unity在线文档</h2><ul><li><a href="https://docs.unity.cn/cn/current/ScriptReference/Transform-eulerAngles.html">https://docs.unity.cn/cn/current/ScriptReference/Transform-eulerAngles.html</a></li></ul><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><ul><li>优点：三个角度（沿坐标轴旋转的单位）组成，直观，容易理解。</li><li>优点：可以进行从一个方向到另一个方向旋转大于180度的角度。</li><li>缺点：万向节死锁问题。 </li><li>缺点：对于一个方位，存在多个欧拉角描述，因此无法判断多个欧拉角代表的角位移是否相同。比如（250，0，0）与（290，180，180）为同一个欧拉角，为了保证任意方位都只有独一无二的表示，Unity引擎限制了角度范围，即沿X轴旋转限制在-90到90之间，沿Y与Z轴 旋转限制在0到360之间。</li></ul><h2 id="欧拉角分类"><a href="#欧拉角分类" class="headerlink" title="欧拉角分类"></a>欧拉角分类</h2><ul><li>静态：即绕世界坐标系三个轴的旋转，由于物体旋转过程中坐标轴保持静止，所以称为静态</li><li>动态：即绕物体坐标系的三个轴的旋转，由于物体的旋转过程中坐标轴随着物体做着相同的旋转，所以称之为动态（存在万向节死锁问题）</li></ul><h1 id="四元数-Quaternion"><a href="#四元数-Quaternion" class="headerlink" title="四元数(Quaternion)"></a>四元数(Quaternion)</h1><p>内部由四个数字（在Unity中称为x，y，z和w）组成，表示三维空间中的旋转。</p><h2 id="Unity在线文档-1"><a href="#Unity在线文档-1" class="headerlink" title="Unity在线文档"></a>Unity在线文档</h2><ul><li><a href="https://docs.unity.cn/cn/current/ScriptReference/Quaternion.html">https://docs.unity.cn/cn/current/ScriptReference/Quaternion.html</a></li><li><a href="https://scriptinghelpers.org/blog/how-to-think-about-quaternions">如何看待四元数</a></li></ul><h2 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h2><ul><li>优点：四元旋转不存在万向节锁问题。</li><li>优点：存储空间小，计算效率高。</li><li>缺点：单个四元数不能表示在任何方向上超过180度的旋转。</li><li>缺点：四元数的数字表示不直观。</li></ul><div style="display:none"><ul><li><a href="https://www.nowcoder.com/discuss/430028202750337024?sourceSSR=search">https://www.nowcoder.com/discuss/430028202750337024?sourceSSR=search</a></li></ul></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rigidbody（刚体组件）</title>
      <link href="/2018/04/08/Unity3D/05Unity_Rigidbody/"/>
      <url>/2018/04/08/Unity3D/05Unity_Rigidbody/</url>
      
        <content type="html"><![CDATA[<h1 id="Rigidbody简介"><a href="#Rigidbody简介" class="headerlink" title="Rigidbody简介"></a>Rigidbody简介</h1><p>Unity 3D 中的 <code>Rigidbody</code> 可以为游戏对象赋予物理特性，使游戏对象在物理系统的控制下接受推力与扭力，从而实现现实世界中的物理学现象。</p><p>我们通常把在外力作用下，物体的形状和大小（尺寸）保持不变，而且内部各部分相对位置保持恒定（没有形变）的理想物理模型称为刚体。</p><p>刚体（<code>Rigidbody</code>）是物理引擎中最基本的组件。通过该组件可以给物体添加一些常见的物理属性，如质量、摩擦力、碰撞参数等。</p><p>Unity 3D 提供了多个实现接口，开发者可以通过更改这些参数来控制物体的各种物理状态。</p><p>刚体在各种物理状态影响下运动，刚体的属性包含：</p><ul><li>Mass（质量）</li><li>Drag（阻力）</li><li>Angular Drag（角阻力）</li><li>Use Gravity（是否使用重力）</li><li>Is Kinematic（是否受物理影响）</li><li>Collision Detection（碰撞检测）</li></ul><h2 id="刚体添加方法"><a href="#刚体添加方法" class="headerlink" title="刚体添加方法"></a>刚体添加方法</h2><p>在 Unity 3D 中创建并选择一个游戏对象，执行菜单栏中的 <code>Component</code> → <code>Physics</code> → <code>Rigidbody</code> 命令为游戏对象添加刚体组件。</p><h2 id="刚体选项参数"><a href="#刚体选项参数" class="headerlink" title="刚体选项参数"></a>刚体选项参数</h2><p>游戏对象一旦被赋予刚体属性后，其 Inspector 属性面板会显示相应的属性参数与功能选项，具体内容如下表所示。</p><table><thead><tr><th align="left">参数</th><th align="left">含义</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>Mass</code></td><td align="left">质量</td><td align="left">物体的质量（任意单位）。建议一个物体的质量不要与其他物体 相差100倍。</td></tr><tr><td align="left"><code>Drag</code></td><td align="left">阻力</td><td align="left">当受力移动时物体受到的空气阻力。0表示没有空气阻力，极大时使物体立即停止运动。</td></tr><tr><td align="left"><code>Angular Drag</code></td><td align="left">角阻力</td><td align="left">当受扭力旋转时物体受到的空气阻力。0表示没有空气阻力， 极大时使物体立即停止旋转。</td></tr><tr><td align="left"><code>Use Gravity</code></td><td align="left">使用重力</td><td align="left">该物体是否受重力影响，若激活，则物体受重力影响。</td></tr><tr><td align="left"><code>Is Kinematic</code></td><td align="left">是否是运动学</td><td align="left">游戏对象是否遵循运动学物理定律，若激活，该物体不再受物理 引擎驱动，而只能通过变换来操作。适用于模拟运动的平台或 者模拟由铰链关节连接的刚体。</td></tr><tr><td align="left"><code>Interpolate</code></td><td align="left">插值</td><td align="left">物体运动插值模式。当发现刚体运动时抖动，可以尝试下面的 选项：None(无），不应用插值；<code>Interpolate</code>(内插值），基于上一巾贞 变换来平滑本帧变换；<code>Extrapolate</code>(外插值），基于下一帧变换来 平滑本帧变换。</td></tr><tr><td align="left"><code>Collision Detection</code></td><td align="left">碰撞检测</td><td align="left">碰撞检测模式。用于避免高速物体穿过其他物体却未触发碰 撞。碰撞模式包括<code>Discrete</code> (不连续）、<code>Continuous</code> (连续）、 <code>Continuous Dynamic</code> (动态连续〉3种。其中，<code>Discrete模式</code>用来 检测与场景中其他碰撞器或其他物体的碰撞；<code>Continuous模式</code> 用来检测与动态碰撞器（刚体）的碰撞；<code>Continuous Dynamic模式</code>用来检测与连续模式和连续动态模式的物体的碰撞，适用于 高速物体。</td></tr><tr><td align="left"><code>Constraints</code></td><td align="left">约束</td><td align="left">对刚体运动的约束。其中，<code>Freeze Position</code>(冻结位置）表7TC刚体 在世界中沿所选HZ轴的移动将无效，<code>Freeze Rotation</code>(冻结 旋转）表示刚体在世界中沿所选的<code>X</code>、<code>Y</code>、<code>Z</code>轴的旋转将无效。</td></tr></tbody></table><h1 id="数学计算"><a href="#数学计算" class="headerlink" title="数学计算"></a>数学计算</h1><p><code>Ft = mv</code> 数学表达式为:<code>FΔt=mΔv</code></p><ul><li>Ft代表冲量<br>F是作用力,t是力的作用时间</li><li>mv是动量<br>M是物体的质量,V是物体的运动速度.</li></ul><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="常用API"><a href="#常用API" class="headerlink" title="常用API"></a>常用API</h2><p>注意：我们在代码中控制刚体的移动 最好是把刚体的运动代码写到FixedUpdate中</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ForceMode.Force; <span class="comment">//默认方式 持续力</span></span><br><span class="line">ForceMode.Acceleration  <span class="comment">//可持续加速度  会忽略刚体的实际质量而采用默认值1.0f</span></span><br><span class="line">ForceMode.Impulse  <span class="comment">//瞬间冲击力  把t的值默认为1</span></span><br><span class="line">ForceMode.VelocityChange  <span class="comment">//直接改变速度大小  采用默认质量1.0，同时也忽略系统的实际帧频间隔，采用默认间隔1.0</span></span><br><span class="line">rigidbody.AddForce(Vector3.forward*<span class="number">500</span>)；<span class="comment">//世界坐标前方（Z轴）方向添加一个500的力。</span></span><br><span class="line">rigidbody.AddForce(transform.forward*<span class="number">500</span>)；<span class="comment">//自己的坐标前方（Z轴）方向添加一个500的力。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Unity手册-Rigidbody"><a href="#Unity手册-Rigidbody" class="headerlink" title="Unity手册-Rigidbody"></a>Unity手册-Rigidbody</h2><p><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Rigidbody.html">https://docs.unity.cn/cn/2020.2/ScriptReference/Rigidbody.html</a></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FairyGUI</title>
      <link href="/2018/04/05/Unity3D/07Unity_FairyGUI/"/>
      <url>/2018/04/05/Unity3D/07Unity_FairyGUI/</url>
      
        <content type="html"><![CDATA[<h1 id="FairyGUI简介"><a href="#FairyGUI简介" class="headerlink" title="FairyGUI简介"></a>FairyGUI简介</h1><ul><li>FairyGUI是一款UI制作的编辑器，它是一个跨平台的UI编辑器，支持多个开发平台。<br>开发难度：</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li>官网：<a href="https://www.fairygui.com/">https://www.fairygui.com/</a></li><li>在线手册：<a href="https://www.fairygui.com/docs/editor">https://www.fairygui.com/docs/editor</a></li><li>Github开源项目：<a href="https://github.com/fairygui">https://github.com/fairygui</a></li></ul><h1 id="UGUI、NGUI-和-FairyGUI-对比"><a href="#UGUI、NGUI-和-FairyGUI-对比" class="headerlink" title="UGUI、NGUI 和 FairyGUI 对比"></a>UGUI、NGUI 和 FairyGUI 对比</h1><h2 id="UGUI"><a href="#UGUI" class="headerlink" title="UGUI"></a>UGUI</h2><p>UGUI有锚点系统，不可否认，锚点非常优秀，也能实现各种布局，但是有一个问题是锚点只能相对父物体，这也就意味着要实现某种布局时，可能要加入很多空的UI元素来形成一层一层的父物体以使锚点发挥作用。<br>这对UI制作来说很不友好，不仅要考虑相互关系，还要考虑怎么排布父子关系。</p><h2 id="FairyGUI"><a href="#FairyGUI" class="headerlink" title="FairyGUI"></a>FairyGUI</h2><p>FairyGUI提供了一个关联系统，可以关联任意两个元素，使一个元素的位置相对另一个元素去定义，不用考虑层级关系，这一点我认为是非常好的。<br>从UI组件来说，FairyGUI提供的组件要丰富得多，常见的功能都可以在FairyGUI中用鼠标点点点来完成，UGUI组件比较基础，一个可切换的Button就得写代码了。<br>UI动画上，两者差不多，UGUI有Animation window，FairyGUI有动效系统，都差不多。</p><div style="display:none">- https://blog.csdn.net/yangxun983323204/article/details/78490097- http://events.jianshu.io/p/8488bc4ee966- https://zhuanlan.zhihu.com/p/48058837</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> unity-plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PlayMaker</title>
      <link href="/2018/04/05/Unity3D/07Unity_PlayMaker/"/>
      <url>/2018/04/05/Unity3D/07Unity_PlayMaker/</url>
      
        <content type="html"><![CDATA[<h1 id="PlayMaker简介"><a href="#PlayMaker简介" class="headerlink" title="PlayMaker简介"></a>PlayMaker简介</h1><ul><li>PlayMaker是由第三方软件开发商Hutong Games开发完成。它的Logo是一个中文的“玩”字（PS：看来中国文化声名远播）。</li><li>它既是一个可视化脚本工具，又是一个分层逻辑框架。</li><li>设计师、程序员使用PlayMaker能够很快的完成游戏原型动作，既适合独立开发者，又特别适合团队合作。</li></ul><h1 id="在线网站"><a href="#在线网站" class="headerlink" title="在线网站"></a>在线网站</h1><ul><li>Unity Asset Store 商店资源</li><li><a href="https://assetstore.unity.com/packages/tools/visual-scripting/playmaker-368">https://assetstore.unity.com/packages/tools/visual-scripting/playmaker-368</a></li></ul><h2 id="PlayMaker优点"><a href="#PlayMaker优点" class="headerlink" title="PlayMaker优点"></a>PlayMaker优点</h2><ul><li>1.很多动作行为（例如：跑，跳，攻击等）只需要通过简单状态机FSM（Finite state machine）就能实现，根本不用写一句代码；</li><li>2.方便简洁的图表管理每个状态机；</li><li>3.播放游戏，可以实时错误检查；</li><li>4.集成的帮助，可以让我们快速查看行为说明；</li><li>5.设置断点和单步执行状态</li><li>6.可以编写自定义行为，让在出现在我们的行为列表（这就要求有点语言基础了）</li><li>7.支持各类插件配合使用，加速开发进程（例如Ngui, 2D Toolkit, A* Pathfinding等）</li><li>它的优点还很多，需要我们慢慢去发掘</li></ul><h2 id="PlayMaker缺点"><a href="#PlayMaker缺点" class="headerlink" title="PlayMaker缺点"></a>PlayMaker缺点</h2><ul><li>1.所有的功能必须对应一个状态，本来很简单的几句代码就能实行的动作，PlayMaker需要很多状态才能完成；</li><li>2.虽说可以无需编写一个代码就能制作完整的游戏，但是对于制作商业级的游戏，PM就不靠谱了，太多的东西实现不了，不过官方一直在更新，我相信会有改变的；</li><li>3.个人感觉PM的网络功能还不完善，Bug太多，不过官方也一直在更新，据说已经有老外开发商在研究PM结合Python开发网络游戏了，期待吧</li></ul><div style="display:none">- - </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> unity-plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DoTween</title>
      <link href="/2018/04/05/Unity3D/07Unity_DOTween/"/>
      <url>/2018/04/05/Unity3D/07Unity_DOTween/</url>
      
        <content type="html"><![CDATA[<h1 id="DOTween简介"><a href="#DOTween简介" class="headerlink" title="DOTween简介"></a>DOTween简介</h1><ul><li>DOTween是一个免费的Unity3D动画插件，少量编码即可以实现常见的动画效果</li></ul><h1 id="DOTween和iTween"><a href="#DOTween和iTween" class="headerlink" title="DOTween和iTween"></a>DOTween和iTween</h1><ul><li>iTween的性能没有DOTween好，因为iTween每个动画使用一个Update维护</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ol><li>Window-&gt;AssetStore下载</li><li>导入Package</li><li>菜单栏-&gt;Tools-&gt;DOTween Utility Panel-&gt;Setup按钮</li></ol><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><ol><li>删除Resources&#x2F;DOTweenSettings文件</li><li>删除老的DOTween安装目录Demigiant</li><li>重新导入Package，再走安装流程</li></ol><h1 id="在线手册"><a href="#在线手册" class="headerlink" title="在线手册"></a>在线手册</h1><ul><li><a href="http://dotween.demigiant.com/documentation.php">http://dotween.demigiant.com/documentation.php</a></li><li><a href="https://shenjun4unity.github.io/unityhtml/%E7%AC%AC9%E7%AB%A0%20DOTween/9.2%20%E6%96%87%E6%A1%A3.html">https://shenjun4unity.github.io/unityhtml/%E7%AC%AC9%E7%AB%A0%20DOTween/9.2%20%E6%96%87%E6%A1%A3.html</a></li></ul><h1 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> DG.Tweening</span><br></pre></td></tr></table></figure><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DoFade()<span class="comment">//淡入或淡出</span></span><br><span class="line">DoLocalMove()<span class="comment">//本地坐标系，移动动画</span></span><br><span class="line">DoScale()<span class="comment">//缩放动画</span></span><br><span class="line">DoRotate()<span class="comment">//旋转</span></span><br><span class="line">DoColor()<span class="comment">//颜色变化</span></span><br><span class="line">DoText()<span class="comment">//文本逐渐展开</span></span><br></pre></td></tr></table></figure><h1 id="复合动画"><a href="#复合动画" class="headerlink" title="复合动画"></a>复合动画</h1><ul><li>同时播动画（顺序写代码即可）</li><li>动画队列</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DOTween.Sequence()</span><br><span class="line">Sequence.Append(); <span class="comment">//在动画队列后方追加动画</span></span><br><span class="line">Sequence.Prepend(); <span class="comment">//在动画队列最前方追加动画</span></span><br><span class="line">Sequence.Insert(); <span class="comment">//在特定时间添加一个动画</span></span><br></pre></td></tr></table></figure><h1 id="动画回调方法"><a href="#动画回调方法" class="headerlink" title="动画回调方法"></a>动画回调方法</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OnComplete()：<span class="comment">//动画执行完成时，执行回调函数</span></span><br></pre></td></tr></table></figure><h1 id="默认配置"><a href="#默认配置" class="headerlink" title="默认配置"></a>默认配置</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DOTween.Init()</span><br><span class="line">DOTween.defaultXXX</span><br></pre></td></tr></table></figure><h1 id="数值变化"><a href="#数值变化" class="headerlink" title="数值变化"></a>数值变化</h1><ul><li>手册去查Ease类型，常用Linear</li></ul><h1 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h1><ul><li>DOTween Pro专有</li></ul><div style="display:none"></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
            <tag> unity-plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity脚本的生命周期</title>
      <link href="/2018/04/04/Unity3D/04Unity_Lifecycle/"/>
      <url>/2018/04/04/Unity3D/04Unity_Lifecycle/</url>
      
        <content type="html"><![CDATA[<h1 id="生命周期中常用方法"><a href="#生命周期中常用方法" class="headerlink" title="生命周期中常用方法"></a>生命周期中常用方法</h1><p><img src="/images/Unity3D/lifecycle/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95.jpg" alt="生命周期中常用方法" title="生命周期中常用方法"></p><h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><h2 id="序列化字段：在编辑器中显示私有变量"><a href="#序列化字段：在编辑器中显示私有变量" class="headerlink" title="序列化字段：在编辑器中显示私有变量"></a>序列化字段：在编辑器中显示私有变量</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="在编译器中隐藏字段"><a href="#在编译器中隐藏字段" class="headerlink" title="在编译器中隐藏字段"></a>在编译器中隐藏字段</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HideInInspector</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> b = <span class="number">2</span>; </span><br></pre></td></tr></table></figure><h2 id="只能在范围内设置值"><a href="#只能在范围内设置值" class="headerlink" title="只能在范围内设置值"></a>只能在范围内设置值</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Range(0,15)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> c = <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h1 id="一、初始化相关的方法"><a href="#一、初始化相关的方法" class="headerlink" title="一、初始化相关的方法"></a>一、初始化相关的方法</h1><h2 id="Awake"><a href="#Awake" class="headerlink" title="Awake()"></a>Awake()</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span>  <span class="keyword">void</span>  <span class="title">Awake</span>()</span>  &#123;......&#125; </span><br></pre></td></tr></table></figure><ul><li>脚本被加载到场景中时自动调用</li><li>是整个生命周期中最先执行的方法</li><li>当脚本实例被加载时会自动调用这个方法</li><li>整个生命周期中只执行一次</li></ul><p>该方法主要用于在游戏开始之前初始化对象或游戏状态，如：使用 <code>GameObject.FindWithTag()</code>查询游戏对象。</p><h2 id="OnEnable"><a href="#OnEnable" class="headerlink" title="OnEnable()"></a>OnEnable()</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span>  <span class="keyword">void</span>  <span class="title">OnEnable</span>()</span>  &#123;......&#125; </span><br></pre></td></tr></table></figure><ul><li>当对象变为可用或激活状态时调用，判断对象或脚本是否可用</li><li>执行完Awake()方法后，如果当前脚本可用或可激活，按正常执行顺序则会执行OnEnable()方法。</li><li>配合OnDisable()方法一起使用</li><li>执行次数不确定</li></ul><p>通常在这个地方将当前脚本禁用:<code>this.enable=false</code>，若执行此操作则会直接跳到OnDisable()方法执行一次，其它生命周期方法都不会再执行。</p><h2 id="Start"><a href="#Start" class="headerlink" title="Start()"></a>Start()</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span>  <span class="keyword">void</span>  <span class="title">Start</span>()</span> &#123;......&#125; </span><br></pre></td></tr></table></figure><ul><li>第一次Update之前调用</li><li>执行完OnEnable()方法之后，在第一次执行Update()方法之前，Start()会进行一次判断：若之前没有执行过该方法，则会执行；若之前已执行过，则不会再执行。</li><li>整个生命周期中只执行一次，用于进行初始化</li></ul><p>该方法主要用于对变量等进行初始化或赋值的相关操作。可将一些需要依赖Awake的变量放在Start()里面初始化</p><h1 id="二、更新相关的方法"><a href="#二、更新相关的方法" class="headerlink" title="二、更新相关的方法"></a>二、更新相关的方法</h1><p>第二阶段：更新模块，与生命周期对应的三个方法：FixedUpdate()、Update()、LateUpdate()<br>这三个方法是何时被调用的呢？<br>游戏画面更新时，这三个方法会被调用，并且会被循环被调用。<br>需要特别强调的是：FixedUpdate()方法经常会比Update()方法更频繁的被调用。</p><h2 id="FixedUpdate"><a href="#FixedUpdate" class="headerlink" title="FixedUpdate()"></a>FixedUpdate()</h2><ul><li>固定更新</li><li>以帧为单位进行场景的刷新，以固定的时间隔来进行刷新</li><li>与物理相关的更新操作，放在FixedUpdate()完成</li></ul><h2 id="Update"><a href="#Update" class="headerlink" title="Update()"></a>Update()</h2><ul><li>更新</li><li>每一帧与每一帧的执行时间可能是不一致的</li><li>Update()执行速率与硬件设备和被渲染物体有关系，有时快有时慢</li><li>主要完成场景中数据的更新和数据的逻辑处理操作</li></ul><h2 id="LateUpdate"><a href="#LateUpdate" class="headerlink" title="LateUpdate()"></a>LateUpdate()</h2><ul><li>晚于更新</li><li>当一帧执行结束，在准备下一帧执行之前，会调用该方法</li></ul><h2 id="OnGUI"><a href="#OnGUI" class="headerlink" title="OnGUI()"></a>OnGUI()</h2><ul><li>渲染和处理GUI事件</li></ul><h1 id="三、销毁相关的方法"><a href="#三、销毁相关的方法" class="headerlink" title="三、销毁相关的方法"></a>三、销毁相关的方法</h1><h2 id="OnDisable"><a href="#OnDisable" class="headerlink" title="OnDisable()"></a>OnDisable()</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span>  <span class="keyword">void</span> <span class="title">OnDisable</span>()</span> &#123;......&#125; </span><br></pre></td></tr></table></figure><ul><li>当对象或脚本处于不可用（或不可激活）时执行</li><li>执行几次不确定</li><li>一般会与OnEnable()配合使用</li></ul><h2 id="OnDestory"><a href="#OnDestory" class="headerlink" title="OnDestory()"></a>OnDestory()</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ul><li>整个生命周期中只执行一次</li><li>当对象（脚本文件）被销毁时只执行该方法</li><li>一般会先执行OnDisable()，将对象变为不可用状态，然后再销毁</li></ul><h1 id="渲染用到的周期函数"><a href="#渲染用到的周期函数" class="headerlink" title="渲染用到的周期函数"></a>渲染用到的周期函数</h1><h2 id="OnPreCull"><a href="#OnPreCull" class="headerlink" title="OnPreCull"></a>OnPreCull</h2><ul><li>在相机剔除场景之前调用此函数。</li><li>相机可见的对象取决于剔除。</li><li>OnPreCull 函数调用发生在剔除之前。</li></ul><h2 id="OnBecameVisible-OnBecameInvisible"><a href="#OnBecameVisible-OnBecameInvisible" class="headerlink" title="OnBecameVisible &#x2F; OnBecameInvisible"></a>OnBecameVisible &#x2F; OnBecameInvisible</h2><ul><li>在对象对于相机可见&#x2F;不可见时调用此函数。</li></ul><h2 id="OnWillRenderObject"><a href="#OnWillRenderObject" class="headerlink" title="OnWillRenderObject"></a>OnWillRenderObject</h2><ul><li>如果对象可见，则为每个相机调用一次此函数。</li></ul><h2 id="OnPreRender"><a href="#OnPreRender" class="headerlink" title="OnPreRender"></a>OnPreRender</h2><ul><li>在相机开始渲染场景之前调用此函数。</li></ul><h2 id="OnRenderObject"><a href="#OnRenderObject" class="headerlink" title="OnRenderObject"></a>OnRenderObject</h2><ul><li>在完成所有常规场景渲染后调用此函数。</li><li>可使用 GL 类或 Graphics.DrawMeshNow 绘制自定义几何图形。</li></ul><h2 id="OnPostRender"><a href="#OnPostRender" class="headerlink" title="OnPostRender"></a>OnPostRender</h2><ul><li>在相机完成场景渲染后调用此函数。</li></ul><h2 id="OnRenderImage"><a href="#OnRenderImage" class="headerlink" title="OnRenderImage"></a>OnRenderImage</h2><ul><li>在完成场景渲染后调用此函数，以便对屏幕图像进行后处理(仅限专业版)。</li></ul><h2 id="OnDrawGizmos"><a href="#OnDrawGizmos" class="headerlink" title="OnDrawGizmos"></a>OnDrawGizmos</h2><ul><li>用于在场景视图中绘制小图示 (Gizmos)，以实现可视化目的。</li></ul><h2 id="OnGUI-1"><a href="#OnGUI-1" class="headerlink" title="OnGUI"></a>OnGUI</h2><ul><li>在每帧上多次调用此函数，以响应 GUI 事件。</li><li>程序首先将处理 Layout 和 Repaint 事件，然后再处理每个输入事件的 Layout 和 keyboard 鼠标事件。</li></ul><h1 id="脚本生命周期-完整"><a href="#脚本生命周期-完整" class="headerlink" title="脚本生命周期(完整)"></a>脚本生命周期(完整)</h1><p>Unity 脚本有一套完整的生命周期，脚本需要挂在任意游戏对象上，并且同一个游戏对象可以挂不同的脚本，各个脚本执行自己的生命周期，它们可以相互组合并且互不干扰。<a href="https://docs.unity.cn/cn/current/Manual/ExecutionOrder.html">完整的脚本生命周期(官方文档)</a></p><p><img src="/images/Unity3D/lifecycle/%E5%AE%8C%E6%95%B4%E7%9A%84%E8%84%9A%E6%9C%AC%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.jpg" alt="完整的脚本生命周期" title="完整的脚本生命周期"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity查找物体的6种方法详解</title>
      <link href="/2018/04/03/Unity3D/03Unity_FindObj/"/>
      <url>/2018/04/03/Unity3D/03Unity_FindObj/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ol><li><p>无论是哪种方法,为了性能的考虑,请不要将获取物体的代码写在Update里</p></li><li><p>请注意GameObject和gameObject的区别</p></li><li><p>请注意Transform和transform的区别</p></li></ol><h1 id="查找物体方法-速查表"><a href="#查找物体方法-速查表" class="headerlink" title="查找物体方法(速查表)"></a>查找物体方法(速查表)</h1><ul><li><p>GameObject(Unity的所有物体的基类,针对全局,方法是静态方法,所以可以直接用)<br>注意:非gameObject,注意大小写,gameObject指的是该物体,gameObject无这些方法</p></li><li><p>transform(是本物体的transform的组件,所以查找都是针对本物体的)<br>注意:非Transform,注意大小写,Transform指的是Transform类型,Transform无这些方法</p></li><li><p>P.S. <code>transform</code>效率比<code>GameObject</code>高,强烈建议使用<code>transform</code></p></li></ul><p><img src="/images/Unity3D/Unity_FindObj/0120201013.png" alt="场景实例" title="场景实例"></p><table><thead><tr><th>查找物体的6种方法</th><th>方法</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>GameObject.Find<br>(物体名字)</td><td>递归遍历全局物体,直到找到第一个为Capsule的物体</td><td>全局搜索</td><td>1. 无法查找隐藏对象<br>2.效率低下(相当于递归遍历查找)</td></tr><tr><td>GameObject.Find<br>(“GameObject&#x2F;ChildGameObject)</td><td>通过路径查找</td><td>1:解决查找中可能出现的重名问题。<br>2:如果有完全的路径，减少查找范围，减少查找时间</td><td>1.路径或结构调整后，需要重新调整路径字段。<br>2.如果路径查找中的任何一个父节点被隐藏(Active&#x3D;false)，这个对象都将查找不到。</td></tr><tr><td>GameObject.FindWithTag<br>(Tag字段)<br>GameObject.FindGameObjectsWithTag<br>(Tag字段)</td><td>全局找到 (第一个)&#x2F;(所有) Tag为Capsule的物体</td><td>tag的搜索速度比Find来的快</td><td></td></tr><tr><td>transform.Find(物体名字)</td><td>找到该脚本挂的物体的 第一个 为Capsule的孩子(本质为路径查找)</td><td>1.可以查找隐藏对象<br>2.支持路径查找<br>3.查找隐藏对象的前提是transform所在的根节点必须可见(active&#x3D;true)</td><td>1.局部查找<br>2.不能直接找到平级的物体及他们的孩子</td></tr><tr><td>transform.GetChild(Index)</td><td>找到该脚本挂的物体的 第一个孩子</td><td>效率高</td><td>1.局部查找</td></tr><tr><td>Resources.FindObjectsOfTypeAll ()</td><td>返回指定类型的对象列表(如XXXScript)。主要用于编辑器中，eg。检测内存泄露、批量查找的功能等</td><td>用得少,几乎不用</td><td>用得少,几乎不用</td></tr></tbody></table><h1 id="Object-Find"><a href="#Object-Find" class="headerlink" title="Object.Find()"></a>Object.Find()</h1><p><code>Object.Find()</code>:根据名称找到游戏对象并返回它。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ObjectFind</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 找父级</span></span><br><span class="line">    GameObject parent = GameObject.Find(<span class="string">&quot;GameObject&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找父级物体，是否找到：&quot;</span> + (parent != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 找子级</span></span><br><span class="line">    GameObject child = GameObject.Find(<span class="string">&quot;Child&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找子级物体，是否找到：&quot;</span> + (child != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 找父级隐藏物体</span></span><br><span class="line">    GameObject parentHide = GameObject.Find(<span class="string">&quot;GameObjectHide&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找父级隐藏物体，是否找到：&quot;</span> + (parentHide != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 找子级隐藏物体</span></span><br><span class="line">    GameObject childHide = GameObject.Find(<span class="string">&quot;ChildHide&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找子级隐藏物体，是否找到：&quot;</span> + (childHide != <span class="literal">null</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果如下图：</p><p><img src="/images/Unity3D/Unity_FindObj/2021060414290320.png" alt="img"></p><p>当有使用<code>GameObject.Find(&quot;GameObject&quot;)</code>, 场景中有多个名为“GameObject”的物体存在时，将每个“GameObject”设置为<strong>不同的标签</strong>，多运行几次查看结果。</p><p>测试场景如下：</p><p><img src="/images/Unity3D/Unity_FindObj/2021060414290421.png" alt="img"></p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>测试代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找同名物体</span></span><br><span class="line">GameObject nameObj = GameObject.Find(<span class="string">&quot;GameObject&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;找同名，是否找到：&quot;</span> + nameObj.tag);</span><br></pre></td></tr></table></figure><p>测试结果: 查找顺序是：“自身”(挂载脚本的物体) –&gt; 和自身同层级上面物体 –&gt; 和自身同层级下面物体 –&gt; 自身子物体 –&gt; 自身父物体。</p><p><img src="/images/Unity3D/Unity_FindObj/2021060414290422.png" alt="img"></p><h2 id="Object-Find-得出结论："><a href="#Object-Find-得出结论：" class="headerlink" title="Object.Find()得出结论："></a>Object.Find()得出结论：</h2><ol><li>全局查找参数名称游戏物体；</li><li>不对禁用(隐藏)物体进行查找；</li><li>若有同名物体时根据层级关系进行查找。</li></ol><p><strong>使用建议: 有同名物体存在时，尽量不要使用<code>Object.Find()</code>进行查找，或者说使用<code>Object.Find()</code>进行查找时，应控制查找物体命名唯一。</strong></p><h1 id="FindGameObjectWithTag"><a href="#FindGameObjectWithTag" class="headerlink" title="FindGameObjectWithTag()"></a>FindGameObjectWithTag()</h1><p><code>GameObject.FindGameObjectWithTag()</code> 根据标签查找游戏物体并返回。<br> <code>GameObject.FindGameObjectsWithTag()</code> 根据标签查找当前场景中所有这个标签的游戏物体并返回所有物体的数组。</p><p>将如下场景：除主摄像机<del>(Main Camera)外的所有游戏物体的标签(Tag)</del>都修改为Player，进行测试。</p><p><img src="/images/Unity3D/Unity_FindObj/2021060414290423.png" alt="img"></p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p>测试代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GameObjectFindWithTag</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    GameObject tagObj = GameObject.FindGameObjectWithTag(<span class="string">&quot;MainCamera&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;根据标签查找游戏物体，是否查到：&quot;</span> + (tagObj != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    GameObject[] tagObjs = GameObject.FindGameObjectsWithTag(<span class="string">&quot;Player&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; tagObjs.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;根据标签查找游戏物体名称：&quot;</span> + tagObjs[i].name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="/images/Unity3D/Unity_FindObj/2021060414290424.png" alt="img"></p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><p>查找不存在的标签测试:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GameObject tagObj = GameObject.FindGameObjectWithTag(&quot;MainCamera1&quot;);</span><br><span class="line">Debug.Log(&quot;根据标签查找游戏物体，是否查到：&quot; + (tagObj != null));</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/Unity_FindObj/2021060414290525.png" alt="img"></p><p>报错:<code>UnityException: Tag: MainCamera1 is not defined.</code> 翻译: MainCamera1是一个未定义的标签</p><h2 id="FindGameObjectWithTag-得出结论："><a href="#FindGameObjectWithTag-得出结论：" class="headerlink" title="FindGameObjectWithTag()得出结论："></a>FindGameObjectWithTag()得出结论：</h2><ul><li>查找不到禁用物体，使用时需确认要查找的物体是启用(显示)状态；</li><li>有多个有游戏物体使用同一标签时，尽量不使用FindGameObjectWithTag此方式查找单一游戏体，因为查找顺序会受到层级影响；</li><li>查找未定义标签会报错，使用时需确认查找的字符串是已定义的标签；</li><li>查找的标签是已定义但是未使用过，会找不到游戏物体，返回空值。</li></ul><h1 id="GameObject-FindObjectOfType"><a href="#GameObject-FindObjectOfType" class="headerlink" title="GameObject.FindObjectOfType()"></a>GameObject.FindObjectOfType()</h1><p>和上面根据标签查找的逻辑差不多。</p><p><code>GameObject.FindObjectOfType&lt;类型&gt;();</code> :根据类型(组件&#x2F;自定义脚本)查找并返回这个类。</p><p><code>GameObject.FindObjectsOfType&lt;类型&gt;()</code> :根据类型(组件&#x2F;自定义脚本)查找当前场景中所有这个类并返回一个这个类的数组。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindObjectOfType</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">     Camera typeCamera = GameObject.FindObjectOfType&lt;Camera&gt;();</span><br><span class="line">     Debug.Log(<span class="string">&quot;根据类型查找物体，是否查到：&quot;</span> + (typeCamera != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">     Transform[] typeTransArr = GameObject.FindObjectsOfType&lt;Transform&gt;();</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; typeTransArr.Length; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         Debug.Log(<span class="string">&quot;根据类型查找到的物体名称：&quot;</span> + typeTransArr[i].name);</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/Unity_FindObj/2021060414290626.png" alt="img"></p><h2 id="FindObjectOfType-得出结论："><a href="#FindObjectOfType-得出结论：" class="headerlink" title="FindObjectOfType()得出结论："></a>FindObjectOfType()得出结论：</h2><ul><li>查找不到禁用物体，使用时需确认要查找的物体是启用(显示)状态；</li><li>查找场景中不存在类型时会返回null，不会报错；</li></ul><p>通常使用情况为：初始化时在一个脚本中获取另一个脚本的引用，通过这种形式查找。【后多被单例取代】</p><h1 id="Transform-Find"><a href="#Transform-Find" class="headerlink" title="Transform.Find()"></a>Transform.Find()</h1><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><p>查找挂载物体父级，同级，子级物体：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TransformFind</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 找父级</span></span><br><span class="line">    Transform parent = transform.Find(<span class="string">&quot;Root&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找父级物体，是否找到：&quot;</span> + (parent != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 找同级</span></span><br><span class="line">    Transform selfObj = transform.Find(<span class="string">&quot;Parent_1&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找同级物体，是否找到：&quot;</span> + (selfObj != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 找子级</span></span><br><span class="line">    Transform child = transform.Find(<span class="string">&quot;Child&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找子级物体，是否找到：&quot;</span> + (child != <span class="literal">null</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 找子级隐藏物体</span></span><br><span class="line">    Transform childHide = transform.Find(<span class="string">&quot;ChildHide&quot;</span>);</span><br><span class="line">    Debug.Log(<span class="string">&quot;找子级隐藏物体，是否找到：&quot;</span> + (childHide != <span class="literal">null</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/Unity_FindObj/2021060414290627.png" alt="img"></p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><p>找多层级子物体：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 找二级子物体</span></span><br><span class="line">Transform child_1 = transform.Find(<span class="string">&quot;Child_1_1&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;找二级子物体 参数只写名称，是否找到：&quot;</span> + (child_1 != <span class="literal">null</span>));</span><br><span class="line"><span class="comment">// 找二级子物体</span></span><br><span class="line">Transform child_1_1 = transform.Find(<span class="string">&quot;Child/Child_1_1&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;找二级子物体 参数写全路径，是否找到：&quot;</span> + (child_1_1 != <span class="literal">null</span>));</span><br></pre></td></tr></table></figure><p><img src="/images/Unity3D/Unity_FindObj/2021060414290628.png" alt="img"></p><h2 id="Find-得出结论："><a href="#Find-得出结论：" class="headerlink" title="Find()得出结论："></a>Find()得出结论：</h2><ul><li>只能找其子物体，不能找其同级或更高层级物体</li><li>找子物体时不考虑是否被禁用（隐藏）</li><li>找多层子物体时需写全路径（否则即使存在也找不到）</li></ul><h1 id="Transform-FindObjectOfType"><a href="#Transform-FindObjectOfType" class="headerlink" title="Transform.FindObjectOfType()"></a>Transform.FindObjectOfType()</h1><p>经过测试和<code>GameObject.FindObjectOfType()</code>没什么区别，测试结果一致，测试代码和截图就不发处理占地方了。</p><p>测试时我发现 <code>GameObject.FindObjectsOfType&lt;类型&gt;()</code>和<code>Transform.FindObjectsOfType()</code> 被合并了，应该说完全是一个方法了，根据下图可以看到，我虽然前打的是<code>Transform</code>的标签，但是它是灰色的，鼠标放上去看到方法引用的却是<code>GameObject.FindObjectsOfType</code>。</p><p><img src="/images/Unity3D/Unity_FindObj/2021060414290629.png" alt="img"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>得出结论：<br> Transform.FindObjectOfType() 和 GameObject.FindObjectOfType()使用方式一样，结果也没有区别…</p><h1 id="transform-GetChild"><a href="#transform-GetChild" class="headerlink" title="transform.GetChild()"></a>transform.GetChild()</h1><p><code>Transform.GetChild()</code>是找子物体的方法，也是我个人比较喜欢用的方式，弊端是不能随意修改游戏物体的层级关系。</p><p>使用起来也很简单</p><h2 id="实例-7"><a href="#实例-7" class="headerlink" title="实例"></a>实例</h2><p>比如:找一级子物体的第一个物体</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Transform child1 = transform.GetChild(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>找一级子物体的第一个物体的第三个子物体</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Transform child1 = transform.GetChild(<span class="number">0</span>).GetChild(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>使用方式：几个层级就几个<code>GetChild()</code>,参数就是当前层级的第几个物体（从0开始）</p><p>使用拓展：</p><p>遍历子物体:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; transform.childCount; i++)</span><br><span class="line">&#123;</span><br><span class="line">     Debug.Log(transform.transform);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取当前物体的父物体<code>transform.parent</code></p><p>获取当前物体的根物体<code>transform.root</code></p><h2 id="transform-GetChild-使用总结："><a href="#transform-GetChild-使用总结：" class="headerlink" title="transform.GetChild()使用总结："></a>transform.GetChild()使用总结：</h2><ul><li>以自身为基础，查找子物体（注意索引从0开始，写多报错）</li><li>可以使用transform.parent.parent 的形式无限向上，然后再GetChild()，就达到了查找父层级或更高层级物体的目的</li><li>弊端是依赖游戏物体的层级关系，使用时需确保层级关系相对稳定。若不稳定会导致每次修改游戏体时还要修改代码，这就加大了工作量了。</li></ul><div style="display:none">- [Unity查找游戏物体的六种方式详解](https://www.zhangshengrong.com/p/9Oab8pQ5Xd/)- 表 [最清晰的Unity查找物体的几种方法及优缺点详解!其他教程有很多没注意的地方,请看这里!](https://blog.csdn.net/heliocentricism/article/details/109062975)- </div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gameobject,gameObject,Transform,transform的区别和关联</title>
      <link href="/2018/04/03/Unity3D/03Unity_GgTt/"/>
      <url>/2018/04/03/Unity3D/03Unity_GgTt/</url>
      
        <content type="html"><![CDATA[<h1 id="Gameobject和gameobject"><a href="#Gameobject和gameobject" class="headerlink" title="Gameobject和gameobject"></a>Gameobject和gameobject</h1><ul><li>Gameobject是一个类型，所有的游戏物件都是这个类型的对象。</li><li>gameobject是一个对象， 就跟java里面的this一样， 指的是这个脚本所附着的游戏物件</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ShowSliderValue</span> : <span class="title">MonoBehaviour</span> </span><br><span class="line">&#123;    </span><br><span class="line">    <span class="keyword">private</span> GameObject  obje; <span class="comment">//定义GameObject类型的指针 </span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span>&#123; </span><br><span class="line">        Text  lal =gameObject.GetComponent&lt;Text&gt; (); <span class="comment">//通过gameObject获取到Text组件. </span></span><br><span class="line">        Debug.Log (<span class="string">&quot;Text&quot;</span> + lal.text); <span class="comment">//打印获取到组件的中的text的属性 </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><code>Text  lal =gameObject.GetComponent&lt;Text&gt; () </code>中不使用<code>gameObject </code>, 直接通过<code>GetComponent&lt;Text&gt; ()</code>,也是可以的.</p><h1 id="Transform和transform"><a href="#Transform和transform" class="headerlink" title="Transform和transform"></a>Transform和transform</h1><p><strong>Transform</strong>是一个类，用来描述物体的位置，大小，旋转等等信息。<br><strong>transform</strong>是Transform类的对象，依附于每一个物体。也是当前游戏对象的一个组件(每个对象都会有这个组件)</p><h1 id="transform与gameObject"><a href="#transform与gameObject" class="headerlink" title="transform与gameObject"></a><strong>transform与gameObject</strong></h1><ol><li><p>二者的含义</p><ul><li>transform :  当前游戏对象的transform组件</li><li>gameobject ：当前游戏对象的实例</li></ul></li><li><p>两者的联系和区别</p><ul><li><p>在unity中每个游戏对象都是一个gameobject. monodevelop中的gameobject就代表着本脚本所依附的对象。每个gameobject都包含各种各样的组件，但从这点可以看出transform是gameobject的一个组件，控制着gameobject的位置，缩放，和旋转，而且每个gameobject都有而且必有一个transform组件</p></li><li><p>gameobject.find用来获取场景中那个我们需要查找的对象(object).  而transform.find方法则是获取当前对象的子对象下我们需要获取的目标对象位置信息。</p></li><li><p>注意: 在update() 中尽量不使用find() 方法，影响性能.</p></li></ul></li><li><p>gameobject.transform与transform.gameobject</p><ul><li>gameobject.transform,是获取当前游戏对象的transform组件.所以在start函数中 gameobject.transform 和this.transform,指向的都是同一个对象。即：gameobject.transform &#x3D;&#x3D; this.transform &#x3D;&#x3D; transform</li><li>transform.gameobject:可以这么理解为：获取当前transform组件所在的gameobect<br>​      所以在start()函数中transform.gameobject &#x3D;&#x3D; this.gameobject &#x3D;&#x3D; gameobect</li><li>所以他们可以无限的引用下去</li></ul></li><li><p>总结</p><ul><li>gameobject.transform &#x3D;&#x3D; this.transform &#x3D;&#x3D; gameobject.transform.gameobject.tranform &#x3D;&#x3D; tranform.gameobect.transform*</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public class ShowSliderValue : MonoBehaviour </span><br><span class="line">&#123;    </span><br><span class="line">    private GameObject  obje; //定义GameObject类型的指针 </span><br><span class="line">    private Transform   trans;//定义Transform类型的指针 </span><br><span class="line">   </span><br><span class="line">    void Start()&#123; </span><br><span class="line">        Debug.Log (&quot;gameObject.name:&quot; + gameObject.name); </span><br><span class="line">        Debug.Log (&quot;gameObject.transform.gameObject.name:&quot; + gameObject.transform.gameObject.name); </span><br><span class="line">        Debug.Log (&quot;ThisGame.name:&quot; + this.gameObject.name); </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="display:none">- [Unity3d 之 理解Gameobject ,gameObject,Transform,transform的区别和关联](https://www.cnblogs.com/tanrong/p/6913203.html)</div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity常用的基础 API</title>
      <link href="/2018/04/03/Unity3D/03Unity_API/"/>
      <url>/2018/04/03/Unity3D/03Unity_API/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity常用的基础-API"><a href="#Unity常用的基础-API" class="headerlink" title="Unity常用的基础 API"></a>Unity常用的基础 API</h1><ul><li>在线手册<ul><li><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/index.html">Unity 脚本API 2020.02</a></li><li><a href="http://www.ddooo.com/softdown/94761.htm">unity5圣典中文API手册.chm</a></li></ul></li><li>组件</li><li>坐标系</li><li>鼠标事件</li><li>Time类</li><li>Vector3</li><li>Transform</li><li>Gameobject </li><li>lnput类</li></ul><h1 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h1><h2 id="Transform组件的成员变量"><a href="#Transform组件的成员变量" class="headerlink" title="Transform组件的成员变量"></a>Transform组件的成员变量</h2><table><thead><tr><th><strong>组件名称</strong></th><th><strong>组件作用</strong></th></tr></thead><tbody><tr><td>position</td><td>世界坐标中的位置</td></tr><tr><td>localPosition</td><td>父对象局部坐标系中的位置</td></tr><tr><td>enlerAngles</td><td>世界坐标系中以欧拉角表示的旋转</td></tr><tr><td>localEulerAngles</td><td>父对象局部坐标系中的欧拉角</td></tr><tr><td>right</td><td>对象在世界坐标系中的右方向</td></tr><tr><td>up</td><td>对象在世界坐标系中的上方向</td></tr><tr><td>forward</td><td>对象在世界坐标系中的前方向</td></tr><tr><td>rotation</td><td>世界坐标系中以以元数表示的旋转</td></tr><tr><td>localRotation</td><td>父对象局部坐标系中以四元数表示的旋转</td></tr><tr><td>localScale</td><td>父对象局部坐标系中的缩放比例</td></tr><tr><td>parent</td><td>父对象的Transform组件</td></tr></tbody></table><h2 id="Transform组件的成员函数"><a href="#Transform组件的成员函数" class="headerlink" title="Transform组件的成员函数"></a>Transform组件的成员函数</h2><table><thead><tr><th><strong>组件名称</strong></th><th><strong>组件作用</strong></th></tr></thead><tbody><tr><td>Translate</td><td>按指定的方向和距离平移</td></tr><tr><td>Rotate</td><td>按指定的欧拉角旋转</td></tr><tr><td>RotateAround</td><td>按给定旋转轴和旋转角度进行旋转</td></tr><tr><td>LookAt</td><td>旋转使得自身的前方向指向目标的位置</td></tr><tr><td>TransformDirection</td><td>将一个方向从局部坐标变换到世界坐标系</td></tr><tr><td>InverseTransformDirection</td><td>将一个方向从世界坐标系变换到局部坐标系</td></tr><tr><td>TransformPoint</td><td>将一个位置从局部坐标系变量换到世界坐标系</td></tr><tr><td>InverseTransformPoint</td><td>将一个位置从世界坐标系变换到局部坐标系</td></tr><tr><td>Find</td><td>按名称查找子对象</td></tr><tr><td>IsChildOf</td><td>判断是否是指定对象的子对象</td></tr></tbody></table><h2 id="transform-Rotate"><a href="#transform-Rotate" class="headerlink" title="transform.Rotate"></a>transform.Rotate</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Update is called once per frame0个引用</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span> &#123;</span><br><span class="line"><span class="comment">// transform.Rotate(new Vector3(10,0,0));</span></span><br><span class="line"><span class="comment">//transform.Rotate(new Vector3(0,1,0),10);</span></span><br><span class="line"><span class="comment">//以自身为坐标系进行旋转,这时候跟自身坐标系有很大关系</span></span><br><span class="line"><span class="comment">//transform.Rotate(new Vector3(10,0,0),Space.Self);</span></span><br><span class="line">transform.Rotate(<span class="number">10</span>,<span class="number">0</span>,<span class="number">0</span>, Space.World);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>按照API要求的参数进行数值传递；</li><li>Space.Self 和 Space.World 区别：<ul><li>Space.Self以自身为参考系来进行旋转；</li><li>Space.World 是以世界坐标系为参考系的；</li></ul></li></ol><h2 id="transform-RotateAround"><a href="#transform-RotateAround" class="headerlink" title="transform.RotateAround"></a>transform.RotateAround</h2><p>游戏物体绕某一个点沿着某个轴进行旋转</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">transform.RotateAround(target.transform.position, Vector3.up, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>游戏物体绕某一个点沿着某个轴进行旋转</p><h2 id="Transform-Translate"><a href="#Transform-Translate" class="headerlink" title="Transform.Translate"></a>Transform.Translate</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// transform.position += new Vector3(0.01f,0,0);</span></span><br><span class="line"><span class="comment">//transform. ranslate(new Vector3(0.01f,0, 0), Space.World);</span></span><br><span class="line"><span class="comment">//第一个参数是移动的量第二个参数:移动方向的参考系</span></span><br><span class="line"><span class="comment">//transform.Translate(new Vector3(0.01f,0,0), target.transform);</span></span><br><span class="line">transform.Translate(<span class="number">0.01f</span>,<span class="number">0</span>,<span class="number">0</span>, target.transform);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Translate移动增量,如果需要移动游戏物体,就需要写在update里</p><h2 id="LookAt"><a href="#LookAt" class="headerlink" title="LookAt"></a>LookAt</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//看向目标游戏物体,当前游戏物体的z轴方向指向目标方向</span></span><br><span class="line">transform.LookAt (target.transform);</span><br><span class="line"><span class="comment">//调试使用的划线</span></span><br><span class="line">Debug.DrawLine(transform. position,target.transform.position, Color.red) ; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="GameObject和Transform"><a href="#GameObject和Transform" class="headerlink" title="GameObject和Transform"></a>GameObject和Transform</h2><p>在代码中更深入理解GameObject和Transform</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject target;</span><br><span class="line"><span class="keyword">public</span> Transform target_transform;</span><br><span class="line">transform.parent = target.transform;</span><br><span class="line">transform.parent = target_transform;</span><br></pre></td></tr></table></figure><p>因为GameObject肯定有Transform组件，所有这样做target.transform；<br>因为Transform不能独立存在，必然存活于游戏物体，所以可以这样做target_transform.gameObject;</p><h2 id="设置父物体"><a href="#设置父物体" class="headerlink" title="设置父物体"></a>设置父物体</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//target.transform</span></span><br><span class="line"><span class="comment">//target_transform.game0bject</span></span><br><span class="line"><span class="comment">//transform.parent = target.transform;</span></span><br><span class="line"><span class="comment">//transform.parent = target_transform;</span></span><br><span class="line">transform.SetParent(target_transform);</span><br><span class="line">transform.SetParent(target.transform);</span><br></pre></td></tr></table></figure><h2 id="查找子物体"><a href="#查找子物体" class="headerlink" title="查找子物体"></a>查找子物体</h2><ul><li>Transform查找子物体API：</li><li>transform.childCount：子物体的数量；</li><li>transform.GetChild(i)；根据index来查找子物体，特性：子物体的子物体是不会管的；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Transform t = transform.Find(<span class="string">&quot;Cube (2)&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (t != <span class="literal">null</span>)</span><br><span class="line">Debug.Log(<span class="string">&quot;t:&quot;</span> + t.name);</span><br></pre></td></tr></table></figure><p>根据游戏物体的名字来进行精确查找；也不会搜索子物体的子物体；</p><h1 id="GameObject"><a href="#GameObject" class="headerlink" title="GameObject"></a>GameObject</h1><h2 id="通过名字查找游戏物体"><a href="#通过名字查找游戏物体" class="headerlink" title="通过名字查找游戏物体"></a>通过名字查找游戏物体</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GameObject go = GameObject.Find(<span class="string">&quot;GameObject&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (go)</span><br><span class="line">Debug.Log(<span class="string">&quot;go:&quot;</span> + go.name);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Debug.Log(<span class="string">&quot;没有找到&quot;</span>);</span><br><span class="line">GameObject.Find(<span class="string">&quot;GameObject&quot;</span>);</span><br></pre></td></tr></table></figure><p>能根据游戏物体名字在所有场景内游戏物体中查找，好用但是效率很低，谨慎使用；</p><h2 id="通过Tag来进行查找游戏物体"><a href="#通过Tag来进行查找游戏物体" class="headerlink" title="通过Tag来进行查找游戏物体"></a>通过Tag来进行查找游戏物体</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当有多个tag是NPC的时候。查找到的是最后创建的tag是NPC的游戏物体</span></span><br><span class="line"><span class="comment">//查找游戏物体tag是NPC</span></span><br><span class="line">Game0bject go = GameObject.FindGame0bjectWithTag (<span class="string">&quot;NPC&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (go)</span><br><span class="line">Debug.Log(<span class="string">&quot;go:&quot;</span>+ go.name);</span><br><span class="line"><span class="comment">//当游戏场景中有多个游戏物体tag是NPC,同时查找到，并返回一个游戏物体数组</span></span><br><span class="line">Game0bject[] gos = GameObject.FindGameObjectsWithTag(<span class="string">&quot;NPC&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i =<span class="number">0</span>; i&lt; gos. Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">Debug. Log(<span class="string">&quot;name:&quot;</span> + gos[i].name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h1><h2 id="Time的静态变量"><a href="#Time的静态变量" class="headerlink" title="Time的静态变量"></a>Time的静态变量</h2><table><thead><tr><th><strong>静态变量</strong></th><th><strong>变量作用</strong></th></tr></thead><tbody><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-captureDeltaTime.html">captureDeltaTime</a></td><td>减慢游戏播放时间，以便在帧之间保存屏幕截图。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-captureFramerate.html">captureFramerate</a></td><td>Time.captureDeltaTime 的倒数。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-deltaTime.html">deltaTime</a></td><td>完成上一帧所用的时间（以秒为单位）（只读）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-fixedDeltaTime.html">fixedDeltaTime</a></td><td>执行物理和其他固定帧率更新（如 MonoBehaviour 的 FixedUpdate）的时间间隔（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-fixedTime.html">fixedTime</a></td><td>最近一次 FixedUpdate 已启动的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-fixedTimeAsDouble.html">fixedTimeAsDouble</a></td><td>最近一次 FixedUpdate 已启动的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-fixedUnscaledDeltaTime.html">fixedUnscaledDeltaTime</a></td><td>从上一个固定帧到当前固定帧的独立于 timeScale 的时间间隔（以秒为单位）（只读）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-fixedUnscaledTime.html">fixedUnscaledTime</a></td><td>最近一次 FixedUpdate 已启动的独立于 TimeScale 的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-fixedUnscaledTimeAsDouble.html">fixedUnscaledTimeAsDouble</a></td><td>最近一次 FixedUpdate 已启动的独立于 TimeScale 的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-frameCount.html">frameCount</a></td><td>已经过的总帧数（只读）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-inFixedTimeStep.html">inFixedTimeStep</a></td><td>如果在固定时间步长回调（如 MonoBehaviour 的 FixedUpdate）内调用，则返回 true，否则返回 false。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-maximumDeltaTime.html">maximumDeltaTime</a></td><td>帧可以耗用的最长时间。物理和其他固定帧率更新（如 MonoBehaviour 的 FixedUpdate）将仅在每帧的该持续时间内执行。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-maximumParticleDeltaTime.html">maximumParticleDeltaTime</a></td><td>帧可以在粒子更新上耗用的最长时间。如果帧耗用的时间超过该值，则将更新拆分为多个较小的更新。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-realtimeSinceStartup.html">realtimeSinceStartup</a></td><td>游戏开始以来的实际时间（只读）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-realtimeSinceStartupAsDouble.html">realtimeSinceStartupAsDouble</a></td><td>The real time in seconds since the game started (Read Only). Double precision version of realtimeSinceStartup. This offers more precision than a float or single value, particularly over extended periods of real-world time. In almost all cases, choose the realtimeSinceStartupAsDouble equivalent over realtimeSinceStartup.</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-smoothDeltaTime.html">smoothDeltaTime</a></td><td>经过平滑处理的 Time.deltaTime（只读）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-time.html">time</a></td><td>该帧开始的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-timeAsDouble.html">timeAsDouble</a></td><td>该帧开始的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-timeScale.html">timeScale</a></td><td>时间流逝的标度。可用于慢动作效果。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-timeSinceLevelLoad.html">timeSinceLevelLoad</a></td><td>该帧开始以来的时间（只读）。此为自加载上一个关卡以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-timeSinceLevelLoadAsDouble.html">timeSinceLevelLoadAsDouble</a></td><td>该帧开始以来的时间（只读）。此为自加载上一个关卡以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-unscaledDeltaTime.html">unscaledDeltaTime</a></td><td>从上一帧到当前帧的独立于 timeScale 的时间间隔（以秒为单位）（只读）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-unscaledTime.html">unscaledTime</a></td><td>该帧的独立于 timeScale 的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr><tr><td><a href="https://docs.unity.cn/cn/2020.2/ScriptReference/Time-unscaledTimeAsDouble.html">unscaledTimeAsDouble</a></td><td>该帧的独立于 timeScale 的时间（只读）。此为自游戏启动以来的时间（以秒为单位）。</td></tr></tbody></table><h2 id="Time-deltaTime"><a href="#Time-deltaTime" class="headerlink" title="Time.deltaTime"></a>Time.deltaTime</h2><ul><li>关于 Time.deltaTime 的使用：表示距离上一帧的执行所耗费的时间，0到1小数（秒）。</li><li>具体使用场景：场景中的游戏对象在移动或旋转时，默认速度较快，所以一般做法是参数乘以自己定义的一个小数以此来降低速度。但出现deltaTime后，小数可使用此来替代，也就是直接乘以Time.delta 也一样可以实现了；<br>普通更新操作放在 Update()中，但Update() 方法每一帧与每一帧执行时耗用时间不相同，如何解决呢？前提是不能写在 FixedUpdate()中，可以这样：直接乘以 Time.deltaTime 便可实现该功能</li></ul><h2 id="匀速移动"><a href="#匀速移动" class="headerlink" title="匀速移动"></a>匀速移动</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ObjTrans1Script</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line"><span class="comment">//声明变量speed,表示移动速度</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> speed;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span> ()</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//为speed变量赋值操作</span></span><br><span class="line">speed = <span class="number">2.5f</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Update()以帧为单位更新场景</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span> ()</span> &#123;</span><br><span class="line"><span class="comment">//实现cube向前移动操作.注意:</span></span><br><span class="line"><span class="comment">/*Time.deltaTime是按照每秒来统计.</span></span><br><span class="line"><span class="comment">*通常:Time.deltaTime*一个数字,</span></span><br><span class="line"><span class="comment">表示让这个*物体以每秒钟**米的速度移动而不是每帧*米**/</span></span><br><span class="line">transform.Translate(Vector3.forward*Time.deltaTime*speed);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="匀速旋转"><a href="#匀速旋转" class="headerlink" title="匀速旋转"></a>匀速旋转</h2><p>实现物体在一个匀速的速度下旋转，不依赖帧的速率。核心代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine ;</span><br><span class="line"><span class="keyword">using</span> System.Collections ;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">example</span>:<span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//以y轴为中心进行旋转，每次旋转5个单位</span></span><br><span class="line">        transform.Rotate(<span class="number">0</span>，<span class="number">5</span> * Time.deltaTime,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="timeScale"><a href="#timeScale" class="headerlink" title="timeScale"></a>timeScale</h2><p>timeScale实现游戏暂停<br>使用 Time.timeScale 一般可制作游戏中暂停的效果。</p><h1 id="Random"><a href="#Random" class="headerlink" title="Random"></a>Random</h1><h2 id="Random静态变量"><a href="#Random静态变量" class="headerlink" title="Random静态变量"></a>Random静态变量</h2><table><thead><tr><th><strong>静态变量</strong></th><th><strong>变量作用</strong></th><th><strong>作用汉译</strong></th></tr></thead><tbody><tr><td>insideUnitCircle</td><td>Returns a random point inside a circle with radius 1 (Read  Only).</td><td>随机返回一个半径为1的圆内的点（只读）。</td></tr><tr><td>insideUnitSphere</td><td>Returns a random point inside a sphere with radius 1 (Read  Only).</td><td>随机返回一个半径为1的球体内的点（只读）。</td></tr><tr><td>onUnitSphere</td><td>Returns a random point on the surface of a sphere with radius 1  (Read Only).</td><td>随机返回一个单位球体表面上的点（只读）。</td></tr><tr><td>rotation</td><td>Returns a random rotation (Read  Only).</td><td>随机返回一个（用四元数表示的）角度（只读）。</td></tr><tr><td>rotationUniform</td><td>Returns a random rotation with uniform distribution (Read  Only).</td><td>随机返回一个均匀分布的旋转角度（只读） 。</td></tr><tr><td>seed</td><td>Sets the seed for the random number  generator.</td><td>给随机数发生器设置种子。</td></tr><tr><td>value</td><td>Returns a random number between 0.0 [inclusive] and 1.0  [inclusive] (Read Only).</td><td>返回一个0.0（包括）到1.0（包括）之间的随机数（只读）。</td></tr></tbody></table><h2 id="Random静态函数"><a href="#Random静态函数" class="headerlink" title="Random静态函数"></a>Random静态函数</h2><table><thead><tr><th><strong>静态函数</strong></th><th><strong>变量作用</strong></th></tr></thead><tbody><tr><td>ColorHSV</td><td>通过 HSV 和 Alpha 范围生成随机颜色。</td></tr><tr><td>InitState</td><td>使用种子初始化随机数生成器状态。</td></tr></tbody></table><h1 id="Mathf-类"><a href="#Mathf-类" class="headerlink" title="Mathf 类"></a>Mathf 类</h1><p>在 Unity 中封装了数学类 Mathf，使用它可以轻松地解决复杂的数学公式。Mathf 类提供了常用的数学运算，下表列出了常用的 Mathf 类变量和方法，完整的资料请参阅用户手册。</p><h2 id="SmoothDamp"><a href="#SmoothDamp" class="headerlink" title="SmoothDamp()"></a>SmoothDamp()</h2><p>SmoothDamp()制作相机跟踪效果<br>Mathf.SmoothDamp() 方法可以制作相机的跟踪效果，让物体的移动不是那么僵硬而是做减速的缓冲效果。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Mathf.SmoothDampAngle() 平滑阻尼角度 </span></span><br><span class="line"><span class="function"><span class="keyword">static</span> function <span class="title">SmoothDampAngle</span> (<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    current :<span class="built_in">float</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">    target : <span class="built_in">float</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">ref</span> currentVelocity : <span class="built_in">float</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    smoothTime : <span class="built_in">float</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    maxSpeed : <span class="built_in">float</span> = Mathf.Infinity, </span></span></span><br><span class="line"><span class="params"><span class="function">    deltaTime : <span class="built_in">float</span> = Time.deltaTime</span></span></span><br><span class="line"><span class="params"><span class="function">    </span>) </span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function"><span class="comment">//float  参数 </span></span></span><br><span class="line"><span class="function"><span class="comment">//current  当前的位置。</span></span></span><br><span class="line"><span class="function"><span class="comment">//target  我们试图达到的位置。 </span></span></span><br><span class="line"><span class="function"><span class="comment">//currentVelocity  当前速度，这个值在你访问这个函数的时候会被随时修改。  </span></span></span><br><span class="line"><span class="function"><span class="comment">//smoothTime  the target faster.  要到达目标位置的近似时间，实际到达目标时要快一些。  </span></span></span><br><span class="line"><span class="function"><span class="comment">//maxSpeed  可选参数，允许你限制的最大速度。 </span></span></span><br><span class="line"><span class="function"><span class="comment">//deltaTime  上次调用该函数到现在的时间。缺省为Time.deltaTime。 </span></span></span><br></pre></td></tr></table></figure><h2 id="制作相机跟踪效果"><a href="#制作相机跟踪效果" class="headerlink" title="制作相机跟踪效果"></a>制作相机跟踪效果</h2><p>随着时间的推移逐渐改变一个给定的角度到期望的角度。 <br>这个值通过一些弹簧减震器类似的功能被平滑。<br>这个函数可以用来平滑任何一种值，位置，颜色，标量。最常见的是平滑一个跟随摄像机。  </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个简单的平滑跟随摄像机  </span></span><br><span class="line"><span class="comment">//跟随目标的朝向 </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">example</span> : <span class="title">MonoBehaviour</span> &#123;              </span><br><span class="line">    publicTransform target;              </span><br><span class="line">    publicfloat smooth = <span class="number">0.3F</span>;             </span><br><span class="line">    publicfloat distance = <span class="number">5.0F</span>;              </span><br><span class="line">    privatefloat yVelocity = <span class="number">0.0F</span>;              </span><br><span class="line">    voidUpdate() </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="comment">//从目前的y角度变换到目标y角度                          </span></span><br><span class="line">        floatyAngle = Mathf.SmoothDampAngle(transform.eulerAngles.y, target.eulerAngles.y,<span class="keyword">ref</span> yVelocity, smooth);  </span><br><span class="line">        <span class="comment">//target的位置                          </span></span><br><span class="line">        Vector3position = target.position;  </span><br><span class="line">        <span class="comment">//然后，新角度之后的距离偏移                          </span></span><br><span class="line">        position+= Quaternion.Euler(<span class="number">0</span>, yAngle, <span class="number">0</span>) * <span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, -distance);  </span><br><span class="line">        <span class="comment">//应用位置                         </span></span><br><span class="line">        transform.position= position;  </span><br><span class="line">        <span class="comment">//看向目标                         </span></span><br><span class="line">        transform.LookAt(target);              </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h1><h2 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当A键摁下瞬间执行一次</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.A))</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//B键摁下时执行，执行次数大于1</span></span><br><span class="line"><span class="keyword">if</span>(Input.GetKey(KeyCode.B))</span><br><span class="line">&#123;</span><br><span class="line">    Debug. Log(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//C键被摁下抬起时瞬间执行一次</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyUp(KeyCode.C))</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="鼠标输入"><a href="#鼠标输入" class="headerlink" title="鼠标输入"></a>鼠标输入</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0:代表的是鼠标左键</span></span><br><span class="line"><span class="comment">//1:代表的是鼠标右键</span></span><br><span class="line"><span class="comment">//2:代表的是鼠标中键</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetMouseButton(<span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Input.GetMouseButton(<span class="number">2</span>))</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="摇杆输入-轴值获取"><a href="#摇杆输入-轴值获取" class="headerlink" title="摇杆输入(轴值获取)"></a>摇杆输入(轴值获取)</h2><p>一般我们称输入轴为， Axis，又叫虚拟轴。　<br>输入轴（虚拟轴）用于模拟一些游戏外设平滑变化的输入。<br>例如：模拟鼠标、键盘、摇杆、方向盘等外设的输入变化。具体如何模拟呢，其实就是开发人员根据用户平时使用外设的一些习惯，在编程时将这些习惯映射为外设上的一些虚拟按键，日后使用时可直接按虚拟按键便可使用对应的功能。<br>输入轴需要通过 Input  Manager 输入管理器中进行配置。<br>它包含两个虚拟按键（Positive Button 和 Negative Button）。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//摁下A键从0到-1会有很多随机的小数，渐变到-1</span></span><br><span class="line"><span class="built_in">float</span> h = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"><span class="built_in">float</span> v = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;h:&quot;</span>+ h+<span class="string">&quot;,V:&quot;</span>+v);</span><br><span class="line"><span class="comment">//值在-1 0 1三个值之间切换，不会有中间值进行渐变</span></span><br><span class="line"><span class="built_in">float</span> h1 = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"><span class="built_in">float</span> v1 = Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;h1:&quot;</span> + h1 +<span class="string">&quot;,V1:&quot;</span>+ v1);</span><br></pre></td></tr></table></figure><h2 id="按键检测"><a href="#按键检测" class="headerlink" title="按键检测"></a>按键检测</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检测鼠标左键</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetButtonDown(<span class="string">&quot;Fire1&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">Debug.Log(<span class="string">&quot;Fire1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="输入管理器"><a href="#输入管理器" class="headerlink" title="输入管理器"></a>输入管理器</h1><p>前面在使用 Input.GetAxis( 参数 )时，我们使用过4个参数：Mouse X 、Mouse Y、Horizontal、Vertical。<br>这几个参数值其实是Unity默认定义好的，我们也可以自行再使用其它熟识单词；<br>另外，我们也可以创建映射了特殊功能的虚拟按键，这些操作，都需要在输入管理器（Input  Manager）中配置。</p><h2 id="打开输入管理器"><a href="#打开输入管理器" class="headerlink" title="打开输入管理器"></a>打开输入管理器</h2><p><code>Edit--&gt;Project Settings--&gt;Input Manager</code><br>在右侧 Inspector面板中点击“Axes”，则会显示出Unity2017.3.默认的定义好的25个虚拟按键（版本不同，个数也不同）。</p><h1 id="访问组件"><a href="#访问组件" class="headerlink" title="访问组件"></a>访问组件</h1><p>在实际代码中，经常需要访问游戏对象的各种组件并为组件设置参数。对于系统内置的常用组件，Unity提供了非常便利的访问方式，只需要在脚本里直接访问组件对应的成员变量即可，这些成员变量定义在 MonoBehviour 中并被继承了下来</p><h2 id="常用组件"><a href="#常用组件" class="headerlink" title="常用组件"></a>常用组件</h2><p>常用组件及其变量，如下表所示：</p><table><thead><tr><th><strong>组件名称</strong></th><th><strong>变量名</strong></th><th><strong>组件作用</strong></th></tr></thead><tbody><tr><td>Transform</td><td>transform</td><td>设置对象的位置、旋转、缩放</td></tr><tr><td>Rigidbody</td><td>rigidbody</td><td>设置物理引擎的刚体属性</td></tr><tr><td>Renderer</td><td>renderer</td><td>渲染物体模型</td></tr><tr><td>Light</td><td>light</td><td>设置灯光属性</td></tr><tr><td>Camera</td><td>camera</td><td>设置相机属性</td></tr><tr><td>Collider</td><td>colider</td><td>设置碰撞体属性</td></tr><tr><td>Animation</td><td>animation</td><td>设置动画属性</td></tr></tbody></table><h2 id="访问组件的方法"><a href="#访问组件的方法" class="headerlink" title="访问组件的方法"></a>访问组件的方法</h2><p>如果要访问的组件不属于上表中，或者访问的是游戏上的脚本（脚本属于自定义组件），则可以通过以下方法来得到引用：</p><table><thead><tr><th><strong>GetComponent</strong></th><th><strong>得到组件</strong></th></tr></thead><tbody><tr><td>GetComponents</td><td>得到组件（用于有多个同类型组件的时候）</td></tr><tr><td>GetComponentlnChildren</td><td>得到对象或对象子物体上的组件</td></tr><tr><td>GetComponentslnChildren</td><td>得到对象或对象上物体上的组件列表</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity基础界面</title>
      <link href="/2018/04/02/Unity3D/02Unity_Usually/"/>
      <url>/2018/04/02/Unity3D/02Unity_Usually/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity-版本号与许可证"><a href="#Unity-版本号与许可证" class="headerlink" title="Unity 版本号与许可证"></a>Unity 版本号与许可证</h1><p><code>2017.1.0</code> 、<code>2017.1.1 </code>、<code> 2017.2.0</code> 、<code>2017.3.4 </code>、 <code>5.5.3  p4</code></p><p>小版本号高出现bug可能性更小；一台电脑可以安装多个版本的unity，但是需要安装在不同路径；安装Unity时不能有中文路径；unity项目路径也不要有中文<br><img src="/images/Unity3D/usually/UnityHub01.png" alt="许可证"></p><h1 id="菜单栏与快捷键"><a href="#菜单栏与快捷键" class="headerlink" title="菜单栏与快捷键"></a>菜单栏与快捷键</h1><p><img src="/images/Unity3D/usually/menu.png" alt="菜单栏"></p><h2 id="File-文件菜单"><a href="#File-文件菜单" class="headerlink" title="File (文件菜单)"></a>File (文件菜单)</h2><ul><li>File 菜单主要用于打开和保存场景项目，同时也可以创建新场景。</li><li>File 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>New Scene（新建场景）</td><td align="center">创建一个新的场景</td><td>Ctrl + N</td></tr><tr><td>Open Scene（打开场景）</td><td align="center">打开一个已经创建的场景</td><td>Ctrl + O</td></tr><tr><td>Save Scene（保存场景）</td><td align="center">保存当前场景</td><td>Ctrl + S</td></tr><tr><td>Save Scene As（另存场景）</td><td align="center">将当前场景另存为一个新场景</td><td>Ctrl + Shift + S</td></tr><tr><td>New Project（新建项目）</td><td align="center">新建一个项目</td><td>无</td></tr><tr><td>Open Project（打开项目）</td><td align="center">打开一个已经创建的项目</td><td>无</td></tr><tr><td>Save Project（保存项目）</td><td align="center">保存当前项目</td><td>无</td></tr><tr><td>Build Settings（发布设置）</td><td align="center">项目发布的相关设置</td><td>Ctrl + Shift + B</td></tr><tr><td>Build And Run（发布并执行）</td><td align="center">发布并运行项目</td><td>Ctrl + B</td></tr><tr><td>Exit （退出）</td><td align="center">退出 Unity 3D</td><td>无</td></tr></tbody></table><h2 id="Edit-编辑菜单"><a href="#Edit-编辑菜单" class="headerlink" title="Edit (编辑菜单)"></a>Edit (编辑菜单)</h2><ul><li>Edit 菜单用于场景对象的基本操作（如撤销、重做、复制、粘贴）以及项目的相关设置，具体功能及快捷键如下表所示。</li><li>Edit 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>Undo（撤销）</td><td align="center">撤销上一步操作</td><td>Ctrl + Z</td></tr><tr><td>Redo（重做）</td><td align="center">重做上一步操作</td><td>Ctrl + Y</td></tr><tr><td>Cut（剪切）</td><td align="center">将对象剪切到剪贴板</td><td>Ctrl + X</td></tr><tr><td>Copy（复制）</td><td align="center">将对象复制到剪贴板</td><td>Ctrl + C</td></tr><tr><td>Paste（粘贴）</td><td align="center">将剪贴板中的对象粘贴到当前位置</td><td>Ctrl + D</td></tr><tr><td>Delete（删除）</td><td align="center">删除对象</td><td>Shift + Del</td></tr><tr><td>Frame Selected（缩放窗口）</td><td align="center">平移缩放窗口至选择的对象</td><td>F</td></tr><tr><td>Look View to Selected（聚焦）</td><td align="center">聚焦到所选对象</td><td>Shift + F</td></tr><tr><td>Find（搜索）</td><td align="center">切换到搜索框，通过对象名称搜索对象</td><td>Ctrl + F</td></tr><tr><td>Select All（选择全部）</td><td align="center">选中所有对象</td><td>Ctrl + A</td></tr><tr><td>Preferences（偏好设置）</td><td align="center">设定 Unity 3D 编辑器偏好设置功能相关参数</td><td>无</td></tr><tr><td>Modules（模块）</td><td align="center">选择加载 Unity 3D 编辑器模块</td><td>无</td></tr><tr><td>Play （播放）</td><td align="center">执行游戏场景</td><td>Ctrl + P</td></tr><tr><td>Pause（暂停）</td><td align="center">暂停游戏</td><td>Ctrl + Shift + P</td></tr><tr><td>Step（单步执行）</td><td align="center">单步执行程序</td><td>Ctrl + Alt + P</td></tr><tr><td>Sign In（登录）</td><td align="center">登录到 Unity 3D 账户</td><td>无</td></tr><tr><td>Sign Out（退出）</td><td align="center">退出 Unity 3D 账户</td><td>无</td></tr><tr><td>Selection（选择）</td><td align="center">载入和保存已有选项</td><td>无</td></tr><tr><td>Project Settings（项目设置）</td><td align="center">设置项目相关参数</td><td>无</td></tr><tr><td>Graphics Emulation（图形仿真）</td><td align="center">选择图形仿真方式以配合一些图形加速器的处理</td><td>无</td></tr><tr><td>Network Emulation（网络仿真）</td><td align="center">选择相应的网络仿真方式</td><td>无</td></tr><tr><td>Snap Settings（吸附设置）</td><td align="center">设置吸附功能相关参数</td><td>无</td></tr></tbody></table><h2 id="Assets-资源菜单"><a href="#Assets-资源菜单" class="headerlink" title="Assets (资源菜单)"></a>Assets (资源菜单)</h2><ul><li>Assets 菜单主要用于资源的创建、导入、导出以及同步相关的功能。</li><li>Assets 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>Create（创建）</td><td align="center">创建资源（脚本、动画、材质、字体、贴图、物 理材质、GUI 皮肤等）</td><td>无</td></tr><tr><td>Show In Explorer（文件夹显7K））</td><td align="center">打开资源所在的目录位置</td><td>无</td></tr><tr><td>Open（打开）</td><td align="center">打开对象</td><td>无</td></tr><tr><td>Delete（删除）</td><td align="center">删除对象</td><td>无</td></tr><tr><td>Open Scene Additive（打开添加的场景）</td><td align="center">打开添加的场景</td><td>无</td></tr><tr><td>Import New Asset（导入新资源）</td><td align="center">导入新的资源</td><td>无</td></tr><tr><td>Import Package（导入资源包）</td><td align="center">导入资源包</td><td>无</td></tr><tr><td>Export Package（导出资源包）</td><td align="center">导出资源包</td><td>无</td></tr><tr><td>Find References in Scene（在场景中找出资源）</td><td align="center">在场景视图中找出所选资源</td><td>无</td></tr><tr><td>Select Dependencies（选择相关）</td><td align="center">选择相关资源</td><td>无</td></tr><tr><td>Refresh（刷新）</td><td align="center">刷新资源</td><td>无</td></tr><tr><td>Reimport （重新导入）</td><td align="center">将所选对象重新导入</td><td>无</td></tr><tr><td>Reimport All（重新导入所有）</td><td align="center">将所有对象重新导入</td><td>无</td></tr><tr><td>Run API Updater（运行 API 更新器）</td><td align="center">运行 API 更新器</td><td>无</td></tr><tr><td>Open C# Project（与 MonoDevelop 项目同步</td><td align="center">开启 MonoDevelop 并与项目同步</td><td>无</td></tr></tbody></table><h2 id="GameObject-游戏对象菜单"><a href="#GameObject-游戏对象菜单" class="headerlink" title="GameObject (游戏对象菜单)"></a>GameObject (游戏对象菜单)</h2><ul><li>GameObject 菜单主要用于创建、显示游戏对象，具体功能及快捷键如下表所示。</li><li>GameObject 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>Create Empty（创建空对象）</td><td align="center">创建一个空的游戏对象</td><td>Ctrl + Shift + N</td></tr><tr><td>Create Empty Child（创建空的子对象）</td><td align="center">创建其他组件（摄像机、接口文字与几何物 体等）</td><td>Alt + Shift + N</td></tr><tr><td>3D Object（3D 对象）</td><td align="center">创建三维对象</td><td>无</td></tr><tr><td>2D Object（2D 对象）</td><td align="center">创建二维对象</td><td>无</td></tr><tr><td>Light（灯光）</td><td align="center">创建灯光对象</td><td>无</td></tr><tr><td>Audio（声音）</td><td align="center">创建声音对象</td><td>无</td></tr><tr><td>UI（界面）</td><td align="center">创建 UI 对象</td><td>无</td></tr><tr><td>Particle System（粒子系统）</td><td align="center">创建粒子系统</td><td>无</td></tr><tr><td>Camera （摄像机）</td><td align="center">创建摄像机对象</td><td>无</td></tr><tr><td>Center On Children（聚焦子对象）</td><td align="center">将父对象的中心移动到子对象上</td><td>无</td></tr><tr><td>Make Parent（构成父对象）</td><td align="center">选中多个对象后创建父子对象的对应关系</td><td>无</td></tr><tr><td>Clear Parent（清除父对象）</td><td align="center">取消父子对象的对应关系</td><td>无</td></tr><tr><td>Apply Change To Prefab（应用变换到预制体）</td><td align="center">创更新对象的修改属性到对应的预制体上</td><td>无</td></tr><tr><td>Break Prefab Instance （取消预制实例）</td><td align="center">取消实例对象与预制体直接的属性关联 关系</td><td>无</td></tr><tr><td>Set As First Sibling</td><td align="center">设置选定子对象为所在父对象下面的第一个子对象</td><td>Ctrl + &#x3D;</td></tr><tr><td>Set As Last Sibling</td><td align="center">设置选定子对象为所在父对象下面的最后一个子对象</td><td>Ctrl + -</td></tr><tr><td>Move To View（移动到视图中）</td><td align="center">改变对象的 Position 的坐标值，将所选对象移动到 Scene 视图中</td><td>Ctrl + Alt + F</td></tr><tr><td>Align With View（与视图对齐）</td><td align="center">改变对象的 Position 的坐标值，将所选对象移动到 Scene 视图的中心点</td><td>Ctrl + Shift + F</td></tr><tr><td>Align View To Selected（移动视图到选中对象）</td><td align="center">将编辑视角移动到选中对象的中心位置</td><td>无</td></tr><tr><td>Toggle Active State（切换激活状态）</td><td align="center">设置选中对象为激活或不激活状态</td><td>Alt + Shift + A</td></tr></tbody></table><h2 id="Component-组件菜单"><a href="#Component-组件菜单" class="headerlink" title="Component (组件菜单)"></a>Component (组件菜单)</h2><ul><li>Component 菜单主要用于在项目制作过程中为游戏物体添加组件或属性。</li><li>Component 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>Add（新增）</td><td align="center">添加组件</td><td>Ctrl + Shift + A</td></tr><tr><td>Mesh（网格）</td><td align="center">添加网格属性</td><td>无</td></tr><tr><td>Effect（特效）</td><td align="center">添加特效组件</td><td>无</td></tr><tr><td>Physics （物理属性）</td><td align="center">使物体带有对应的物理属性</td><td>无</td></tr><tr><td>Physics 2D（2D 物理属性）</td><td align="center">添加 2D 物理组件</td><td>无</td></tr><tr><td>Navigation（导航）</td><td align="center">添加导航组件</td><td>无</td></tr><tr><td>Audio（音效）</td><td align="center">添加音频，可以创建声音源和声音的听者</td><td>无</td></tr><tr><td>Rendering（渲染）</td><td align="center">添加渲染组件</td><td>无</td></tr><tr><td>Layout（布局）</td><td align="center">添加布局组件</td><td>无</td></tr><tr><td>Miscellaneous（杂项）</td><td align="center">添加杂项组件</td><td>无</td></tr><tr><td>Event（事件）</td><td align="center">添加事件组件</td><td>无</td></tr><tr><td>Network（网络）</td><td align="center">添加网络组件</td><td>无</td></tr><tr><td>UI（界面）</td><td align="center">添加界面组件</td><td>无</td></tr><tr><td>Scripts（脚本）</td><td align="center">添加 Unity 3D 脚本组件</td><td>无</td></tr><tr><td>Image Effect（图像特效）</td><td align="center">摄像机控制</td><td>无</td></tr></tbody></table><h2 id="Window-窗口菜单"><a href="#Window-窗口菜单" class="headerlink" title="Window (窗口菜单)"></a>Window (窗口菜单)</h2><ul><li>Window 菜单主要用于在项目制作过程中显示 Layout（布局）、Scene（场景）、Game（游戏）和 Inspector（检视）等窗口。</li><li>Window 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>Next Window（下一个窗口）</td><td align="center">显示下一个窗口</td><td>Ctrl + Tab</td></tr><tr><td>Previous Window（前一个窗口 )</td><td align="center">显示前一个窗口</td><td>Ctrl + Shift + Tab</td></tr><tr><td>Layouts（布局窗口）</td><td align="center">显示页面布局方式，可以根据需要自行调整</td><td>无</td></tr><tr><td>Scene（场景窗口 )</td><td align="center">显示用于编辑制作游戏的窗口</td><td>Ctrl + 1</td></tr><tr><td>Game（游戏窗口）</td><td align="center">显示用于测试游戏的窗口</td><td>Ctrl + 2</td></tr><tr><td>Inspector（检视窗口 )</td><td align="center">主要用于控制各个对象的属性，也称为属性面板</td><td>Ctrl + 3</td></tr><tr><td>Hierarchy（层次窗口）</td><td align="center">显示用于整合游戏对象的窗口</td><td>Ctrl + 4</td></tr><tr><td>Project（项目窗口）</td><td align="center">显示游戏资源存放的窗口</td><td>Ctrl + 5</td></tr><tr><td>Animation（动画窗口）</td><td align="center">显示用于创建时间动画的窗口</td><td>Ctrl + 6</td></tr><tr><td>Profiler（探查窗口）</td><td align="center">显示用于分析探查的窗口</td><td>Ctrl + 7</td></tr><tr><td>Asset Server（资源服务器）</td><td align="center">显示用于链接资源服务器的窗口</td><td>无</td></tr><tr><td>Console（控制台）</td><td align="center">显示控制台窗口，用于调试错误</td><td>Ctrl + Shift + C</td></tr></tbody></table><h2 id="Help-帮助菜单"><a href="#Help-帮助菜单" class="headerlink" title="Help (帮助菜单)"></a>Help (帮助菜单)</h2><ul><li>Help 菜单主要用于帮助用户快速学习和掌握 Unity 3D，提供当前安装的 Unity 3D 的版本号。</li><li>Help 菜单功能及快捷键列表：</li></ul><table><thead><tr><th>命令</th><th align="center">描述</th><th>快捷键</th></tr></thead><tbody><tr><td>About Unity（关于 Unity）</td><td align="center">提供 Unity 3D 的安装版本号及相关信息</td><td>无</td></tr><tr><td>Manage License（软件许可管理）</td><td align="center">打开 Unity 3D 软件许可管理工具</td><td>无</td></tr><tr><td>Unity Manual（Unity 教程）</td><td align="center">连接至 Unity 官方在线教程</td><td>无</td></tr><tr><td>Scripting Reference（脚本参考手册）</td><td align="center">连接至 Unity 官方在线脚本参考手册</td><td>无</td></tr><tr><td>Unity Service（Unity 在线服务平台）</td><td align="center">连接至 Unity 官方在线服务平台</td><td>无</td></tr><tr><td>Unity Forum（Unity 论坛）</td><td align="center">连接至 Unity 官方论坛</td><td>无</td></tr><tr><td>Unity Answers（Unity 问答）</td><td align="center">连接至 Unity 官方在线问答平台</td><td>无</td></tr><tr><td>Unity Feedback（Unity 反馈）</td><td align="center">连接至 Unity 官方在线反馈平台</td><td>无</td></tr><tr><td>Check for Updates（检査更新）</td><td align="center">检查 Unity 3D 版本更新</td><td>无</td></tr><tr><td>Download Beta（下载Beta版安装程序）</td><td align="center">下载 Unity 3D 的 Beta 版安装程序</td><td>无</td></tr><tr><td>Release Notes（发行说明）</td><td align="center">连接至 Unity 官方在线发行说明</td><td>无</td></tr><tr><td>Report a Bug（问题反馈）</td><td align="center">向 Unity 官方报告相关问题</td><td>无</td></tr></tbody></table><h2 id="其他快捷键"><a href="#其他快捷键" class="headerlink" title="其他快捷键"></a>其他快捷键</h2><table><thead><tr><th>描述</th><th align="center">快捷键</th></tr></thead><tbody><tr><td>显示当前选择</td><td align="center">F</td></tr><tr><td>在视窗的两列中转换焦点</td><td align="center">Tab</td></tr><tr><td>定位当前焦点到搜索栏</td><td align="center">Ctrl &#x2F; Cmd + F</td></tr><tr><td>选择列中所有可见项目</td><td align="center">Ctrl &#x2F; Cmd + A</td></tr><tr><td>复制选择的资源项目</td><td align="center">Ctrl &#x2F; Cmd + D</td></tr><tr><td>删除对象，将弹出确认提示框</td><td align="center">Delete</td></tr><tr><td>删除对象，但不弹出确认提示框</td><td align="center">Delete + Shift</td></tr><tr><td>对资源进行重命名</td><td align="center">F2</td></tr><tr><td>打开选择的资源</td><td align="center">Enter</td></tr><tr><td>跳转到父文件夹中</td><td align="center">Backspace</td></tr><tr><td>扩展选择的项目</td><td align="center">→</td></tr><tr><td>瓦解选择的项目</td><td align="center">←</td></tr><tr><td>当资源显示为预览时扩展项目</td><td align="center">Alt + →</td></tr><tr><td>当资源显示为预览时瓦解项目</td><td align="center">Alt + ←</td></tr></tbody></table><h1 id="Scene-场景面板"><a href="#Scene-场景面板" class="headerlink" title="Scene (场景面板)"></a>Scene (场景面板)</h1><ul><li>Scene面板：相当于拍电影的片场，Unity程序员可以对片场的演员进行控制或者编辑</li></ul><p><img src="/images/Unity3D/usually/scene.png" alt="Scene面板"></p><h1 id="Game-游戏场景面板"><a href="#Game-游戏场景面板" class="headerlink" title="Game (游戏场景面板)"></a>Game (游戏场景面板)</h1><ul><li>Game面板：相当于片场导演的监视器，就是玩家安装游戏所看到的画面，也是摄像机所拍到的画面</li></ul><p><img src="/images/Unity3D/usually/Game.png" alt="Scene面板"></p><h1 id="Hierarchy-层级面板"><a href="#Hierarchy-层级面板" class="headerlink" title="Hierarchy (层级面板)"></a>Hierarchy (层级面板)</h1><ul><li>Hierarchy：相当于片场的花名册，记录当前场景内所有游戏物体</li></ul><p><img src="/images/Unity3D/usually/Hierarchy.png" alt="Hierarchy面板">  </p><h1 id="Inspector-检查器"><a href="#Inspector-检查器" class="headerlink" title="Inspector (检查器)"></a>Inspector (检查器)</h1><ul><li>inspector：相当于演员的各种装饰品，有这些装饰品共同去影响这个演员；承载当前选中游戏物体的所有组件；</li></ul><p><img src="/images/Unity3D/usually/inspector.png" alt="Inspector面板">  </p><h1 id="Project-项目"><a href="#Project-项目" class="headerlink" title="Project (项目)"></a>Project (项目)</h1><ul><li>Project：相当于整个电影的道具仓库，这个仓库里存放所有这部电影所需要的道具。</li></ul><p><img src="/images/Unity3D/usually/project.png" alt="Project面板">  </p><h1 id="Console-控制台"><a href="#Console-控制台" class="headerlink" title="Console (控制台)"></a>Console (控制台)</h1><p><img src="/images/Unity3D/usually/console.png" alt="Console面板">  </p><ul><li>控制台面板；有一系列的输出信息</li></ul><h1 id="Window-窗口"><a href="#Window-窗口" class="headerlink" title="Window (窗口)"></a>Window (窗口)</h1><p>可以打开任何关闭的窗口</p><p><img src="/images/Unity3D/usually/window.png" alt="window面板"> </p><h1 id="几种操作游戏物体的方式"><a href="#几种操作游戏物体的方式" class="headerlink" title="几种操作游戏物体的方式"></a>几种操作游戏物体的方式</h1><p><img src="/images/Unity3D/usually/use.png" alt="几种操作游戏物体的方式"><br>几种操作游戏物体的方式；</p><ol><li>平移窗口工具：平移场景视图画面。 快捷键：<kbd>Q</kbd> 鼠标中键</li><li>位移工具：针对单个或两个轴向做位移。快捷键：<kbd>W</kbd></li><li>旋转工具：针对单个或两个轴向做旋转。快捷键：<kbd>E</kbd></li><li>缩放工具：针对单个轴向或整个物体做缩放。快捷键：<kbd>R</kbd></li><li>矩形手柄：以对象中心轴线为参考轴做缩放。快捷键：<kbd>T</kbd></li><li>混合工具：包含上面几个工具的属性。</li><li>Center&#x2F;Pivot：有游戏物体父子关系的时候，中心点位置<ul><li>Center:与 Pivot 切换显示，以对象中心轴线为参考轴做移动、旋转及缩放。</li><li>Pivot:与 Center 切换显示，以网格轴线为参考轴做移动、旋转及缩放。</li></ul></li><li>Global&#x2F;local：世界坐标系方向&#x2F;自身坐标系方向</li></ol><h1 id="调试、暂停、下一帧-播放、暂停、下一步"><a href="#调试、暂停、下一帧-播放、暂停、下一步" class="headerlink" title="调试、暂停、下一帧 (播放、暂停、下一步)"></a>调试、暂停、下一帧 (播放、暂停、下一步)</h1><p><img src="/images/Unity3D/usually/play.png" alt="调试、暂停、下一帧"> </p><ul><li>调试：播放游戏以进行测试。</li><li>暂停：暂停游戏测试。</li><li>下一帧(单步执行)：单步进行测试。</li></ul><h1 id="界面相关快捷键"><a href="#界面相关快捷键" class="headerlink" title="界面相关快捷键"></a>界面相关快捷键</h1><ul><li><kbd>Alt</kbd>：鼠标在Scene面板就变成一个小眼睛，这时候单击鼠标左键可以实现巡游角度查看场景；</li><li>鼠标滚轮键：按下可以快捷切换到“手”可以拖拽，相当于Q键了；</li><li><kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>F</kbd> ：选中摄像机按快捷键，快速将视角切换到当前位置；</li></ul><h1 id="新建游戏物体："><a href="#新建游戏物体：" class="headerlink" title="新建游戏物体："></a>新建游戏物体：</h1><p><img src="/images/Unity3D/usually/create01.png"><br><img src="/images/Unity3D/usually/create02.png"><br><img src="/images/Unity3D/usually/create03.png"> </p><h1 id="快速复制"><a href="#快速复制" class="headerlink" title="快速复制"></a>快速复制</h1><p><img src="/images/Unity3D/usually/copy.png" alt="快速复制"><br>选中一个游戏物体 ，按<kbd>Ctrl</kbd>+<kbd>D</kbd>，在当前目录下，拷贝一个游戏物体;游戏物体的父子关系； </p><h1 id="创建材质球"><a href="#创建材质球" class="headerlink" title="创建材质球"></a>创建材质球</h1><p>在project面板中创建材质球：<br> <img src="/images/Unity3D/usually/material.png" alt="创建材质球"> </p><h1 id="游戏物体和游戏组件关系："><a href="#游戏物体和游戏组件关系：" class="headerlink" title="游戏物体和游戏组件关系："></a>游戏物体和游戏组件关系：</h1><ol><li>游戏物体是组件组成的，包含一个以上的游戏组件；（一个游戏物体至少有一个Transform组件）</li><li>游戏物体是游戏组件的盛放容器，游戏组件不能独立存在；（每一个游戏组件都属于某一个游戏物体）</li><li>游戏物体的各个特性是由游戏组件组合起来形成的效果；</li></ol><h1 id="新建-保存场景："><a href="#新建-保存场景：" class="headerlink" title="新建&#x2F;保存场景："></a>新建&#x2F;保存场景：</h1><p><img src="/images/Unity3D/usually/scenes.png" alt="新建场景"><br>保存场景：<kbd>Ctrl</kbd>+<kbd>S</kbd></p><h1 id="预制体："><a href="#预制体：" class="headerlink" title="预制体："></a>预制体：</h1><p><img src="/images/Unity3D/usually/playfab.png" alt="预制体"> </p><ol><li>在Hierarchy面板中是蓝色的；</li><li>有三个按钮：Select：选择当前预制体的本体；Revert：撤回对预制体的操作；Apply：对预制体修改进行应用；</li><li>在Hierachy面板中删除预制体的某一个子物体，会丢失预制体的引用，颜色会变成白色，但是还有会有那三个按钮，这个游戏物体还是可以恢复成预制体的；</li><li>如果删除Project面板中，预制体本体的文件时，就会丢失所有预制体引用的，Hierachy面板中预制体会变成红色，预警本地miss；</li></ol><h1 id="脚本的注意事项"><a href="#脚本的注意事项" class="headerlink" title="脚本的注意事项"></a>脚本的注意事项</h1><ol><li>继承Monobehaviour代码文件名要和类名保持一致</li><li>代码文件名要和类名保持一致，否则不能作为组件添加到游戏物体上</li></ol><h1 id="其它常用视图"><a href="#其它常用视图" class="headerlink" title="其它常用视图"></a>其它常用视图</h1><p>Animation 动画视图<br>Animator　动画控制器视图<br>Sprite Editor　Sprite编辑器<br>Sprite Packer　Sprite打包工具<br>Lightmaps　光照贴图烘焙视图<br>Occlusion 　遮挡剔除视图<br>Navigation　导航寻路视图<br>Version Control 版本控制视图</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity简介</title>
      <link href="/2018/04/01/Unity3D/01Unity_Profile/"/>
      <url>/2018/04/01/Unity3D/01Unity_Profile/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity-简介"><a href="#Unity-简介" class="headerlink" title="Unity 简介"></a>Unity 简介</h1><p>由 Unity Technologies 公司开发的用于轻松创建游戏和三维互动内容的开发工具，是一个国际领先的专业游戏引擎。</p><h1 id="Unity-网站资源-CN"><a href="#Unity-网站资源-CN" class="headerlink" title="Unity 网站资源 (CN)"></a>Unity 网站资源 (CN)</h1><table><thead><tr><th><strong>资源名称</strong></th><th><strong>网址</strong></th></tr></thead><tbody><tr><td>Unity中国官网</td><td><a href="https://unity.cn/">https://unity.cn/</a></td></tr><tr><td>Unity开发者社区</td><td><a href="https://developer.unity.cn/">https://developer.unity.cn/</a></td></tr><tr><td>Unity Learn Premium</td><td><a href="https://unity.com/cn/products/unity-learn">https://unity.com/cn/products/unity-learn</a></td></tr></tbody></table><h1 id="Unity-网站资源-World"><a href="#Unity-网站资源-World" class="headerlink" title="Unity 网站资源 (World)"></a>Unity 网站资源 (World)</h1><table><thead><tr><th><strong>资源名称</strong></th><th><strong>网址</strong></th></tr></thead><tbody><tr><td>Unity官网</td><td><a href="http://unity3d.com/">http://unity3d.com</a></td></tr><tr><td>Unity论坛</td><td><a href="http://forum.china.unity3d.com/fourm.php">http://forum.china.unity3d.com/fourm.php</a></td></tr><tr><td>Unity博客</td><td><a href="http://answers.unity3d.com/index.html">http://answers.unity3d.com/index.html</a></td></tr><tr><td>Unity官方在线案例</td><td><a href="http://unity3d.com/gallery/demos/live-demos">http://unity3d.com/gallery/demos/live-demos</a></td></tr><tr><td>Unity官方项目源文件</td><td><a href="http://nity3d.com/gallery/demos/demo-projects">http://nity3d.com/gallery/demos/demo-projects</a></td></tr><tr><td>Unity在线课堂</td><td><a href="http://unity3d.com/learn/live-training/">http://unity3d.com/learn/live-training/</a></td></tr><tr><td>Unity在线手册</td><td><a href="http://unity3d.com/Manual/index.html">http://unity3d.com/Manual/index.html</a></td></tr><tr><td>Unity脚本手册</td><td><a href="http://docs.unity3d.com/ScriptReference/index.html">http://docs.unity3d.com/ScriptReference/index.html</a></td></tr><tr><td>Unity资源商店</td><td><a href="https://www.assetstore.unity3d.com/">https://www.assetstore.unity3d.com</a></td></tr><tr><td>Unity中国</td><td><a href="http://unity3d.com/cn/">http://unity3d.com/cn/</a></td></tr><tr><td>问答社区</td><td>answers.China.Unity3d.com</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Unity3D </category>
          
      </categories>
      
      
        <tags>
            
            <tag> unity3d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（40）if(){}try{}catch{}语句</title>
      <link href="/2018/03/21/CSharp/40CSharp_Try/"/>
      <url>/2018/03/21/CSharp/40CSharp_Try/</url>
      
        <content type="html"><![CDATA[<h1 id="try…catch-语句"><a href="#try…catch-语句" class="headerlink" title="try…catch 语句"></a>try…catch 语句</h1><p>用来测试代码中的错误，try 部分包含需要运行的代码，而 catch 部分包含错误发生时运行的代码。</p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">//可能会导致错误的代码</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="comment">//在错误发生时怎么处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    window.someNonexistentFunction(); <span class="comment">//调用不存在的函数</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;An error happened!&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="finally子句"><a href="#finally子句" class="headerlink" title="finally子句"></a>finally子句</h1><p>虽然在try-catch语句中是可选的，但finally子句一经使用，其代码无论如何都会执行。换句话说，try语句块中的代码全部正常执行，finally子句会执行；如果因为出错而执行了catch语句块，finally子句照样还会执行。只要代码中包含finally子句，则无论try或catch语句块中包含什么样的代码——甚至return语句，都不会阻止finally子句的执行。来看下面这个函数：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123; </span><br><span class="line">           <span class="comment">//再此执行代码，如果发生异常直接跳入catch，下面代码不在执行</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">catch</span>(error)&#123;</span><br><span class="line">           <span class="comment">//error自定义错误输出信息 需要与thow配合使用</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">finally</span> &#123;</span><br><span class="line">          <span class="comment">//finally 可用可不用但是只要用了， try语句块中的代码全部正常执行，finally会执行；</span></span><br><span class="line">          <span class="comment">//如果因为出错 而执行了catch语句块finally照样还会执行，代码中包含finally，</span></span><br><span class="line">          <span class="comment">//那么无论try还是catch语句块中的return语句将被忽略。</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">          执行顺序为：首先执行try语句块中的代码，如果抛出异常，接着执行catch语句块中代码，如果</span></span><br><span class="line"><span class="comment">      没有异常，catch语句块中代码将会被忽略，但不管是否有异常，最后最会执行finally子句。 </span></span><br><span class="line"><span class="comment">          try后面必须接着一个catch或者finally，也就是可以有3中组合形式。即try-catch、</span></span><br><span class="line"><span class="comment">      try-finally、try-catch-finally三种形式。 */</span></span><br></pre></td></tr></table></figure><h1 id="错误类型"><a href="#错误类型" class="headerlink" title="错误类型"></a>错误类型</h1><p>   1, Error<br>          基类型，主要目的供开发人员抛出自定义错误。<br>   2, EvalError<br>          使用eval()函数而发生异常时抛出，eval() 函数可计算某个字符串，并执行其中的的代码。<br>   3, RangeError<br>          会在数值超出相应范围时触发。<br>   4, ReferenceError<br>          在找不到对象的情况下会发生ReferenceError，通常在访问不存在的变量时，就会发生这种错误<br>   5, SyntaxError<br>          把语法错误的字符串传入eval()函数时，就会导致此类错误<br>   6, TypeError<br>          执行特定于类型的操作时，变量的类型并不符合要求所致。<br>   7, URIError<br>          使用encodeURI()或decodeURI()，而URI格式不正确时，就会导致此错误</p><h1 id="抛出错误"><a href="#抛出错误" class="headerlink" title="抛出错误"></a>抛出错误</h1><pre><code>  与try-catch语句相配的还有一个throw操作符，用于随时抛出自定义错误。抛出错误时，</code></pre><p>   必须要给throw操作符指定一个值。这个值是什么类型，没有要求。<br>      在遇到throw操作符时，代码会立即停止执行。仅当有try-catch语句捕获到被抛出的值时<br>   ，代码才会继续执行。<br>      创建自定义错误消息时，最常用的错误类型是Error、RangeError、ReferenceError和TypeError。<br>   另外，利用原型链还可以通过继承Error来创建自定义错误类型。此时，需要为新创建的错误类型指<br>   定name和message属性。</p><h1 id="try-catch使用考量"><a href="#try-catch使用考量" class="headerlink" title="try-catch使用考量"></a>try-catch使用考量</h1><pre><code>  使用try-catch最适合处理那些我们无法控制的错误，假设你在使用一个大型库中的函数，</code></pre><p>   该函数可能会有意无意地抛出一些错误。由于不能修改这个库的源代码，所以大可将对该<br>   函数的调用放在try-catch语句当中。万一有什么错误发生，也好恰当地处理它们。</p><pre><code>  明明白白地知道自己的代码会发生错误时，再使用try-catch语句就不太合适了。例如，如果</code></pre><p>   传递给函数的参数是字符串而非数值，就会造成函数出错，那么就应该先检查函数的类型，然<br>   后再决定如果去做。在这种情况下，不应该使用try-catch语句。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（41）Lambda表达式</title>
      <link href="/2018/03/21/CSharp/41CSharp_Lambda/"/>
      <url>/2018/03/21/CSharp/41CSharp_Lambda/</url>
      
        <content type="html"><![CDATA[<h1 id="Lambda表达式简介"><a href="#Lambda表达式简介" class="headerlink" title="Lambda表达式简介"></a>Lambda表达式简介</h1><p>Lambda表达式是比匿名方法更简洁的一种匿名方法语法。<br>Lambda运算符：所有的Lambda表达式都是用新的Lambda运算符 <code>=&gt;</code>,可以叫它，“转到”或者 “成为”。运算符将表达式分为两部分，左边指定输入参数，右边是lambda的主体。</p><h1 id="lambda表达式："><a href="#lambda表达式：" class="headerlink" title="lambda表达式："></a>lambda表达式：</h1><p>1.一个参数：param&#x3D;&gt;expr<br>2.多个参数：（param-list）&#x3D;&gt;expr</p><h1 id="匿名方法转换为lambda表达式的步骤"><a href="#匿名方法转换为lambda表达式的步骤" class="headerlink" title="匿名方法转换为lambda表达式的步骤"></a>匿名方法转换为lambda表达式的步骤</h1><ol><li>删除delegate关键字</li><li>在参数列表和匿名方法主体之间放lambda运算符&#x3D;&gt;.lambda运算符读作goes to</li></ol><h1 id="简化lambda表达式"><a href="#简化lambda表达式" class="headerlink" title="简化lambda表达式"></a>简化lambda表达式</h1><ol><li>编译器还可以从委托的声明中知道委托参数的类型，因此lambda表达式允许我们省略类型参数。<ul><li>带有类型的参数列表称为显示类型</li><li>省略类型的参数列表称为隐式类型</li></ul></li><li>如果只有一个隐式类型参数，我们可以省略周围的括号</li><li>lambda表达式允许表达式的主体是语句块或者表达式。如果语句块包含了一个返回语句，我们可以将语句块替换为return关键字后的表达式（即 去掉关键字return）</li></ol><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> 匿名方法和<span class="title">lambad</span>表达式</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">MyDelegate</span>(<span class="params"><span class="built_in">int</span> x</span>)</span>; <span class="comment">//声明一个委托</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">     &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Add</span>(<span class="params"><span class="built_in">int</span> x</span>) <span class="comment">//实现委托的方法</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> x + <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            MyDelegate del = <span class="built_in">delegate</span> (<span class="built_in">int</span> x)&#123; <span class="keyword">return</span> x + <span class="number">20</span>;&#125;;<span class="comment">//匿名方法</span></span><br><span class="line">            MyDelegate del1 =         (<span class="built_in">int</span> x) =&gt;&#123; <span class="keyword">return</span> x + <span class="number">20</span>; &#125;;  <span class="comment">//lambad表达式 变形1:去掉delegate关键字</span></span><br><span class="line"> </span><br><span class="line">            MyDelegate del2 =             (x) =&gt; &#123; <span class="keyword">return</span> x + <span class="number">20</span>; &#125;; <span class="comment">//lambad表达式 变形2:去掉参数类型</span></span><br><span class="line"></span><br><span class="line">            MyDelegate del3 =               x =&gt;  x + <span class="number">20</span>;            <span class="comment">//lambad表达式 变形3:去掉参数括号和return关键字</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;两个数的和为&#123;0&#125;&quot;</span>, del3(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><div style="display:none"><p><a href="https://www.cnblogs.com/wyh19941210/p/6810187.html"></a></p></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（39）多线程</title>
      <link href="/2018/03/20/CSharp/39CSharp_Multithreading/"/>
      <url>/2018/03/20/CSharp/39CSharp_Multithreading/</url>
      
        <content type="html"><![CDATA[<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><p><strong>线程</strong> 被定义为程序的执行路径。每个线程都定义了一个独特的控制流。如果您的应用程序涉及到复杂的和耗时的操作，那么设置不同的线程执行路径往往是有益的，每个线程执行特定的工作。</p><p>线程是<strong>轻量级进程</strong>。一个使用线程的常见实例是现代操作系统中并行编程的实现。使用线程节省了 CPU 周期的浪费，同时提高了应用程序的效率。</p><p>到目前为止我们编写的程序是一个单线程作为应用程序的运行实例的单一的过程运行的。但是，这样子应用程序同时只能执行一个任务。为了同时执行多个任务，它可以被划分为更小的线程。</p><h1 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h1><p>线程生命周期开始于 System.Threading.Thread 类的对象被创建时，结束于线程被终止或完成执行时。</p><p>下面列出了线程生命周期中的各种状态：</p><ul><li><p><strong>未启动状态</strong>：当线程实例被创建但 Start 方法未被调用时的状况。</p></li><li><p><strong>就绪状态</strong>：当线程准备好运行并等待 CPU 周期时的状况。</p></li><li><p><strong>不可运行状态</strong>：下面的几种情况下线程是不可运行的：</p><ul><li>已经调用 Sleep 方法</li><li>已经调用 Wait 方法</li><li>通过 I&#x2F;O 操作阻塞</li></ul></li><li><p><strong>死亡状态</strong>：当线程已完成执行或已中止时的状况。</p></li></ul><h1 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h1><p>在 C# 中，<strong>System.Threading.Thread</strong> 类用于线程的工作。它允许创建并访问多线程应用程序中的单个线程。进程中第一个被执行的线程称为<strong>主线程</strong>。</p><p>当 C# 程序开始执行时，主线程自动创建。使用 <strong>Thread</strong> 类创建的线程被主线程的子线程调用。您可以使用 Thread 类的 <strong>CurrentThread</strong> 属性访问线程。</p><p>下面的程序演示了主线程的执行：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MultithreadingApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MainThreadProgram</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Thread th = Thread.CurrentThread;</span><br><span class="line">            th.Name = <span class="string">&quot;MainThread&quot;</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;This is &#123;0&#125;&quot;</span>, th.Name);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is MainThread</span><br></pre></td></tr></table></figure><h1 id="Thread-类常用的属性和方法"><a href="#Thread-类常用的属性和方法" class="headerlink" title="Thread 类常用的属性和方法"></a>Thread 类常用的属性和方法</h1><p>下表列出了 <strong>Thread</strong> 类的一些常用的 <strong>属性</strong>：</p><table><thead><tr><th align="left">属性</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">CurrentContext</td><td align="left">获取线程正在其中执行的当前上下文。</td></tr><tr><td align="left">CurrentCulture</td><td align="left">获取或设置当前线程的区域性。</td></tr><tr><td align="left">CurrentPrincipal</td><td align="left">获取或设置线程的当前负责人（对基于角色的安全性而言）。</td></tr><tr><td align="left">CurrentThread</td><td align="left">获取当前正在运行的线程。</td></tr><tr><td align="left">CurrentUICulture</td><td align="left">获取或设置资源管理器使用的当前区域性以便在运行时查找区域性特定的资源。</td></tr><tr><td align="left">ExecutionContext</td><td align="left">获取一个 ExecutionContext 对象，该对象包含有关当前线程的各种上下文的信息。</td></tr><tr><td align="left">IsAlive</td><td align="left">获取一个值，该值指示当前线程的执行状态。</td></tr><tr><td align="left">IsBackground</td><td align="left">获取或设置一个值，该值指示某个线程是否为后台线程。</td></tr><tr><td align="left">IsThreadPoolThread</td><td align="left">获取一个值，该值指示线程是否属于托管线程池。</td></tr><tr><td align="left">ManagedThreadId</td><td align="left">获取当前托管线程的唯一标识符。</td></tr><tr><td align="left">Name</td><td align="left">获取或设置线程的名称。</td></tr><tr><td align="left">Priority</td><td align="left">获取或设置一个值，该值指示线程的调度优先级。</td></tr><tr><td align="left">ThreadState</td><td align="left">获取一个值，该值包含当前线程的状态。</td></tr></tbody></table><p>下表列出了 <strong>Thread</strong> 类的一些常用的 <strong>方法</strong>：</p><table><thead><tr><th align="left">序号</th><th align="left">方法名 &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>public void Abort()</strong> 在调用此方法的线程上引发 ThreadAbortException，以开始终止此线程的过程。调用此方法通常会终止线程。</td></tr><tr><td align="left">2</td><td align="left"><strong>public static LocalDataStoreSlot AllocateDataSlot()</strong> 在所有的线程上分配未命名的数据槽。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td></tr><tr><td align="left">3</td><td align="left"><strong>public static LocalDataStoreSlot AllocateNamedDataSlot( string name)</strong> 在所有线程上分配已命名的数据槽。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td></tr><tr><td align="left">4</td><td align="left"><strong>public static void BeginCriticalRegion()</strong> 通知主机执行将要进入一个代码区域，在该代码区域内线程中止或未经处理的异常的影响可能会危害应用程序域中的其他任务。</td></tr><tr><td align="left">5</td><td align="left"><strong>public static void BeginThreadAffinity()</strong> 通知主机托管代码将要执行依赖于当前物理操作系统线程的标识的指令。</td></tr><tr><td align="left">6</td><td align="left"><strong>public static void EndCriticalRegion()</strong> 通知主机执行将要进入一个代码区域，在该代码区域内线程中止或未经处理的异常仅影响当前任务。</td></tr><tr><td align="left">7</td><td align="left"><strong>public static void EndThreadAffinity()</strong> 通知主机托管代码已执行完依赖于当前物理操作系统线程的标识的指令。</td></tr><tr><td align="left">8</td><td align="left"><strong>public static void FreeNamedDataSlot(string name)</strong> 为进程中的所有线程消除名称与槽之间的关联。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td></tr><tr><td align="left">9</td><td align="left"><strong>public static Object GetData( LocalDataStoreSlot slot )</strong> 在当前线程的当前域中从当前线程上指定的槽中检索值。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td></tr><tr><td align="left">10</td><td align="left"><strong>public static AppDomain GetDomain()</strong> 返回当前线程正在其中运行的当前域。</td></tr><tr><td align="left">11</td><td align="left"><strong>public static AppDomain GetDomainID()</strong> 返回唯一的应用程序域标识符。</td></tr><tr><td align="left">12</td><td align="left"><strong>public static LocalDataStoreSlot GetNamedDataSlot( string name )</strong> 查找已命名的数据槽。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td></tr><tr><td align="left">13</td><td align="left"><strong>public void Interrupt()</strong> 中断处于 WaitSleepJoin 线程状态的线程。</td></tr><tr><td align="left">14</td><td align="left"><strong>public void Join()</strong> 在继续执行标准的 COM 和 SendMessage 消息泵处理期间，阻塞调用线程，直到某个线程终止为止。此方法有不同的重载形式。</td></tr><tr><td align="left">15</td><td align="left"><strong>public static void MemoryBarrier()</strong> 按如下方式同步内存存取：执行当前线程的处理器在对指令重新排序时，不能采用先执行 MemoryBarrier 调用之后的内存存取，再执行 MemoryBarrier 调用之前的内存存取的方式。</td></tr><tr><td align="left">16</td><td align="left"><strong>public static void ResetAbort()</strong> 取消为当前线程请求的 Abort。</td></tr><tr><td align="left">17</td><td align="left"><strong>public static void SetData( LocalDataStoreSlot slot, Object data )</strong> 在当前正在运行的线程上为此线程的当前域在指定槽中设置数据。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td></tr><tr><td align="left">18</td><td align="left"><strong>public void Start()</strong> 开始一个线程。</td></tr><tr><td align="left">19</td><td align="left"><strong>public static void Sleep( int millisecondsTimeout )</strong> 让线程暂停一段时间。</td></tr><tr><td align="left">20</td><td align="left"><strong>public static void SpinWait( int iterations )</strong> 导致线程等待由 iterations 参数定义的时间量。</td></tr><tr><td align="left">21</td><td align="left"><strong>public static byte VolatileRead( ref byte address ) public static double VolatileRead( ref double address ) public static int VolatileRead( ref int address ) public static Object VolatileRead( ref Object address )</strong> 读取字段值。无论处理器的数目或处理器缓存的状态如何，该值都是由计算机的任何处理器写入的最新值。此方法有不同的重载形式。这里只给出了一些形式。</td></tr><tr><td align="left">22</td><td align="left"><strong>public static void VolatileWrite( ref byte address, byte value ) public static void VolatileWrite( ref double address, double value ) public static void VolatileWrite( ref int address, int value ) public static void VolatileWrite( ref Object address, Object value )</strong> 立即向字段写入一个值，以使该值对计算机中的所有处理器都可见。此方法有不同的重载形式。这里只给出了一些形式。</td></tr><tr><td align="left">23</td><td align="left"><strong>public static bool Yield()</strong> 导致调用线程执行准备好在当前处理器上运行的另一个线程。由操作系统选择要执行的线程。</td></tr></tbody></table><h1 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h1><p>线程是通过扩展 Thread 类创建的。扩展的 Thread 类调用 <strong>Start()</strong> 方法来开始子线程的执行。</p><p>下面的程序演示了这个概念：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MultithreadingApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ThreadCreationProgram</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CallToChildThread</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Child thread starts&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ThreadStart childref = <span class="keyword">new</span> ThreadStart(CallToChildThread);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;In Main: Creating the Child thread&quot;</span>);</span><br><span class="line">            Thread childThread = <span class="keyword">new</span> Thread(childref);</span><br><span class="line">            childThread.Start();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In Main: Creating the Child thread</span><br><span class="line">Child thread starts</span><br></pre></td></tr></table></figure><h1 id="管理线程"><a href="#管理线程" class="headerlink" title="管理线程"></a>管理线程</h1><p>Thread 类提供了各种管理线程的方法。</p><p>下面的实例演示了 <strong>sleep()</strong> 方法的使用，用于在一个特定的时间暂停线程。</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MultithreadingApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ThreadCreationProgram</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CallToChildThread</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Child thread starts&quot;</span>);</span><br><span class="line">            <span class="comment">// 线程暂停 5000 毫秒</span></span><br><span class="line">            <span class="built_in">int</span> sleepfor = <span class="number">5000</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Child Thread Paused for &#123;0&#125; seconds&quot;</span>,</span><br><span class="line">                              sleepfor / <span class="number">1000</span>);</span><br><span class="line">            Thread.Sleep(sleepfor);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Child thread resumes&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ThreadStart childref = <span class="keyword">new</span> ThreadStart(CallToChildThread);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;In Main: Creating the Child thread&quot;</span>);</span><br><span class="line">            Thread childThread = <span class="keyword">new</span> Thread(childref);</span><br><span class="line">            childThread.Start();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In Main: Creating the Child thread</span><br><span class="line">Child thread starts</span><br><span class="line">Child Thread Paused <span class="keyword">for</span> <span class="number">5</span> seconds</span><br><span class="line">Child thread resumes</span><br></pre></td></tr></table></figure><h1 id="销毁线程"><a href="#销毁线程" class="headerlink" title="销毁线程"></a>销毁线程</h1><p><strong>Abort()</strong> 方法用于销毁线程。</p><p>通过抛出 <strong>threadabortexception</strong> 在运行时中止线程。这个异常不能被捕获，如果有 <em>finally</em> 块，控制会被送至 <em>finally</em> 块。</p><p>下面的程序说明了这点：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MultithreadingApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ThreadCreationProgram</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CallToChildThread</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Child thread starts&quot;</span>);</span><br><span class="line">                <span class="comment">// 计数到 10</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> counter = <span class="number">0</span>; counter &lt;= <span class="number">10</span>; counter++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Thread.Sleep(<span class="number">500</span>);</span><br><span class="line">                    Console.WriteLine(counter);</span><br><span class="line">                &#125;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Child Thread Completed&quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (ThreadAbortException e)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Thread Abort Exception&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Couldn&#x27;t catch the Thread Exception&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            ThreadStart childref = <span class="keyword">new</span> ThreadStart(CallToChildThread);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;In Main: Creating the Child thread&quot;</span>);</span><br><span class="line">            Thread childThread = <span class="keyword">new</span> Thread(childref);</span><br><span class="line">            childThread.Start();</span><br><span class="line">            <span class="comment">// 停止主线程一段时间</span></span><br><span class="line">            Thread.Sleep(<span class="number">2000</span>);</span><br><span class="line">            <span class="comment">// 现在中止子线程</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;In Main: Aborting the Child thread&quot;</span>);</span><br><span class="line">            childThread.Abort();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">In Main: Creating the Child thread</span><br><span class="line">Child thread starts</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">In Main: Aborting the Child thread</span><br><span class="line">Thread Abort Exception</span><br><span class="line">Couldn&#x27;t catch the Thread Exception </span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（38）不安全代码</title>
      <link href="/2018/03/19/CSharp/38CSharp_Unsafe/"/>
      <url>/2018/03/19/CSharp/38CSharp_Unsafe/</url>
      
        <content type="html"><![CDATA[<h1 id="不安全代码"><a href="#不安全代码" class="headerlink" title="不安全代码"></a>不安全代码</h1><p>当一个代码块使用 <strong>unsafe</strong> 修饰符标记时，C# 允许在函数中使用指针变量。<strong>不安全代码</strong>或非托管代码是指使用了<strong>指针</strong>变量的代码块。</p><h1 id="指针变量"><a href="#指针变量" class="headerlink" title="指针变量"></a>指针变量</h1><p><strong>指针</strong> 是值为另一个变量的地址的变量，即，内存位置的直接地址。就像其他变量或常量，您必须在使用指针存储其他变量地址之前声明指针。</p><p>指针变量声明的一般形式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type* var-name;</span><br></pre></td></tr></table></figure><p>下面是指针类型声明的实例：</p><table><thead><tr><th align="left">实例</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>int* p</code></td><td align="left"><code>p</code> 是指向整数的指针。</td></tr><tr><td align="left"><code>double* p</code></td><td align="left"><code>p</code> 是指向双精度数的指针。</td></tr><tr><td align="left"><code>float* p</code></td><td align="left"><code>p</code> 是指向浮点数的指针。</td></tr><tr><td align="left"><code>int** p</code></td><td align="left"><code>p</code> 是指向整数的指针的指针。</td></tr><tr><td align="left"><code>int*[] p</code></td><td align="left"><code>p</code> 是指向整数的指针的一维数组。</td></tr><tr><td align="left"><code>char* p</code></td><td align="left"><code>p</code> 是指向字符的指针。</td></tr><tr><td align="left"><code>void* p</code></td><td align="left"><code>p</code> 是指向未知类型的指针。</td></tr></tbody></table><p>在同一个声明中声明多个指针时，星号 ***** 仅与基础类型一起写入；而不是用作每个指针名称的前缀。 例如:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int* p1, p2, p3;     // 正确  </span><br><span class="line">int *p1, *p2, *p3;   // 错误 </span><br></pre></td></tr></table></figure><p>下面的实例说明了 C# 中使用了 <strong>unsafe</strong> 修饰符时指针的使用：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UnsafeCodeApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">unsafe</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> <span class="keyword">var</span> = <span class="number">20</span>;</span><br><span class="line">            <span class="built_in">int</span>* p = &amp;<span class="keyword">var</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Data is: &#123;0&#125; &quot;</span>,  <span class="keyword">var</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Address is: &#123;0&#125;&quot;</span>,  (<span class="built_in">int</span>)p);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Data is: 20</span><br><span class="line">Address is: 99215364</span><br></pre></td></tr></table></figure><p>您也可以不用声明整个方法作为不安全代码，只需要声明方法的一部分作为不安全代码。下面的实例说明了这点。</p><h1 id="使用指针检索数据值"><a href="#使用指针检索数据值" class="headerlink" title="使用指针检索数据值"></a>使用指针检索数据值</h1><p>您可以使用 <strong>ToString()</strong> 方法检索存储在指针变量所引用位置的数据。下面的实例演示了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UnsafeCodeApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">unsafe</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="built_in">int</span> <span class="keyword">var</span> = <span class="number">20</span>;</span><br><span class="line">            <span class="built_in">int</span>* p = &amp;<span class="keyword">var</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Data is: &#123;0&#125; &quot;</span> , <span class="keyword">var</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Data is: &#123;0&#125; &quot;</span> , p-&gt;ToString());</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Address is: &#123;0&#125; &quot;</span> , (<span class="built_in">int</span>)p);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Data is: 20</span><br><span class="line">Data is: 20</span><br><span class="line">Address is: 77128984</span><br></pre></td></tr></table></figure><h1 id="传递指针作为方法的参数"><a href="#传递指针作为方法的参数" class="headerlink" title="传递指针作为方法的参数"></a>传递指针作为方法的参数</h1><p>您可以向方法传递指针变量作为方法的参数。下面的实例说明了这点：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UnsafeCodeApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">TestPointer</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">unsafe</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params"><span class="built_in">int</span>* p, <span class="built_in">int</span> *q</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> temp = *p;</span><br><span class="line">         *p = *q;</span><br><span class="line">         *q = temp;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">unsafe</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         TestPointer p = <span class="keyword">new</span> TestPointer();</span><br><span class="line">         <span class="built_in">int</span> var1 = <span class="number">10</span>;</span><br><span class="line">         <span class="built_in">int</span> var2 = <span class="number">20</span>;</span><br><span class="line">         <span class="built_in">int</span>* x = &amp;var1;</span><br><span class="line">         <span class="built_in">int</span>* y = &amp;var2;</span><br><span class="line">         </span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Before Swap: var1:&#123;0&#125;, var2: &#123;1&#125;&quot;</span>, var1, var2);</span><br><span class="line">         p.swap(x, y);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;After Swap: var1:&#123;0&#125;, var2: &#123;1&#125;&quot;</span>, var1, var2);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Before Swap: var1: 10, var2: 20</span><br><span class="line">After Swap: var1: 20, var2: 10</span><br></pre></td></tr></table></figure><h1 id="使用指针访问数组元素"><a href="#使用指针访问数组元素" class="headerlink" title="使用指针访问数组元素"></a>使用指针访问数组元素</h1><p>在 C# 中，数组名称和一个指向与数组数据具有相同数据类型的指针是不同的变量类型。例如，int *p 和 int[] p 是不同的类型。您可以增加指针变量 p，因为它在内存中不是固定的，但是数组地址在内存中是固定的，所以您不能增加数组 p。</p><p>因此，如果您需要使用指针变量访问数组数据，可以像我们通常在 C 或 C++ 中所做的那样，使用 <strong>fixed</strong> 关键字来固定指针。</p><p>下面的实例演示了这点：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UnsafeCodeApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">TestPointer</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">unsafe</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span>[]  list = &#123;<span class="number">10</span>, <span class="number">100</span>, <span class="number">200</span>&#125;;</span><br><span class="line">         <span class="keyword">fixed</span>(<span class="built_in">int</span> *ptr = list)</span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 显示指针中数组地址 */</span></span><br><span class="line">         <span class="keyword">for</span> ( <span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Address of list[&#123;0&#125;]=&#123;1&#125;&quot;</span>,i,(<span class="built_in">int</span>)(ptr + i));</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Value of list[&#123;0&#125;]=&#123;1&#125;&quot;</span>, i, *(ptr + i));</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Address of list[0] = 31627168</span><br><span class="line">Value of list[0] = 10</span><br><span class="line">Address of list[1] = 31627172</span><br><span class="line">Value of list[1] = 100</span><br><span class="line">Address of list[2] = 31627176</span><br><span class="line">Value of list[2] = 200</span><br></pre></td></tr></table></figure><h1 id="编译不安全代码"><a href="#编译不安全代码" class="headerlink" title="编译不安全代码"></a>编译不安全代码</h1><p>为了编译不安全代码，您必须切换到命令行编译器指定 <strong>&#x2F;unsafe</strong> 命令行。</p><p>例如，为了编译包含不安全代码的名为 prog1.cs 的程序，需在命令行中输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csc /unsafe prog1.cs</span><br></pre></td></tr></table></figure><p>如果您使用的是 Visual Studio IDE，那么您需要在项目属性中启用不安全代码。</p><p>步骤如下：</p><ul><li>通过双击资源管理器（Solution Explorer）中的属性（properties）节点，打开<strong>项目属性（project properties）</strong>。</li><li>点击 <strong>Build</strong> 标签页。</li><li>选择选项”<strong>Allow unsafe code</strong>“。</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（37）匿名方法</title>
      <link href="/2018/03/16/CSharp/37CSharp_Property/"/>
      <url>/2018/03/16/CSharp/37CSharp_Property/</url>
      
        <content type="html"><![CDATA[<h1 id="匿名方法"><a href="#匿名方法" class="headerlink" title="匿名方法"></a>匿名方法</h1><p>我们已经提到过，委托是用于引用与其具有相同标签的方法。换句话说，您可以使用委托对象调用可由委托引用的方法。</p><p><strong>匿名方法（Anonymous methods）</strong> 提供了一种传递代码块作为委托参数的技术。匿名方法是没有名称只有主体的方法。</p><p>在匿名方法中您不需要指定返回类型，它是从方法主体内的 return 语句推断的。</p><h1 id="编写匿名方法的语法"><a href="#编写匿名方法的语法" class="headerlink" title="编写匿名方法的语法"></a>编写匿名方法的语法</h1><p>匿名方法是通过使用 <strong>delegate</strong> 关键字创建委托实例来声明的。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">NumberChanger</span>(<span class="params"><span class="built_in">int</span> n</span>)</span>;</span><br><span class="line">...</span><br><span class="line">NumberChanger nc = <span class="built_in">delegate</span>(<span class="built_in">int</span> x)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Anonymous Method: &#123;0&#125;&quot;</span>, x);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>代码块 <strong>Console.WriteLine(“Anonymous Method: {0}”, x);</strong> 是匿名方法的主体。</p><p>委托可以通过匿名方法调用，也可以通过命名方法调用，即，通过向委托对象传递方法参数。</p><p><strong>注意:</strong> 匿名方法的主体后面需要一个 <strong>;</strong>。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc(10);</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面的实例演示了匿名方法的概念：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">NumberChanger</span>(<span class="params"><span class="built_in">int</span> n</span>)</span>;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DelegateAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TestDelegate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> num = <span class="number">10</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddNum</span>(<span class="params"><span class="built_in">int</span> p</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            num += p;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Named Method: &#123;0&#125;&quot;</span>, num);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">MultNum</span>(<span class="params"><span class="built_in">int</span> q</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            num *= q;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Named Method: &#123;0&#125;&quot;</span>, num);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 使用匿名方法创建委托实例</span></span><br><span class="line">            NumberChanger nc = <span class="built_in">delegate</span>(<span class="built_in">int</span> x)</span><br><span class="line">            &#123;</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;Anonymous Method: &#123;0&#125;&quot;</span>, x);</span><br><span class="line">            &#125;;</span><br><span class="line">           </span><br><span class="line">            <span class="comment">// 使用匿名方法调用委托</span></span><br><span class="line">            nc(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用命名方法实例化委托</span></span><br><span class="line">            nc =  <span class="keyword">new</span> NumberChanger(AddNum);</span><br><span class="line">           </span><br><span class="line">            <span class="comment">// 使用命名方法调用委托</span></span><br><span class="line">            nc(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 使用另一个命名方法实例化委托</span></span><br><span class="line">            nc =  <span class="keyword">new</span> NumberChanger(MultNum);</span><br><span class="line">           </span><br><span class="line">            <span class="comment">// 使用命名方法调用委托</span></span><br><span class="line">            nc(<span class="number">2</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Anonymous Method: 10</span><br><span class="line">Named Method: 15</span><br><span class="line">Named Method: 30</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（36）泛型（Generic）</title>
      <link href="/2018/03/15/CSharp/36CSharp_Generic/"/>
      <url>/2018/03/15/CSharp/36CSharp_Generic/</url>
      
        <content type="html"><![CDATA[<h1 id="泛型（Generic）"><a href="#泛型（Generic）" class="headerlink" title="泛型（Generic）"></a>泛型（Generic）</h1><p><strong>泛型（Generic）</strong> 允许您延迟编写类或方法中的编程元素的数据类型的规范，直到实际在程序中使用它的时候。换句话说，泛型允许您编写一个可以与任何数据类型一起工作的类或方法。</p><p>您可以通过数据类型的替代参数编写类或方法的规范。当编译器遇到类的构造函数或方法的函数调用时，它会生成代码来处理指定的数据类型。下面这个简单的实例将有助于您理解这个概念：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">GenericApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyGenericArray</span>&lt;<span class="title">T</span>&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> T[] array;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyGenericArray</span>(<span class="params"><span class="built_in">int</span> size</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            array = <span class="keyword">new</span> T[size + <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> T <span class="title">getItem</span>(<span class="params"><span class="built_in">int</span> index</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> array[index];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItem</span>(<span class="params"><span class="built_in">int</span> index, T <span class="keyword">value</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            array[index] = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">           </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Tester</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 声明一个整型数组</span></span><br><span class="line">            MyGenericArray&lt;<span class="built_in">int</span>&gt; intArray = <span class="keyword">new</span> MyGenericArray&lt;<span class="built_in">int</span>&gt;(<span class="number">5</span>);</span><br><span class="line">            <span class="comment">// 设置值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> c = <span class="number">0</span>; c &lt; <span class="number">5</span>; c++)</span><br><span class="line">            &#123;</span><br><span class="line">                intArray.setItem(c, c*<span class="number">5</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> c = <span class="number">0</span>; c &lt; <span class="number">5</span>; c++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(intArray.getItem(c) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="comment">// 声明一个字符数组</span></span><br><span class="line">            MyGenericArray&lt;<span class="built_in">char</span>&gt; charArray = <span class="keyword">new</span> MyGenericArray&lt;<span class="built_in">char</span>&gt;(<span class="number">5</span>);</span><br><span class="line">            <span class="comment">// 设置值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> c = <span class="number">0</span>; c &lt; <span class="number">5</span>; c++)</span><br><span class="line">            &#123;</span><br><span class="line">                charArray.setItem(c, (<span class="built_in">char</span>)(c+<span class="number">97</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> c = <span class="number">0</span>; c &lt; <span class="number">5</span>; c++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(charArray.getItem(c) + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 5 10 15 20</span><br><span class="line">a b c d e</span><br></pre></td></tr></table></figure><h1 id="泛型（Generic）的特性"><a href="#泛型（Generic）的特性" class="headerlink" title="泛型（Generic）的特性"></a>泛型（Generic）的特性</h1><p>使用泛型是一种增强程序功能的技术，具体表现在以下几个方面：</p><ul><li>它有助于您最大限度地重用代码、保护类型的安全以及提高性能。</li><li>您可以创建泛型集合类。.NET 框架类库在 <em>System.Collections.Generic</em> 命名空间中包含了一些新的泛型集合类。您可以使用这些泛型集合类来替代 <em>System.Collections</em> 中的集合类。</li><li>您可以创建自己的泛型接口、泛型类、泛型方法、泛型事件和泛型委托。</li><li>您可以对泛型类进行约束以访问特定数据类型的方法。</li><li>关于泛型数据类型中使用的类型的信息可在运行时通过使用反射获取。</li></ul><h1 id="泛型（Generic）方法"><a href="#泛型（Generic）方法" class="headerlink" title="泛型（Generic）方法"></a>泛型（Generic）方法</h1><p>在上面的实例中，我们已经使用了泛型类，我们可以通过类型参数声明泛型方法。下面的程序说明了这个概念：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">GenericMethodAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Swap</span>&lt;<span class="title">T</span>&gt;(<span class="params"><span class="keyword">ref</span> T lhs, <span class="keyword">ref</span> T rhs</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            T temp;</span><br><span class="line">            temp = lhs;</span><br><span class="line">            lhs = rhs;</span><br><span class="line">            rhs = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a, b;</span><br><span class="line">            <span class="built_in">char</span> c, d;</span><br><span class="line">            a = <span class="number">10</span>;</span><br><span class="line">            b = <span class="number">20</span>;</span><br><span class="line">            c = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">            d = <span class="string">&#x27;V&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在交换之前显示值</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Int values before calling swap:&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;, b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Char values before calling swap:&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;c = &#123;0&#125;, d = &#123;1&#125;&quot;</span>, c, d);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用 swap</span></span><br><span class="line">            Swap&lt;<span class="built_in">int</span>&gt;(<span class="keyword">ref</span> a, <span class="keyword">ref</span> b);</span><br><span class="line">            Swap&lt;<span class="built_in">char</span>&gt;(<span class="keyword">ref</span> c, <span class="keyword">ref</span> d);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在交换之后显示值</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Int values after calling swap:&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;, b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Char values after calling swap:&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;c = &#123;0&#125;, d = &#123;1&#125;&quot;</span>, c, d);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Int values before calling swap:</span><br><span class="line">a = 10, b = 20</span><br><span class="line">Char values before calling swap:</span><br><span class="line">c = I, d = V</span><br><span class="line">Int values after calling swap:</span><br><span class="line">a = 20, b = 10</span><br><span class="line">Char values after calling swap:</span><br><span class="line">c = V, d = I</span><br></pre></td></tr></table></figure><h1 id="泛型（Generic）委托"><a href="#泛型（Generic）委托" class="headerlink" title="泛型（Generic）委托"></a>泛型（Generic）委托</h1><p>您可以通过类型参数定义泛型委托。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">delegate</span> T <span class="title">NumberChanger</span>&lt;<span class="title">T</span>&gt;(<span class="params">T n</span>)</span>;</span><br></pre></td></tr></table></figure><p>下面的实例演示了委托的使用：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">delegate</span> T <span class="title">NumberChanger</span>&lt;<span class="title">T</span>&gt;(<span class="params">T n</span>)</span>;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">GenericDelegateAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TestDelegate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> num = <span class="number">10</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">AddNum</span>(<span class="params"><span class="built_in">int</span> p</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            num += p;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">MultNum</span>(<span class="params"><span class="built_in">int</span> q</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            num *= q;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">getNum</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 创建委托实例</span></span><br><span class="line">            NumberChanger&lt;<span class="built_in">int</span>&gt; nc1 = <span class="keyword">new</span> NumberChanger&lt;<span class="built_in">int</span>&gt;(AddNum);</span><br><span class="line">            NumberChanger&lt;<span class="built_in">int</span>&gt; nc2 = <span class="keyword">new</span> NumberChanger&lt;<span class="built_in">int</span>&gt;(MultNum);</span><br><span class="line">            <span class="comment">// 使用委托对象调用方法</span></span><br><span class="line">            nc1(<span class="number">25</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Value of Num: &#123;0&#125;&quot;</span>, getNum());</span><br><span class="line">            nc2(<span class="number">5</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Value of Num: &#123;0&#125;&quot;</span>, getNum());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Value of Num: 35</span><br><span class="line">Value of Num: 175</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（35）集合（Collection）</title>
      <link href="/2018/03/14/CSharp/35CSharp_Collection/"/>
      <url>/2018/03/14/CSharp/35CSharp_Collection/</url>
      
        <content type="html"><![CDATA[<h1 id="集合（Collection）"><a href="#集合（Collection）" class="headerlink" title="集合（Collection）"></a>集合（Collection）</h1><p>集合（Collection）类是专门用于数据存储和检索的类。这些类提供了对栈（stack）、队列（queue）、列表（list）和哈希表（hash table）的支持。大多数集合类实现了相同的接口。</p><p>集合（Collection）类服务于不同的目的，如为元素动态分配内存，基于索引访问列表项等等。这些类创建 Object 类的对象的集合。在 C# 中，Object 类是所有数据类型的基类。</p><h1 id="什么是集合？"><a href="#什么是集合？" class="headerlink" title="什么是集合？"></a>什么是集合？</h1><ul><li>在 C# 中存储大量数据时，除了使用数组外，还可使用另外一种容器：集合。</li><li>相比数组不能修改长度的缺点，集合在进行操作时，对集合中的元素进行增删改查操作，作用都是原集合，而不会产生新的集合。</li><li>另外，有一些集合中还可以存储任意类型的数据。</li></ul><h1 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h1><h2 id="ArrayList-介绍"><a href="#ArrayList-介绍" class="headerlink" title="ArrayList 介绍"></a>ArrayList 介绍</h2><ul><li>底层就是一个可动态扩展的数组；</li><li>提供了用于在集合中添加、删除或查找项的方法; </li><li>ArrayList 集合不支持泛型（即：可放任意类型的数据）；</li><li>使用 ArrayList 集合之前，应先导入命名命名空间：</li><li><code>using  System.Collections ; </code></li><li>用于unity开发的话已经过时了 ;</li></ul><h2 id="ArrayList-常用方法"><a href="#ArrayList-常用方法" class="headerlink" title="ArrayList 常用方法"></a>ArrayList 常用方法</h2><ul><li>ArrayList 提供了很多操作集合的方法，如下：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Count<span class="comment">//获取集合中元素的个数</span></span><br><span class="line">Capacity<span class="comment">//获取集合容量</span></span><br><span class="line">Add()<span class="comment">//向集合中添加元素</span></span><br><span class="line">Remove()<span class="comment">//移除集合中的元素</span></span><br><span class="line">RemoveAt()<span class="comment">//移除指定位置上的元素</span></span><br><span class="line">Clear()<span class="comment">//清空集合中的元素，将元素值置为默认值</span></span><br></pre></td></tr></table></figure><h1 id="List"><a href="#List" class="headerlink" title="List"></a>List</h1><h2 id="List-介绍"><a href="#List-介绍" class="headerlink" title="List 介绍"></a>List 介绍</h2><ul><li><p>List 集合类似于ArrayList集合，同样也提供了很多用于在集合中添加、删除或查找项的方法; </p></li><li><p>List 集合支持泛型；</p></li><li><p>List 集合默认的命名命名空间：</p></li><li><p><code>using System.Collections.Generic;</code></p></li><li><p>先看看如何构建：</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list=<span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br></pre></td></tr></table></figure><ul><li>首先，<strong>List</strong> 是个强类型，很安全。其次看那个尖括号，它是 C#2.0 时加入的泛型，</li><li>所以并不存在像 <strong>ArrayList</strong>。那样要拆&#x2F;装箱以此造成性能浪费。</li><li>然后，<strong>List</strong> 通过索引分配，索引与数组一样，从 0 开始。它可以通过索引来读取值：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">a.Add(<span class="number">12</span>);</span><br><span class="line">a.Add(<span class="number">10</span>);</span><br><span class="line">Console.WriteLine(a[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><ul><li><p>列表可以有相同的项，而且项是手动排序。</p></li><li><p>在改变项后，要注意项的索引会发生改变：</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">a.Add(<span class="number">12</span>);</span><br><span class="line">a.Add(<span class="number">10</span>);</span><br><span class="line">Console.WriteLine(a[<span class="number">0</span>]);</span><br><span class="line">a.Remove(<span class="number">12</span>);</span><br><span class="line">Console.WriteLine(a[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h2 id="List-常用方法"><a href="#List-常用方法" class="headerlink" title="List 常用方法"></a>List 常用方法</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Count</span></span><br><span class="line"><span class="function">Capacity</span></span><br><span class="line"><span class="function"><span class="title">Add</span>()<span class="comment">//将东西加入到列表的最后。</span></span></span><br><span class="line"><span class="function"><span class="title">Insert</span>()</span></span><br><span class="line"><span class="function"><span class="title">Remove</span>()<span class="comment">//删掉项中第一个匹配你想删除的条件的项（删去第一个匹配此条件的项）。</span></span></span><br><span class="line"><span class="function"><span class="title">RemoveAt</span>()</span></span><br><span class="line"><span class="function"><span class="title">Clear</span>()<span class="comment">//清空所有项。</span></span></span><br><span class="line"><span class="function"><span class="title">Sort</span>()<span class="comment">//用系统默认的方式对项进行排序。</span></span></span><br><span class="line"><span class="function"><span class="title">Contains</span>()<span class="comment">//查看某项是否存在于列表中。</span></span></span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">static</span> System.Console;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">HelloWorld</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">var</span> a=<span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">          a.Add(<span class="number">2</span>);</span><br><span class="line">          a.Add(<span class="number">6</span>);</span><br><span class="line">          a.Add(<span class="number">2</span>);</span><br><span class="line">          a.Add(<span class="number">10</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;第一个数为<span class="subst">&#123;a[<span class="number">0</span>]&#125;</span>&quot;</span>);</span><br><span class="line">          a.Remove(<span class="number">2</span>);<span class="comment">//删去第一个匹配此条件的项</span></span><br><span class="line">          a.Sort();</span><br><span class="line">          <span class="keyword">foreach</span>(<span class="keyword">var</span> a2 <span class="keyword">in</span> a)</span><br><span class="line">          &#123;</span><br><span class="line">              WriteLine(a2);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="built_in">bool</span> a3=a.Contains(<span class="number">2</span>);</span><br><span class="line">          WriteLine(a3);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h1><p>   先看看如何构造:</p>   <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="keyword">new</span> Dictionary&lt;TKey,TValue&gt;();</span><br></pre></td></tr></table></figure><p>   看见尖括号就知道它是c#2.0的泛型了，所以它可以容纳任何类型。</p><p>   首先，字典有一个键<TKey>和一个值<TValue>,其中<strong>键必须是唯一的，不能重复</strong>。</p><p>   <strong>键不能是空引用</strong></p><p>   其次我们可以用键来索引，就不用索引值来索引了。</p>   <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WriteLine(a[TKey]);</span><br></pre></td></tr></table></figure><h2 id="Dictionary-常用方法"><a href="#Dictionary-常用方法" class="headerlink" title="Dictionary 常用方法"></a>Dictionary 常用方法</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Add()<span class="comment">//添加键和值</span></span><br><span class="line">Clean()<span class="comment">//清空字典中所有键和值</span></span><br><span class="line">Count：<span class="comment">//获取字典中有多少对键和值</span></span><br><span class="line">Remove() <span class="comment">//删掉一个键和值；</span></span><br><span class="line">ContainsKey()/ContainsValue()<span class="comment">//查看是否包含指定的键/值；</span></span><br></pre></td></tr></table></figure><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2>   <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">A</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">var</span> a=<span class="keyword">new</span> Dictionary&lt;<span class="built_in">int</span>,<span class="built_in">int</span>&gt;();</span><br><span class="line">          a.Add(<span class="number">12</span>,<span class="number">14</span>);</span><br><span class="line">          a.Add(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;删去前的Count&quot;</span>+a.Count);</span><br><span class="line">          a.Remove(<span class="number">0</span>);</span><br><span class="line">          Console.WriteLine(a[<span class="number">12</span>]);</span><br><span class="line">          Console.WriteLine(a.Count);</span><br><span class="line">         Console.WriteLine(a.ContainsKey(<span class="number">12</span>));</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   最后，<strong>字典,堆栈，队列不能排序</strong>，如果想对字典排序就要用其它方法或集合，如SortedDictionary&lt;TKey,TValue&gt;。</p><p>   有很多种的自动排序，它们的性能有细微差异，所以要仔细选择最好的适合项目的自动排序集合</p><h1 id="各种集合类和它们的用法"><a href="#各种集合类和它们的用法" class="headerlink" title="各种集合类和它们的用法"></a>各种集合类和它们的用法</h1><p>下面是各种常用的 <strong>System.Collection</strong> 命名空间的类。点击下面的链接查看细节。</p><table><thead><tr><th align="left">类</th><th align="left">描述和用法</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-arraylist.html">动态数组（ArrayList）</a></td><td align="left">它代表了可被单独<strong>索引</strong>的对象的有序集合。它基本上可以替代一个数组。但是，与数组不同的是，您可以使用<strong>索引</strong>在指定的位置添加和移除项目，动态数组会自动重新调整它的大小。它也允许在列表中进行动态内存分配、增加、搜索、排序各项。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-hashtable.html">哈希表（Hashtable）</a></td><td align="left">它使用<strong>键</strong>来访问集合中的元素。当您使用键访问元素时，则使用哈希表，而且您可以识别一个有用的键值。哈希表中的每一项都有一个<strong>键&#x2F;值</strong>对。键用于访问集合中的项目。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-sortedlist.html">排序列表（SortedList）</a></td><td align="left">它可以使用<strong>键</strong>和<strong>索引</strong>来访问列表中的项。排序列表是数组和哈希表的组合。它包含一个可使用键或索引访问各项的列表。如果您使用索引访问各项，则它是一个动态数组（ArrayList），如果您使用键访问各项，则它是一个哈希表（Hashtable）。集合中的各项总是按键值排序。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-stack.html">堆栈（Stack）</a></td><td align="left">它代表了一个<strong>后进先出</strong>的对象集合。当您需要对各项进行后进先出的访问时，则使用堆栈。当您在列表中添加一项，称为<strong>推入</strong>元素，当您从列表中移除一项时，称为<strong>弹出</strong>元素。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-queue.html">队列（Queue）</a></td><td align="left">它代表了一个<strong>先进先出</strong>的对象集合。当您需要对各项进行先进先出的访问时，则使用队列。当您在列表中添加一项，称为<strong>入队</strong>，当您从列表中移除一项时，称为<strong>出队</strong>。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-bitarray.html">点阵列（BitArray）</a></td><td align="left">它代表了一个使用值 1 和 0 来表示的<strong>二进制</strong>数组。当您需要存储位，但是事先不知道位数时，则使用点阵列。您可以使用<strong>整型索引</strong>从点阵列集合中访问各项，索引从零开始。</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（34）事件（Event）</title>
      <link href="/2018/03/13/CSharp/34CSharp_Event/"/>
      <url>/2018/03/13/CSharp/34CSharp_Event/</url>
      
        <content type="html"><![CDATA[<h1 id="事件（Event）"><a href="#事件（Event）" class="headerlink" title="事件（Event）"></a>事件（Event）</h1><p><strong>事件（Event）</strong> 基本上说是一个用户操作，如按键、点击、鼠标移动等等，或者是一些提示信息，如系统生成的通知。应用程序需要在事件发生时响应事件。例如，中断。</p><p>C# 中使用事件机制实现线程间的通信。</p><h1 id="通过事件使用委托"><a href="#通过事件使用委托" class="headerlink" title="通过事件使用委托"></a>通过事件使用委托</h1><p>事件在类中声明且生成，且通过使用同一个类或其他类中的委托与事件处理程序关联。包含事件的类用于发布事件。这被称为 <strong>发布器（publisher）</strong> 类。其他接受该事件的类被称为 <strong>订阅器（subscriber）</strong> 类。事件使用 <strong>发布-订阅（publisher-subscriber）</strong> 模型。</p><p><strong>发布器（publisher）</strong> 是一个包含事件和委托定义的对象。事件和委托之间的联系也定义在这个对象中。发布器（publisher）类的对象调用这个事件，并通知其他的对象。</p><p><strong>订阅器（subscriber）</strong> 是一个接受事件并提供事件处理程序的对象。在发布器（publisher）类中的委托调用订阅器（subscriber）类中的方法（事件处理程序）。</p><h1 id="声明事件（Event）"><a href="#声明事件（Event）" class="headerlink" title="声明事件（Event）"></a>声明事件（Event）</h1><p>在类的内部声明事件，首先必须声明该事件的委托类型。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">BoilerLogHandler</span>(<span class="params"><span class="built_in">string</span> status</span>)</span>;</span><br></pre></td></tr></table></figure><p>然后，声明事件本身，使用 <strong>event</strong> 关键字：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基于上面的委托定义事件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">event</span> BoilerLogHandler BoilerEventLog;</span><br></pre></td></tr></table></figure><p>上面的代码定义了一个名为 <em>BoilerLogHandler</em> 的委托和一个名为 <em>BoilerEventLog</em> 的事件，该事件在生成的时候会调用委托。</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例 1"></a>实例 1</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SimpleEvent</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">using</span> System;</span><br><span class="line">  <span class="comment">/***********发布器类***********/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventTest</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> <span class="keyword">value</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">NumManipulationHandler</span>()</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> NumManipulationHandler ChangeNum;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnNumChanged</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( ChangeNum != <span class="literal">null</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        ChangeNum(); <span class="comment">/* 事件被触发 */</span></span><br><span class="line">      &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        Console.WriteLine( <span class="string">&quot;event not fire&quot;</span> );</span><br><span class="line">        Console.ReadKey(); <span class="comment">/* 回车继续 */</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EventTest</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">int</span> n = <span class="number">5</span>;</span><br><span class="line">      SetValue( n );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetValue</span>(<span class="params"> <span class="built_in">int</span> n </span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( <span class="keyword">value</span> != n )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">value</span> = n;</span><br><span class="line">        OnNumChanged();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/***********订阅器类***********/</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">subscribEvent</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printf</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">      Console.WriteLine( <span class="string">&quot;event fire&quot;</span> );</span><br><span class="line">      Console.ReadKey(); <span class="comment">/* 回车继续 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/***********触发***********/</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MainClass</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">      EventTest e = <span class="keyword">new</span> EventTest(); <span class="comment">/* 实例化对象,第一次没有触发事件 */</span></span><br><span class="line">      subscribEvent v = <span class="keyword">new</span> subscribEvent(); <span class="comment">/* 实例化对象 */</span></span><br><span class="line">      e.ChangeNum += <span class="keyword">new</span> EventTest.NumManipulationHandler( v.printf ); <span class="comment">/* 注册 */</span></span><br><span class="line">      e.SetValue( <span class="number">7</span> );</span><br><span class="line">      e.SetValue( <span class="number">11</span> );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">event not fire</span><br><span class="line">event fire</span><br><span class="line">event fire</span><br></pre></td></tr></table></figure><p>本实例提供一个简单的用于热水锅炉系统故障排除的应用程序。当维修工程师检查锅炉时，锅炉的温度和压力会随着维修工程师的备注自动记录到日志文件中。</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例 2"></a>实例 2</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BoilerEventAppl</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// boiler 类</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">Boiler</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> temp;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> pressure;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Boiler</span>(<span class="params"><span class="built_in">int</span> t, <span class="built_in">int</span> p</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         temp = t;</span><br><span class="line">         pressure = p;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getTemp</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> temp;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getPressure</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> pressure;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 事件发布器</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">DelegateBoilerEvent</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">BoilerLogHandler</span>(<span class="params"><span class="built_in">string</span> status</span>)</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 基于上面的委托定义事件</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">event</span> BoilerLogHandler BoilerEventLog;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">LogProcess</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span> remarks = <span class="string">&quot;O. K&quot;</span>;</span><br><span class="line">         Boiler b = <span class="keyword">new</span> Boiler(<span class="number">100</span>, <span class="number">12</span>);</span><br><span class="line">         <span class="built_in">int</span> t = b.getTemp();</span><br><span class="line">         <span class="built_in">int</span> p = b.getPressure();</span><br><span class="line">         <span class="keyword">if</span>(t &gt; <span class="number">150</span> || t &lt; <span class="number">80</span> || p &lt; <span class="number">12</span> || p &gt; <span class="number">15</span>)</span><br><span class="line">         &#123;</span><br><span class="line">            remarks = <span class="string">&quot;Need Maintenance&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         OnBoilerEventLog(<span class="string">&quot;Logging Info:\n&quot;</span>);</span><br><span class="line">         OnBoilerEventLog(<span class="string">&quot;Temparature &quot;</span> + t + <span class="string">&quot;\nPressure: &quot;</span> + p);</span><br><span class="line">         OnBoilerEventLog(<span class="string">&quot;\nMessage: &quot;</span> + remarks);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">OnBoilerEventLog</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">if</span> (BoilerEventLog != <span class="literal">null</span>)</span><br><span class="line">         &#123;</span><br><span class="line">            BoilerEventLog(message);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 该类保留写入日志文件的条款</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">BoilerInfoLogger</span></span><br><span class="line">   &#123;</span><br><span class="line">      FileStream fs;</span><br><span class="line">      StreamWriter sw;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">BoilerInfoLogger</span>(<span class="params"><span class="built_in">string</span> filename</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         fs = <span class="keyword">new</span> FileStream(filename, FileMode.Append, FileAccess.Write);</span><br><span class="line">         sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Logger</span>(<span class="params"><span class="built_in">string</span> info</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         sw.WriteLine(info);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Close</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         sw.Close();</span><br><span class="line">         fs.Close();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 事件订阅器</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RecordBoilerInfo</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Logger</span>(<span class="params"><span class="built_in">string</span> info</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(info);</span><br><span class="line">      &#125;<span class="comment">//end of Logger</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         BoilerInfoLogger filelog = <span class="keyword">new</span> BoilerInfoLogger(<span class="string">&quot;e:\\boiler.txt&quot;</span>);</span><br><span class="line">         DelegateBoilerEvent boilerEvent = <span class="keyword">new</span> DelegateBoilerEvent();</span><br><span class="line">         boilerEvent.BoilerEventLog += <span class="keyword">new</span></span><br><span class="line">         DelegateBoilerEvent.BoilerLogHandler(Logger);</span><br><span class="line">         boilerEvent.BoilerEventLog += <span class="keyword">new</span></span><br><span class="line">         DelegateBoilerEvent.BoilerLogHandler(filelog.Logger);</span><br><span class="line">         boilerEvent.LogProcess();</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">         filelog.Close();</span><br><span class="line">      &#125;<span class="comment">//end of main</span></span><br><span class="line"></span><br><span class="line">   &#125;<span class="comment">//end of RecordBoilerInfo</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Logging info:</span><br><span class="line"></span><br><span class="line">Temperature 100</span><br><span class="line">Pressure 12</span><br><span class="line"></span><br><span class="line">Message: O. K</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（33）委托（Delegate）</title>
      <link href="/2018/03/12/CSharp/33CSharp_Delegate/"/>
      <url>/2018/03/12/CSharp/33CSharp_Delegate/</url>
      
        <content type="html"><![CDATA[<h1 id="委托（Delegate）"><a href="#委托（Delegate）" class="headerlink" title="委托（Delegate）"></a>委托（Delegate）</h1><p>C# 中的委托（Delegate）类似于 C 或 C++ 中函数的指针。<strong>委托（Delegate）</strong> 是存有对某个方法的引用的一种引用类型变量。引用可在运行时被改变。</p><p>委托（Delegate）特别用于实现事件和回调方法。所有的委托（Delegate）都派生自 <strong>System.Delegate</strong> 类。</p><h1 id="声明委托（Delegate）"><a href="#声明委托（Delegate）" class="headerlink" title="声明委托（Delegate）"></a>声明委托（Delegate）</h1><p>委托声明决定了可由该委托引用的方法。委托可指向一个与其具有相同标签的方法。</p><p>例如，假设有一个委托：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">MyDelegate</span> (<span class="params"><span class="built_in">string</span> s</span>)</span>;</span><br></pre></td></tr></table></figure><p>上面的委托可被用于引用任何一个带有一个单一的 <em>string</em> 参数的方法，并返回一个 <em>int</em> 类型变量。</p><p>声明委托的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">delegate</span> &lt;<span class="keyword">return</span> type&gt; &lt;<span class="built_in">delegate</span>-name&gt; &lt;parameter list&gt;</span><br></pre></td></tr></table></figure><h1 id="实例化委托（Delegate）"><a href="#实例化委托（Delegate）" class="headerlink" title="实例化委托（Delegate）"></a>实例化委托（Delegate）</h1><p>一旦声明了委托类型，委托对象必须使用 <strong>new</strong> 关键字来创建，且与一个特定的方法有关。当创建委托时，传递到 <strong>new</strong> 语句的参数就像方法调用一样书写，但是不带有参数。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">printString</span>(<span class="params"><span class="built_in">string</span> s</span>)</span>;</span><br><span class="line">...</span><br><span class="line">printString ps1 = <span class="keyword">new</span> printString(WriteToScreen);</span><br><span class="line">printString ps2 = <span class="keyword">new</span> printString(WriteToFile);</span><br></pre></td></tr></table></figure><p>下面的实例演示了委托的声明、实例化和使用，该委托可用于引用带有一个整型参数的方法，并返回一个整型值。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">NumberChanger</span>(<span class="params"><span class="built_in">int</span> n</span>)</span>;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DelegateAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">TestDelegate</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">static</span> <span class="built_in">int</span> num = <span class="number">10</span>;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">AddNum</span>(<span class="params"><span class="built_in">int</span> p</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         num += p;</span><br><span class="line">         <span class="keyword">return</span> num;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">MultNum</span>(<span class="params"><span class="built_in">int</span> q</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         num *= q;</span><br><span class="line">         <span class="keyword">return</span> num;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">getNum</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> num;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">// 创建委托实例</span></span><br><span class="line">         NumberChanger nc1 = <span class="keyword">new</span> NumberChanger(AddNum);</span><br><span class="line">         NumberChanger nc2 = <span class="keyword">new</span> NumberChanger(MultNum);</span><br><span class="line">         <span class="comment">// 使用委托对象调用方法</span></span><br><span class="line">         nc1(<span class="number">25</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Value of Num: &#123;0&#125;&quot;</span>, getNum());</span><br><span class="line">         nc2(<span class="number">5</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Value of Num: &#123;0&#125;&quot;</span>, getNum());</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Value of Num: 35</span><br><span class="line">Value of Num: 175</span><br></pre></td></tr></table></figure><h1 id="委托的多播（Multicasting-of-a-Delegate）"><a href="#委托的多播（Multicasting-of-a-Delegate）" class="headerlink" title="委托的多播（Multicasting of a Delegate）"></a>委托的多播（Multicasting of a Delegate）</h1><p>委托对象可使用 “+” 运算符进行合并。一个合并委托调用它所合并的两个委托。只有相同类型的委托可被合并。”-“ 运算符可用于从合并的委托中移除组件委托。</p><p>使用委托的这个有用的特点，您可以创建一个委托被调用时要调用的方法的调用列表。这被称为委托的 <strong>多播（multicasting）</strong>，也叫组播。下面的程序演示了委托的多播：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">NumberChanger</span>(<span class="params"><span class="built_in">int</span> n</span>)</span>;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DelegateAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">TestDelegate</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">static</span> <span class="built_in">int</span> num = <span class="number">10</span>;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">AddNum</span>(<span class="params"><span class="built_in">int</span> p</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         num += p;</span><br><span class="line">         <span class="keyword">return</span> num;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">MultNum</span>(<span class="params"><span class="built_in">int</span> q</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         num *= q;</span><br><span class="line">         <span class="keyword">return</span> num;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">getNum</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> num;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">// 创建委托实例</span></span><br><span class="line">         NumberChanger nc;</span><br><span class="line">         NumberChanger nc1 = <span class="keyword">new</span> NumberChanger(AddNum);</span><br><span class="line">         NumberChanger nc2 = <span class="keyword">new</span> NumberChanger(MultNum);</span><br><span class="line">         nc = nc1;</span><br><span class="line">         nc += nc2;</span><br><span class="line">         <span class="comment">// 调用多播</span></span><br><span class="line">         nc(<span class="number">5</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Value of Num: &#123;0&#125;&quot;</span>, getNum());</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Value of Num: 75</span><br></pre></td></tr></table></figure><h1 id="委托（Delegate）的用途"><a href="#委托（Delegate）的用途" class="headerlink" title="委托（Delegate）的用途"></a>委托（Delegate）的用途</h1><p>下面的实例演示了委托的用法。委托 <em>printString</em> 可用于引用带有一个字符串作为输入的方法，并不返回任何东西。</p><p>我们使用这个委托来调用两个方法，第一个把字符串打印到控制台，第二个把字符串打印到文件：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DelegateAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">PrintString</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">static</span> FileStream fs;</span><br><span class="line">      <span class="keyword">static</span> StreamWriter sw;</span><br><span class="line">      <span class="comment">// 委托声明</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">printString</span>(<span class="params"><span class="built_in">string</span> s</span>)</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 该方法打印到控制台</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteToScreen</span>(<span class="params"><span class="built_in">string</span> str</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;The String is: &#123;0&#125;&quot;</span>, str);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 该方法打印到文件</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteToFile</span>(<span class="params"><span class="built_in">string</span> s</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         fs = <span class="keyword">new</span> FileStream(<span class="string">&quot;c:\\message.txt&quot;</span>, FileMode.Append, FileAccess.Write);</span><br><span class="line">         sw = <span class="keyword">new</span> StreamWriter(fs);</span><br><span class="line">         sw.WriteLine(s);</span><br><span class="line">         sw.Flush();</span><br><span class="line">         sw.Close();</span><br><span class="line">         fs.Close();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 该方法把委托作为参数，并使用它调用方法</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendString</span>(<span class="params">printString ps</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         ps(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         printString ps1 = <span class="keyword">new</span> printString(WriteToScreen);</span><br><span class="line">         printString ps2 = <span class="keyword">new</span> printString(WriteToFile);</span><br><span class="line">         sendString(ps1);</span><br><span class="line">         sendString(ps2);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The String is: Hello World</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（32）索引器（Indexer）</title>
      <link href="/2018/03/09/CSharp/32CSharp_Indexer/"/>
      <url>/2018/03/09/CSharp/32CSharp_Indexer/</url>
      
        <content type="html"><![CDATA[<h1 id="索引器（Indexer）"><a href="#索引器（Indexer）" class="headerlink" title="索引器（Indexer）"></a>索引器（Indexer）</h1><p><strong>索引器（Indexer）</strong> 允许一个对象可以像数组一样使用下标的方式来访问。</p><p>当您为类定义一个索引器时，该类的行为就会像一个 <strong>虚拟数组（virtual array）</strong> 一样。您可以使用数组访问运算符 <strong>[ ]</strong> 来访问该类的的成员。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>一维索引器的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">element-type <span class="keyword">this</span>[<span class="built_in">int</span> index]</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// get 访问器</span></span><br><span class="line">   <span class="keyword">get</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// 返回 index 指定的值</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// set 访问器</span></span><br><span class="line">   <span class="keyword">set</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// 设置 index 指定的值</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="索引器（Indexer）的用途"><a href="#索引器（Indexer）的用途" class="headerlink" title="索引器（Indexer）的用途"></a>索引器（Indexer）的用途</h1><p>索引器的行为的声明在某种程度上类似于属性（property）。就像属性（property），您可使用 <strong>get</strong> 和 <strong>set</strong> 访问器来定义索引器。但是，属性返回或设置一个特定的数据成员，而索引器返回或设置对象实例的一个特定值。换句话说，它把实例数据分为更小的部分，并索引每个部分，获取或设置每个部分。</p><p>定义一个属性（property）包括提供属性名称。索引器定义的时候不带有名称，但带有 <strong>this</strong> 关键字，它指向对象实例。下面的实例演示了这个概念：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IndexerApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">IndexedNames</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span>[] namelist = <span class="keyword">new</span> <span class="built_in">string</span>[size];</span><br><span class="line">      <span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">int</span> size = <span class="number">10</span>;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">IndexedNames</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">         namelist[i] = <span class="string">&quot;N. A.&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> <span class="keyword">this</span>[<span class="built_in">int</span> index]</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="built_in">string</span> tmp;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= size<span class="number">-1</span> )</span><br><span class="line">            &#123;</span><br><span class="line">               tmp = namelist[index];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">               tmp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ( tmp );</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span>( index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= size<span class="number">-1</span> )</span><br><span class="line">            &#123;</span><br><span class="line">               namelist[index] = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         IndexedNames names = <span class="keyword">new</span> IndexedNames();</span><br><span class="line">         names[<span class="number">0</span>] = <span class="string">&quot;Zara&quot;</span>;</span><br><span class="line">         names[<span class="number">1</span>] = <span class="string">&quot;Riz&quot;</span>;</span><br><span class="line">         names[<span class="number">2</span>] = <span class="string">&quot;Nuha&quot;</span>;</span><br><span class="line">         names[<span class="number">3</span>] = <span class="string">&quot;Asif&quot;</span>;</span><br><span class="line">         names[<span class="number">4</span>] = <span class="string">&quot;Davinder&quot;</span>;</span><br><span class="line">         names[<span class="number">5</span>] = <span class="string">&quot;Sunil&quot;</span>;</span><br><span class="line">         names[<span class="number">6</span>] = <span class="string">&quot;Rubic&quot;</span>;</span><br><span class="line">         <span class="keyword">for</span> ( <span class="built_in">int</span> i = <span class="number">0</span>; i &lt; IndexedNames.size; i++ )</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(names[i]);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Zara</span><br><span class="line">Riz</span><br><span class="line">Nuha</span><br><span class="line">Asif</span><br><span class="line">Davinder</span><br><span class="line">Sunil</span><br><span class="line">Rubic</span><br><span class="line">N. A.</span><br><span class="line">N. A.</span><br><span class="line">N. A.</span><br></pre></td></tr></table></figure><h1 id="重载索引器（Indexer）"><a href="#重载索引器（Indexer）" class="headerlink" title="重载索引器（Indexer）"></a>重载索引器（Indexer）</h1><p>索引器（Indexer）可被重载。索引器声明的时候也可带有多个参数，且每个参数可以是不同的类型。没有必要让索引器必须是整型的。C# 允许索引器可以是其他类型，例如，字符串类型。</p><p>下面的实例演示了重载索引器：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IndexerApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">IndexedNames</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span>[] namelist = <span class="keyword">new</span> <span class="built_in">string</span>[size];</span><br><span class="line">      <span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">int</span> size = <span class="number">10</span>;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">IndexedNames</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; size; i++)</span><br><span class="line">         &#123;</span><br><span class="line">          namelist[i] = <span class="string">&quot;N. A.&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> <span class="keyword">this</span>[<span class="built_in">int</span> index]</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="built_in">string</span> tmp;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>( index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= size<span class="number">-1</span> )</span><br><span class="line">            &#123;</span><br><span class="line">               tmp = namelist[index];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">               tmp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ( tmp );</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">if</span>( index &gt;= <span class="number">0</span> &amp;&amp; index &lt;= size<span class="number">-1</span> )</span><br><span class="line">            &#123;</span><br><span class="line">               namelist[index] = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">int</span> <span class="keyword">this</span>[<span class="built_in">string</span> name]</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(index &lt; size)</span><br><span class="line">            &#123;</span><br><span class="line">               <span class="keyword">if</span> (namelist[index] == name)</span><br><span class="line">               &#123;</span><br><span class="line">                <span class="keyword">return</span> index;</span><br><span class="line">               &#125;</span><br><span class="line">               index++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> index;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         IndexedNames names = <span class="keyword">new</span> IndexedNames();</span><br><span class="line">         names[<span class="number">0</span>] = <span class="string">&quot;Zara&quot;</span>;</span><br><span class="line">         names[<span class="number">1</span>] = <span class="string">&quot;Riz&quot;</span>;</span><br><span class="line">         names[<span class="number">2</span>] = <span class="string">&quot;Nuha&quot;</span>;</span><br><span class="line">         names[<span class="number">3</span>] = <span class="string">&quot;Asif&quot;</span>;</span><br><span class="line">         names[<span class="number">4</span>] = <span class="string">&quot;Davinder&quot;</span>;</span><br><span class="line">         names[<span class="number">5</span>] = <span class="string">&quot;Sunil&quot;</span>;</span><br><span class="line">         names[<span class="number">6</span>] = <span class="string">&quot;Rubic&quot;</span>;</span><br><span class="line">         <span class="comment">// 使用带有 int 参数的第一个索引器</span></span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; IndexedNames.size; i++)</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(names[i]);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">// 使用带有 string 参数的第二个索引器</span></span><br><span class="line">         Console.WriteLine(names[<span class="string">&quot;Nuha&quot;</span>]);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Zara</span><br><span class="line">Riz</span><br><span class="line">Nuha</span><br><span class="line">Asif</span><br><span class="line">Davinder</span><br><span class="line">Sunil</span><br><span class="line">Rubic</span><br><span class="line">N. A.</span><br><span class="line">N. A.</span><br><span class="line">N. A.</span><br><span class="line">2</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（31）属性（Property）</title>
      <link href="/2018/03/08/CSharp/31CSharp_Property/"/>
      <url>/2018/03/08/CSharp/31CSharp_Property/</url>
      
        <content type="html"><![CDATA[<h1 id="属性（Property）"><a href="#属性（Property）" class="headerlink" title="属性（Property）"></a>属性（Property）</h1><p><strong>属性（Property）</strong> 是类（class）、结构（structure）和接口（interface）的命名（named）成员。类或结构中的成员变量或方法称为 <strong>域（Field）</strong>。属性（Property）是域（Field）的扩展，且可使用相同的语法来访问。它们使用 <strong>访问器（accessors）</strong> 让私有域的值可被读写或操作。</p><p>属性（Property）不会确定存储位置。相反，它们具有可读写或计算它们值的 <strong>访问器（accessors）</strong>。</p><p>例如，有一个名为 Student 的类，带有 age、name 和 code 的私有域。我们不能在类的范围以外直接访问这些域，但是我们可以拥有访问这些私有域的属性。</p><h1 id="访问器（Accessors）"><a href="#访问器（Accessors）" class="headerlink" title="访问器（Accessors）"></a>访问器（Accessors）</h1><p>属性（Property）的**访问器（accessor）**包含有助于获取（读取或计算）或设置（写入）属性的可执行语句。访问器（accessor）声明可包含一个 get 访问器、一个 set 访问器，或者同时包含二者。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明类型为 string 的 Code 属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> Code</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">get</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> code;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">set</span></span><br><span class="line">   &#123;</span><br><span class="line">      code = <span class="keyword">value</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明类型为 string 的 Name 属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">get</span></span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">set</span></span><br><span class="line">   &#123;</span><br><span class="line">     name = <span class="keyword">value</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明类型为 int 的 Age 属性</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> Age</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">get</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> age;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">set</span></span><br><span class="line">   &#123;</span><br><span class="line">      age = <span class="keyword">value</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面的实例演示了属性（Property）的用法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">runoob</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span> code = <span class="string">&quot;N.A&quot;</span>;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span> name = <span class="string">&quot;not known&quot;</span>;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 声明类型为 string 的 Code 属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> Code</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            code = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="comment">// 声明类型为 string 的 Name 属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            name = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 声明类型为 int 的 Age 属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">int</span> Age</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> age;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            age = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;Code = &quot;</span> + Code +<span class="string">&quot;, Name = &quot;</span> + Name + <span class="string">&quot;, Age = &quot;</span> + Age;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExampleDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">// 创建一个新的 Student 对象</span></span><br><span class="line">         Student s = <span class="keyword">new</span> Student();</span><br><span class="line">           </span><br><span class="line">         <span class="comment">// 设置 student 的 code、name 和 age</span></span><br><span class="line">         s.Code = <span class="string">&quot;001&quot;</span>;</span><br><span class="line">         s.Name = <span class="string">&quot;Zara&quot;</span>;</span><br><span class="line">         s.Age = <span class="number">9</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Student Info: &#123;0&#125;&quot;</span>, s);</span><br><span class="line">         <span class="comment">// 增加年龄</span></span><br><span class="line">         s.Age += <span class="number">1</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Student Info: &#123;0&#125;&quot;</span>, s);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student Info: Code = <span class="number">001</span>, Name = Zara, Age = <span class="number">9</span></span><br><span class="line">Student Info: Code = <span class="number">001</span>, Name = Zara, Age = <span class="number">10</span></span><br></pre></td></tr></table></figure><h1 id="抽象属性（Abstract-Properties）"><a href="#抽象属性（Abstract-Properties）" class="headerlink" title="抽象属性（Abstract Properties）"></a>抽象属性（Abstract Properties）</h1><p>抽象类可拥有抽象属性，这些属性应在派生类中被实现。下面的程序说明了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">runoob</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="built_in">string</span> Name</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span>;</span><br><span class="line">         <span class="keyword">set</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="built_in">int</span> Age</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span>;</span><br><span class="line">         <span class="keyword">set</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Student</span> : <span class="title">Person</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span> code = <span class="string">&quot;N.A&quot;</span>;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span> name = <span class="string">&quot;N.A&quot;</span>;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 声明类型为 string 的 Code 属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> Code</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            code = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="comment">// 声明类型为 string 的 Name 属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Name</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            name = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 声明类型为 int 的 Age 属性</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">int</span> Age</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> age;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            age = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;Code = &quot;</span> + Code +<span class="string">&quot;, Name = &quot;</span> + Name + <span class="string">&quot;, Age = &quot;</span> + Age;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">ExampleDemo</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">// 创建一个新的 Student 对象</span></span><br><span class="line">         Student s = <span class="keyword">new</span> Student();</span><br><span class="line">           </span><br><span class="line">         <span class="comment">// 设置 student 的 code、name 和 age</span></span><br><span class="line">         s.Code = <span class="string">&quot;001&quot;</span>;</span><br><span class="line">         s.Name = <span class="string">&quot;Zara&quot;</span>;</span><br><span class="line">         s.Age = <span class="number">9</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Student Info:- &#123;0&#125;&quot;</span>, s);</span><br><span class="line">         <span class="comment">// 增加年龄</span></span><br><span class="line">         s.Age += <span class="number">1</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Student Info:- &#123;0&#125;&quot;</span>, s);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Student Info: Code = <span class="number">001</span>, Name = Zara, Age = <span class="number">9</span></span><br><span class="line">Student Info: Code = <span class="number">001</span>, Name = Zara, Age = <span class="number">10</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（30）反射（Reflection）</title>
      <link href="/2018/03/07/CSharp/30CSharp_Reflection/"/>
      <url>/2018/03/07/CSharp/30CSharp_Reflection/</url>
      
        <content type="html"><![CDATA[<h1 id="反射（Reflection）"><a href="#反射（Reflection）" class="headerlink" title="反射（Reflection）"></a>反射（Reflection）</h1><p>反射指程序可以访问、检测和修改它本身状态或行为的一种能力。</p><p>程序集包含模块，而模块包含类型，类型又包含成员。反射则提供了封装程序集、模块和类型的对象。</p><p>您可以使用反射动态地创建类型的实例，将类型绑定到现有对象，或从现有对象中获取类型。然后，可以调用类型的方法或访问其字段和属性。</p><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>优点：</p><ul><li>1、反射提高了程序的灵活性和扩展性。</li><li>2、降低耦合性，提高自适应能力。</li><li>3、它允许程序创建和控制任何类的对象，无需提前硬编码目标类。</li></ul><p>缺点：</p><ul><li>1、性能问题：使用反射基本上是一种解释操作，用于字段和方法接入时要远慢于直接代码。因此反射机制主要应用在对灵活性和拓展性要求很高的系统框架上，普通程序不建议使用。</li><li>2、使用反射会模糊程序内部逻辑；程序员希望在源代码中看到程序的逻辑，反射却绕过了源代码的技术，因而会带来维护的问题，反射代码比相应的直接代码更复杂。</li></ul><h1 id="反射（Reflection）的用途"><a href="#反射（Reflection）的用途" class="headerlink" title="反射（Reflection）的用途"></a>反射（Reflection）的用途</h1><p>反射（Reflection）有下列用途：</p><ul><li>它允许在运行时查看特性（attribute）信息。</li><li>它允许审查集合中的各种类型，以及实例化这些类型。</li><li>它允许延迟绑定的方法和属性（property）。</li><li>它允许在运行时创建新类型，然后使用这些类型执行一些任务。</li></ul><h1 id="查看元数据"><a href="#查看元数据" class="headerlink" title="查看元数据"></a>查看元数据</h1><p>我们已经在上面的章节中提到过，使用反射（Reflection）可以查看特性（attribute）信息。</p><p><strong>System.Reflection</strong> 类的 <strong>MemberInfo</strong> 对象需要被初始化，用于发现与类相关的特性（attribute）。为了做到这点，您可以定义目标类的一个对象，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.Reflection.MemberInfo info = typeof(MyClass);</span><br></pre></td></tr></table></figure><p>下面的程序演示了这点：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line">[<span class="meta">AttributeUsage(AttributeTargets.All)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HelpAttribute</span> : <span class="title">System.Attribute</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">readonly</span> <span class="built_in">string</span> Url;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> Topic  <span class="comment">// Topic 是一个命名（named）参数</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">get</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> topic;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">set</span></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">         topic = <span class="keyword">value</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">HelpAttribute</span>(<span class="params"><span class="built_in">string</span> url</span>)  <span class="comment">// url 是一个定位（positional）参数</span></span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">this</span>.Url = url;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> topic;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="meta">HelpAttribute(<span class="string">&quot;Information on the class MyClass&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AttributeAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         System.Reflection.MemberInfo info = <span class="keyword">typeof</span>(MyClass);</span><br><span class="line">         <span class="built_in">object</span>[] attributes = info.GetCustomAttributes(<span class="literal">true</span>);</span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; attributes.Length; i++)</span><br><span class="line">         &#123;</span><br><span class="line">            System.Console.WriteLine(attributes[i]);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会显示附加到类 <em>MyClass</em> 上的自定义特性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HelpAttribute</span><br></pre></td></tr></table></figure><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>在本实例中，我们将使用在上一章中创建的 <em>DeBugInfo</em> 特性，并使用反射（Reflection）来读取 <em>Rectangle</em> 类中的元数据。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BugFixApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 一个自定义特性 BugFix 被赋给类及其成员</span></span><br><span class="line">   [<span class="meta">AttributeUsage(AttributeTargets.Class |</span></span><br><span class="line"><span class="meta">   AttributeTargets.Constructor |</span></span><br><span class="line"><span class="meta">   AttributeTargets.Field |</span></span><br><span class="line"><span class="meta">   AttributeTargets.Method |</span></span><br><span class="line"><span class="meta">   AttributeTargets.Property,</span></span><br><span class="line"><span class="meta">   AllowMultiple = true)</span>]</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DeBugInfo</span> : <span class="title">System.Attribute</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> bugNo;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span> developer;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">string</span> lastReview;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> message;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">DeBugInfo</span>(<span class="params"><span class="built_in">int</span> bg, <span class="built_in">string</span> dev, <span class="built_in">string</span> d</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">this</span>.bugNo = bg;</span><br><span class="line">         <span class="keyword">this</span>.developer = dev;</span><br><span class="line">         <span class="keyword">this</span>.lastReview = d;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">int</span> BugNo</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> bugNo;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> Developer</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> developer;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> LastReview</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> lastReview;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> Message</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">get</span></span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">return</span> message;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">set</span></span><br><span class="line">         &#123;</span><br><span class="line">            message = <span class="keyword">value</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   [<span class="meta">DeBugInfo(45, <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;12/8/2012&quot;</span>,</span></span><br><span class="line"><span class="meta">        Message = <span class="string">&quot;Return type mismatch&quot;</span>)</span>]</span><br><span class="line">   [<span class="meta">DeBugInfo(49, <span class="string">&quot;Nuha Ali&quot;</span>, <span class="string">&quot;10/10/2012&quot;</span>,</span></span><br><span class="line"><span class="meta">        Message = <span class="string">&quot;Unused variable&quot;</span>)</span>]</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// 成员变量</span></span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">double</span> length;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">double</span> width;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"><span class="built_in">double</span> l, <span class="built_in">double</span> w</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = l;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      [<span class="meta">DeBugInfo(55, <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;19/10/2012&quot;</span>,</span></span><br><span class="line"><span class="meta">           Message = <span class="string">&quot;Return type mismatch&quot;</span>)</span>]</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> length * width;</span><br><span class="line">      &#125;</span><br><span class="line">      [<span class="meta">DeBugInfo(56, <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;19/10/2012&quot;</span>)</span>]</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Length: &#123;0&#125;&quot;</span>, length);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Width: &#123;0&#125;&quot;</span>, width);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Area: &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;<span class="comment">//end class Rectangle  </span></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Rectangle r = <span class="keyword">new</span> Rectangle(<span class="number">4.5</span>, <span class="number">7.5</span>);</span><br><span class="line">         r.Display();</span><br><span class="line">         Type type = <span class="keyword">typeof</span>(Rectangle);</span><br><span class="line">         <span class="comment">// 遍历 Rectangle 类的特性</span></span><br><span class="line">         <span class="keyword">foreach</span> (Object attributes <span class="keyword">in</span> type.GetCustomAttributes(<span class="literal">false</span>))</span><br><span class="line">         &#123;</span><br><span class="line">            DeBugInfo dbi = (DeBugInfo)attributes;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != dbi)</span><br><span class="line">            &#123;</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;Bug no: &#123;0&#125;&quot;</span>, dbi.BugNo);</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;Developer: &#123;0&#125;&quot;</span>, dbi.Developer);</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;Last Reviewed: &#123;0&#125;&quot;</span>,</span><br><span class="line">                                        dbi.LastReview);</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;Remarks: &#123;0&#125;&quot;</span>, dbi.Message);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         </span><br><span class="line">         <span class="comment">// 遍历方法特性</span></span><br><span class="line">         <span class="keyword">foreach</span> (MethodInfo m <span class="keyword">in</span> type.GetMethods())</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (Attribute a <span class="keyword">in</span> m.GetCustomAttributes(<span class="literal">true</span>))</span><br><span class="line">            &#123;</span><br><span class="line">               DeBugInfo dbi = (DeBugInfo)a;</span><br><span class="line">               <span class="keyword">if</span> (<span class="literal">null</span> != dbi)</span><br><span class="line">               &#123;</span><br><span class="line">                  Console.WriteLine(<span class="string">&quot;Bug no: &#123;0&#125;, for Method: &#123;1&#125;&quot;</span>,</span><br><span class="line">                                                dbi.BugNo, m.Name);</span><br><span class="line">                  Console.WriteLine(<span class="string">&quot;Developer: &#123;0&#125;&quot;</span>, dbi.Developer);</span><br><span class="line">                  Console.WriteLine(<span class="string">&quot;Last Reviewed: &#123;0&#125;&quot;</span>,</span><br><span class="line">                                                dbi.LastReview);</span><br><span class="line">                  Console.WriteLine(<span class="string">&quot;Remarks: &#123;0&#125;&quot;</span>, dbi.Message);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Length: <span class="number">4.5</span></span><br><span class="line">Width: <span class="number">7.5</span></span><br><span class="line">Area: <span class="number">33.75</span></span><br><span class="line">Bug No: <span class="number">49</span></span><br><span class="line">Developer: Nuha Ali</span><br><span class="line">Last Reviewed: <span class="number">10</span>/<span class="number">10</span>/<span class="number">2012</span></span><br><span class="line">Remarks: Unused variable</span><br><span class="line">Bug No: <span class="number">45</span></span><br><span class="line">Developer: Zara Ali</span><br><span class="line">Last Reviewed: <span class="number">12</span>/<span class="number">8</span>/<span class="number">2012</span></span><br><span class="line">Remarks: Return type mismatch</span><br><span class="line">Bug No: <span class="number">55</span>, <span class="keyword">for</span> Method: GetArea</span><br><span class="line">Developer: Zara Ali</span><br><span class="line">Last Reviewed: <span class="number">19</span>/<span class="number">10</span>/<span class="number">2012</span></span><br><span class="line">Remarks: Return type mismatch</span><br><span class="line">Bug No: <span class="number">56</span>, <span class="keyword">for</span> Method: Display</span><br><span class="line">Developer: Zara Ali</span><br><span class="line">Last Reviewed: <span class="number">19</span>/<span class="number">10</span>/<span class="number">2012</span></span><br><span class="line">Remarks: </span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（29）特性（Attribute）</title>
      <link href="/2018/03/06/CSharp/29CSharp_Attribute/"/>
      <url>/2018/03/06/CSharp/29CSharp_Attribute/</url>
      
        <content type="html"><![CDATA[<h1 id="特性（Attribute）"><a href="#特性（Attribute）" class="headerlink" title="特性（Attribute）"></a>特性（Attribute）</h1><p>**特性（Attribute）**是用于在运行时传递程序中各种元素（比如类、方法、结构、枚举、组件等）的行为信息的声明性标签。您可以通过使用特性向程序添加声明性信息。一个声明性标签是通过放置在它所应用的元素前面的方括号（[ ]）来描述的。</p><p>特性（Attribute）用于添加元数据，如编译器指令和注释、描述、方法、类等其他信息。.Net 框架提供了两种类型的特性：<em>预定义</em>特性和<em>自定义</em>特性。</p><h1 id="规定特性（Attribute）"><a href="#规定特性（Attribute）" class="headerlink" title="规定特性（Attribute）"></a>规定特性（Attribute）</h1><p>规定特性（Attribute）的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">attribute(positional_parameters, name_parameter = value, ...)</span>]</span><br><span class="line">element</span><br></pre></td></tr></table></figure><p>特性（Attribute）的名称和值是在方括号内规定的，放置在它所应用的元素之前。positional_parameters 规定必需的信息，name_parameter 规定可选的信息。</p><h1 id="预定义特性（Attribute）"><a href="#预定义特性（Attribute）" class="headerlink" title="预定义特性（Attribute）"></a>预定义特性（Attribute）</h1><p>.Net 框架提供了三种预定义特性：</p><ul><li>AttributeUsage</li><li>Conditional</li><li>Obsolete</li></ul><h2 id="AttributeUsage"><a href="#AttributeUsage" class="headerlink" title="AttributeUsage"></a>AttributeUsage</h2><p>预定义特性 <strong>AttributeUsage</strong> 描述了如何使用一个自定义特性类。它规定了特性可应用到的项目的类型。</p><p>规定该特性的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[AttributeUsage(</span><br><span class="line">   validon,</span><br><span class="line">   AllowMultiple=allowmultiple,</span><br><span class="line">   Inherited=inherited</span><br><span class="line">)]</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>参数 validon 规定特性可被放置的语言元素。它是枚举器 <em>AttributeTargets</em> 的值的组合。默认值是 <em>AttributeTargets.All</em>。</li><li>参数 <em>allowmultiple</em>（可选的）为该特性的 <em>AllowMultiple</em> 属性（property）提供一个布尔值。如果为 true，则该特性是多用的。默认值是 false（单用的）。</li><li>参数 <em>inherited</em>（可选的）为该特性的 <em>Inherited</em> 属性（property）提供一个布尔值。如果为 true，则该特性可被派生类继承。默认值是 false（不被继承）。</li></ul><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[AttributeUsage(AttributeTargets.Class |</span><br><span class="line">AttributeTargets.Constructor |</span><br><span class="line">AttributeTargets.Field |</span><br><span class="line">AttributeTargets.Method |</span><br><span class="line">AttributeTargets.Property, </span><br><span class="line">AllowMultiple = true)]</span><br></pre></td></tr></table></figure><h2 id="Conditional"><a href="#Conditional" class="headerlink" title="Conditional"></a>Conditional</h2><p>这个预定义特性标记了一个条件方法，其执行依赖于指定的预处理标识符。</p><p>它会引起方法调用的条件编译，取决于指定的值，比如 <strong>Debug</strong> 或 <strong>Trace</strong>。例如，当调试代码时显示变量的值。</p><p>规定该特性的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Conditional(</span><br><span class="line">   conditionalSymbol</span><br><span class="line">)]</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Conditional(&quot;DEBUG&quot;)]</span><br></pre></td></tr></table></figure><p>下面的实例演示了该特性：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Myclass</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Conditional(<span class="string">&quot;DEBUG&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Message</span>(<span class="params"><span class="built_in">string</span> msg</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function1</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">&quot;In Function 1.&quot;</span>);</span><br><span class="line">        function2();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">function2</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">&quot;In Function 2.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Myclass.Message(<span class="string">&quot;In Main function.&quot;</span>);</span><br><span class="line">        function1();</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In Main function.</span><br><span class="line">In Function 1.</span><br><span class="line">In Function 2.</span><br></pre></td></tr></table></figure><h2 id="Obsolete"><a href="#Obsolete" class="headerlink" title="Obsolete"></a>Obsolete</h2><p>这个预定义特性标记了不应被使用的程序实体。它可以让您通知编译器丢弃某个特定的目标元素。例如，当一个新方法被用在一个类中，但是您仍然想要保持类中的旧方法，您可以通过显示一个应该使用新方法，而不是旧方法的消息，来把它标记为 obsolete（过时的）。</p><p>规定该特性的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[Obsolete(</span><br><span class="line">   message</span><br><span class="line">)]</span><br><span class="line">[Obsolete(</span><br><span class="line">   message,</span><br><span class="line">   iserror</span><br><span class="line">)]</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>参数 <em>message</em>，是一个字符串，描述项目为什么过时以及该替代使用什么。</li><li>参数 <em>iserror</em>，是一个布尔值。如果该值为 true，编译器应把该项目的使用当作一个错误。默认值是 false（编译器生成一个警告）。</li></ul><p>下面的实例演示了该特性：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line">   [<span class="meta">Obsolete(<span class="string">&quot;Don&#x27;t use OldMethod, use NewMethod instead&quot;</span>, true)</span>]</span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OldMethod</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;It is the old method&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">NewMethod</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;It is the new method&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      OldMethod();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当您尝试编译该程序时，编译器会给出一个错误消息说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Don&#x27;t use OldMethod, use NewMethod instead</span><br></pre></td></tr></table></figure><h1 id="创建自定义特性（Attribute）"><a href="#创建自定义特性（Attribute）" class="headerlink" title="创建自定义特性（Attribute）"></a>创建自定义特性（Attribute）</h1><p>.Net 框架允许创建自定义特性，用于存储声明性的信息，且可在运行时被检索。该信息根据设计标准和应用程序需要，可与任何目标元素相关。</p><p>创建并使用自定义特性包含四个步骤：</p><ul><li>声明自定义特性</li><li>构建自定义特性</li><li>在目标程序元素上应用自定义特性</li><li>通过反射访问特性</li></ul><p>最后一个步骤包含编写一个简单的程序来读取元数据以便查找各种符号。元数据是用于描述其他数据的数据和信息。该程序应使用反射来在运行时访问特性。我们将在下一章详细讨论这点。</p><h2 id="声明自定义特性"><a href="#声明自定义特性" class="headerlink" title="声明自定义特性"></a>声明自定义特性</h2><p>一个新的自定义特性应派生自 <strong>System.Attribute</strong> 类。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个自定义特性 BugFix 被赋给类及其成员</span></span><br><span class="line">[<span class="meta">AttributeUsage(AttributeTargets.Class |</span></span><br><span class="line"><span class="meta">AttributeTargets.Constructor |</span></span><br><span class="line"><span class="meta">AttributeTargets.Field |</span></span><br><span class="line"><span class="meta">AttributeTargets.Method |</span></span><br><span class="line"><span class="meta">AttributeTargets.Property,</span></span><br><span class="line"><span class="meta">AllowMultiple = true)</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DeBugInfo</span> : <span class="title">System.Attribute</span></span><br></pre></td></tr></table></figure><p>在上面的代码中，我们已经声明了一个名为 <em>DeBugInfo</em> 的自定义特性。</p><h2 id="构建自定义特性"><a href="#构建自定义特性" class="headerlink" title="构建自定义特性"></a>构建自定义特性</h2><p>让我们构建一个名为 <em>DeBugInfo</em> 的自定义特性，该特性将存储调试程序获得的信息。它存储下面的信息：</p><ul><li>bug 的代码编号</li><li>辨认该 bug 的开发人员名字</li><li>最后一次审查该代码的日期</li><li>一个存储了开发人员标记的字符串消息</li></ul><p>我们的 <em>DeBugInfo</em> 类将带有三个用于存储前三个信息的私有属性（property）和一个用于存储消息的公有属性（property）。所以 bug 编号、开发人员名字和审查日期将是 DeBugInfo 类的必需的定位（ positional）参数，消息将是一个可选的命名（named）参数。</p><p>每个特性必须至少有一个构造函数。必需的定位（ positional）参数应通过构造函数传递。下面的代码演示了 <em>DeBugInfo</em> 类：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个自定义特性 BugFix 被赋给类及其成员</span></span><br><span class="line">[<span class="meta">AttributeUsage(AttributeTargets.Class |</span></span><br><span class="line"><span class="meta">AttributeTargets.Constructor |</span></span><br><span class="line"><span class="meta">AttributeTargets.Field |</span></span><br><span class="line"><span class="meta">AttributeTargets.Method |</span></span><br><span class="line"><span class="meta">AttributeTargets.Property,</span></span><br><span class="line"><span class="meta">AllowMultiple = true)</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DeBugInfo</span> : <span class="title">System.Attribute</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="built_in">int</span> bugNo;</span><br><span class="line">  <span class="keyword">private</span> <span class="built_in">string</span> developer;</span><br><span class="line">  <span class="keyword">private</span> <span class="built_in">string</span> lastReview;</span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">string</span> message;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">DeBugInfo</span>(<span class="params"><span class="built_in">int</span> bg, <span class="built_in">string</span> dev, <span class="built_in">string</span> d</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">this</span>.bugNo = bg;</span><br><span class="line">      <span class="keyword">this</span>.developer = dev;</span><br><span class="line">      <span class="keyword">this</span>.lastReview = d;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">int</span> BugNo</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">get</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> bugNo;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">string</span> Developer</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">get</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> developer;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">string</span> LastReview</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">get</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> lastReview;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">string</span> Message</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">get</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> message;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">set</span></span><br><span class="line">      &#123;</span><br><span class="line">          message = <span class="keyword">value</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="应用自定义特性"><a href="#应用自定义特性" class="headerlink" title="应用自定义特性"></a>应用自定义特性</h1><p>通过把特性放置在紧接着它的目标之前，来应用该特性：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">DeBugInfo(45, <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;12/8/2012&quot;</span>, Message = <span class="string">&quot;Return type mismatch&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">DeBugInfo(49, <span class="string">&quot;Nuha Ali&quot;</span>, <span class="string">&quot;10/10/2012&quot;</span>, Message = <span class="string">&quot;Unused variable&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 成员变量</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="built_in">double</span> length;</span><br><span class="line">  <span class="keyword">protected</span> <span class="built_in">double</span> width;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"><span class="built_in">double</span> l, <span class="built_in">double</span> w</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      length = l;</span><br><span class="line">      width = w;</span><br><span class="line">  &#125;</span><br><span class="line">  [<span class="meta">DeBugInfo(55, <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;19/10/2012&quot;</span>,</span></span><br><span class="line"><span class="meta">  Message = <span class="string">&quot;Return type mismatch&quot;</span>)</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">return</span> length * width;</span><br><span class="line">  &#125;</span><br><span class="line">  [<span class="meta">DeBugInfo(56, <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;19/10/2012&quot;</span>)</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">  &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Length: &#123;0&#125;&quot;</span>, length);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Width: &#123;0&#125;&quot;</span>, width);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Area: &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在下一章中，我们将使用 Reflection 类对象来检索这些信息。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（28）文件的输入与输出</title>
      <link href="/2018/03/05/CSharp/28CSharp_Files/"/>
      <url>/2018/03/05/CSharp/28CSharp_Files/</url>
      
        <content type="html"><![CDATA[<h1 id="文件的输入与输出"><a href="#文件的输入与输出" class="headerlink" title="文件的输入与输出"></a>文件的输入与输出</h1><p>一个 <strong>文件</strong> 是一个存储在磁盘中带有指定名称和目录路径的数据集合。当打开文件进行读写时，它变成一个 <strong>流</strong>。</p><p>从根本上说，流是通过通信路径传递的字节序列。有两个主要的流：<strong>输入流</strong> 和 <strong>输出流</strong>。<strong>输入流</strong>用于从文件读取数据（读操作），<strong>输出流</strong>用于向文件写入数据（写操作）。</p><h1 id="C-I-O-类"><a href="#C-I-O-类" class="headerlink" title="C# I&#x2F;O 类"></a>C# I&#x2F;O 类</h1><p>System.IO 命名空间有各种不同的类，用于执行各种文件操作，如创建和删除文件、读取或写入文件，关闭文件等。</p><p>下表列出了一些 System.IO 命名空间中常用的非抽象类：</p><table><thead><tr><th align="left">I&#x2F;O 类</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">BinaryReader</td><td align="left">从二进制流读取原始数据。</td></tr><tr><td align="left">BinaryWriter</td><td align="left">以二进制格式写入原始数据。</td></tr><tr><td align="left">BufferedStream</td><td align="left">字节流的临时存储。</td></tr><tr><td align="left">Directory</td><td align="left">有助于操作目录结构。</td></tr><tr><td align="left">DirectoryInfo</td><td align="left">用于对目录执行操作。</td></tr><tr><td align="left">DriveInfo</td><td align="left">提供驱动器的信息。</td></tr><tr><td align="left">File</td><td align="left">有助于处理文件。</td></tr><tr><td align="left">FileInfo</td><td align="left">用于对文件执行操作。</td></tr><tr><td align="left">FileStream</td><td align="left">用于文件中任何位置的读写。</td></tr><tr><td align="left">MemoryStream</td><td align="left">用于随机访问存储在内存中的数据流。</td></tr><tr><td align="left">Path</td><td align="left">对路径信息执行操作。</td></tr><tr><td align="left">StreamReader</td><td align="left">用于从字节流中读取字符。</td></tr><tr><td align="left">StreamWriter</td><td align="left">用于向一个流中写入字符。</td></tr><tr><td align="left">StringReader</td><td align="left">用于读取字符串缓冲区。</td></tr><tr><td align="left">StringWriter</td><td align="left">用于写入字符串缓冲区。</td></tr></tbody></table><h1 id="FileStream-类"><a href="#FileStream-类" class="headerlink" title="FileStream 类"></a>FileStream 类</h1><p>System.IO 命名空间中的 <strong>FileStream</strong> 类有助于文件的读写与关闭。该类派生自抽象类 Stream。</p><p>您需要创建一个 <strong>FileStream</strong> 对象来创建一个新的文件，或打开一个已有的文件。创建 <strong>FileStream</strong> 对象的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileStream &lt;object_name&gt; = new FileStream( &lt;file_name&gt;,</span><br><span class="line">&lt;FileMode Enumerator&gt;, &lt;FileAccess Enumerator&gt;, &lt;FileShare Enumerator&gt;);</span><br></pre></td></tr></table></figure><p>例如，创建一个 FileStream 对象 <strong>F</strong> 来读取名为 <strong>sample.txt</strong> 的文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileStream F = new FileStream(&quot;sample.txt&quot;, FileMode.Open, FileAccess.Read, FileShare.Read);</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">FileMode</td><td align="left"><strong>FileMode</strong> 枚举定义了各种打开文件的方法。FileMode 枚举的成员有：<strong>Append</strong>：打开一个已有的文件，并将光标放置在文件的末尾。如果文件不存在，则创建文件。<strong>Create</strong>：创建一个新的文件。如果文件已存在，则删除旧文件，然后创建新文件。<strong>CreateNew</strong>：指定操作系统应创建一个新的文件。如果文件已存在，则抛出异常。<strong>Open</strong>：打开一个已有的文件。如果文件不存在，则抛出异常。<strong>OpenOrCreate</strong>：指定操作系统应打开一个已有的文件。如果文件不存在，则用指定的名称创建一个新的文件打开。<strong>Truncate</strong>：打开一个已有的文件，文件一旦打开，就将被截断为零字节大小。然后我们可以向文件写入全新的数据，但是保留文件的初始创建日期。如果文件不存在，则抛出异常。</td></tr><tr><td align="left">FileAccess</td><td align="left"><strong>FileAccess</strong> 枚举的成员有：<strong>Read</strong>、<strong>ReadWrite</strong> 和 <strong>Write</strong>。</td></tr><tr><td align="left">FileShare</td><td align="left"><strong>FileShare</strong> 枚举的成员有：<strong>Inheritable</strong>：允许文件句柄可由子进程继承。Win32 不直接支持此功能。<strong>None</strong>：谢绝共享当前文件。文件关闭前，打开该文件的任何请求（由此进程或另一进程发出的请求）都将失败。<strong>Read</strong>：允许随后打开文件读取。如果未指定此标志，则文件关闭前，任何打开该文件以进行读取的请求（由此进程或另一进程发出的请求）都将失败。但是，即使指定了此标志，仍可能需要附加权限才能够访问该文件。<strong>ReadWrite</strong>：允许随后打开文件读取或写入。如果未指定此标志，则文件关闭前，任何打开该文件以进行读取或写入的请求（由此进程或另一进程发出）都将失败。但是，即使指定了此标志，仍可能需要附加权限才能够访问该文件。<strong>Write</strong>：允许随后打开文件写入。如果未指定此标志，则文件关闭前，任何打开该文件以进行写入的请求（由此进程或另一进过程发出的请求）都将失败。但是，即使指定了此标志，仍可能需要附加权限才能够访问该文件。<strong>Delete</strong>：允许随后删除文件。</td></tr></tbody></table><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面的程序演示了 <strong>FileStream</strong> 类的用法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">FileIOApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileStream F = <span class="keyword">new</span> FileStream(<span class="string">&quot;test.dat&quot;</span>,</span><br><span class="line">            FileMode.OpenOrCreate, FileAccess.ReadWrite);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                F.WriteByte((<span class="built_in">byte</span>)i);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            F.Position = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(F.ReadByte() + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            F.Close();</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 -1</span><br></pre></td></tr></table></figure><h1 id="C-高级文件操作"><a href="#C-高级文件操作" class="headerlink" title="C# 高级文件操作"></a>C# 高级文件操作</h1><p>上面的实例演示了 C# 中简单的文件操作。但是，要充分利用 C# System.IO 类的强大功能，您需要知道这些类常用的属性和方法。</p><p>在下面的章节中，我们将讨论这些类和它们执行的操作。请单击链接详细了解各个部分的知识：</p><table><thead><tr><th align="left">主题</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-text-files.html">文本文件的读写</a></td><td align="left">它涉及到文本文件的读写。<strong>StreamReader</strong> 和 <strong>StreamWriter</strong> 类有助于完成文本文件的读写。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-binary-files.html">二进制文件的读写</a></td><td align="left">它涉及到二进制文件的读写。<strong>BinaryReader</strong> 和 <strong>BinaryWriter</strong> 类有助于完成二进制文件的读写。</td></tr><tr><td align="left"><a href="https://www.runoob.com/csharp/csharp-windows-file-system.html">Windows 文件系统的操作</a></td><td align="left">它让 C# 程序员能够浏览并定位 Windows 文件和目录。</td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git报错：unable to access ‘git仓库地址‘: OpenSSL SSL_read:Connection was reset, errno 10054</title>
      <link href="/2018/03/05/Git/02Git10054/"/>
      <url>/2018/03/05/Git/02Git10054/</url>
      
        <content type="html"><![CDATA[<h1 id="错误errno-10054"><a href="#错误errno-10054" class="headerlink" title="错误errno 10054"></a>错误errno 10054</h1><ul><li>在<code>git push</code> 或者<code>git clone</code> 出现这个错误</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access &#x27;https://github.com/******/******.git/&#x27;</span><br><span class="line">: OpenSSL SSL_read: Connection was reset, errno 10054</span><br></pre></td></tr></table></figure><h1 id="原因推测"><a href="#原因推测" class="headerlink" title="原因推测"></a>原因推测</h1><ul><li><p>产生原因推测：一般是这是因为服务器的SSL证书没有经过第三方机构的签署或认证</p></li><li><p>尝试探究原因，发现报错的文字中有open_SSL,发现这个是https的加密协议，所以我把下载好的文件删除，再次下载，这次使用http协议，而非https</p></li></ul><ol><li><p>在未登录情况下，默认是不能使用https协议下载github上面的文件了，这是github内部做了处理，又或者是https本身自带的拦截，而http协议属于未加密，它不会拦截下载请求。</p></li><li><p>把https换成git也可以下载，应该是github内部自定义的通信协议，所以git协议也不会拦截下载请求，所以git协议也可以下载；</p></li><li><p>如果是登录情况下，https协议则不会拦截，也可以下载文件。</p></li></ol><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ul><li>在项目所在文件夹 Git Bash Here 如以下操作解除SSL验证之后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure><ul><li>再次<code>git push</code> 或 <code>git clone</code> 即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> solution </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（27）异常处理</title>
      <link href="/2018/03/01/CSharp/27CSharp_Bug/"/>
      <url>/2018/03/01/CSharp/27CSharp_Bug/</url>
      
        <content type="html"><![CDATA[<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p>异常是在程序执行期间出现的问题。C# 中的异常是对程序运行时出现的特殊情况的一种响应，比如尝试除以零。</p><p>异常提供了一种把程序控制权从某个部分转移到另一个部分的方式。C# 异常处理时建立在四个关键词之上的：<strong>try</strong>、<strong>catch</strong>、<strong>finally</strong> 和 <strong>throw</strong>。</p><ul><li><strong>try</strong>：一个 try 块标识了一个将被激活的特定的异常的代码块。后跟一个或多个 catch 块。</li><li><strong>catch</strong>：程序通过异常处理程序捕获异常。catch 关键字表示异常的捕获。</li><li><strong>finally</strong>：finally 块用于执行给定的语句，不管异常是否被抛出都会执行。例如，如果您打开一个文件，不管是否出现异常文件都要被关闭。</li><li><strong>throw</strong>：当问题出现时，程序抛出一个异常。使用 throw 关键字来完成。</li></ul><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>假设一个块将出现异常，一个方法使用 try 和 catch 关键字捕获异常。try&#x2F;catch 块内的代码为受保护的代码，使用 try&#x2F;catch 语法如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 引起异常的语句</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>( ExceptionName e1 )</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 错误处理代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>( ExceptionName e2 )</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 错误处理代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>( ExceptionName eN )</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 错误处理代码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 要执行的语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可以列出多个 catch 语句捕获不同类型的异常，以防 try 块在不同的情况下生成多个异常。</p><h1 id="C-中的异常类"><a href="#C-中的异常类" class="headerlink" title="C# 中的异常类"></a>C# 中的异常类</h1><p>C# 异常是使用类来表示的。C# 中的异常类主要是直接或间接地派生于 <strong>System.Exception</strong> 类。<strong>System.ApplicationException</strong> 和 <strong>System.SystemException</strong> 类是派生于 System.Exception 类的异常类。</p><p><strong>System.ApplicationException</strong> 类支持由应用程序生成的异常。所以程序员定义的异常都应派生自该类。</p><p><strong>System.SystemException</strong> 类是所有预定义的系统异常的基类。</p><p>下表列出了一些派生自 System.SystemException 类的预定义的异常类：</p><table><thead><tr><th align="left">异常类</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">System.IO.IOException</td><td align="left">处理 I&#x2F;O 错误。</td></tr><tr><td align="left">System.IndexOutOfRangeException</td><td align="left">处理当方法指向超出范围的数组索引时生成的错误。</td></tr><tr><td align="left">System.ArrayTypeMismatchException</td><td align="left">处理当数组类型不匹配时生成的错误。</td></tr><tr><td align="left">System.NullReferenceException</td><td align="left">处理当依从一个空对象时生成的错误。</td></tr><tr><td align="left">System.DivideByZeroException</td><td align="left">处理当除以零时生成的错误。</td></tr><tr><td align="left">System.InvalidCastException</td><td align="left">处理在类型转换期间生成的错误。</td></tr><tr><td align="left">System.OutOfMemoryException</td><td align="left">处理空闲内存不足生成的错误。</td></tr><tr><td align="left">System.StackOverflowException</td><td align="left">处理栈溢出生成的错误。</td></tr></tbody></table><h1 id="异常处理-1"><a href="#异常处理-1" class="headerlink" title="异常处理"></a>异常处理</h1><p>C# 以 try 和 catch 块的形式提供了一种结构化的异常处理方案。使用这些块，把核心程序语句与错误处理语句分离开。</p><p>这些错误处理块是使用 <strong>try</strong>、<strong>catch</strong> 和 <strong>finally</strong> 关键字实现的。下面是一个当除以零时抛出异常的实例：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ErrorHandlingApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">DivNumbers</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> result;</span><br><span class="line">        DivNumbers()</span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">division</span>(<span class="params"><span class="built_in">int</span> num1, <span class="built_in">int</span> num2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                result = num1 / num2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (DivideByZeroException e)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Exception caught: &#123;0&#125;&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Result: &#123;0&#125;&quot;</span>, result);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            DivNumbers d = <span class="keyword">new</span> DivNumbers();</span><br><span class="line">            d.division(<span class="number">25</span>, <span class="number">0</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Exception caught: System.DivideByZeroException: Attempted to divide by zero. </span><br><span class="line">at ...</span><br><span class="line">Result: 0</span><br></pre></td></tr></table></figure><h1 id="创建用户自定义异常"><a href="#创建用户自定义异常" class="headerlink" title="创建用户自定义异常"></a>创建用户自定义异常</h1><p>您也可以定义自己的异常。用户自定义的异常类是派生自 <strong>ApplicationException</strong> 类。下面的实例演示了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UserDefinedException</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">TestTemperature</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Temperature temp = <span class="keyword">new</span> Temperature();</span><br><span class="line">         <span class="keyword">try</span></span><br><span class="line">         &#123;</span><br><span class="line">            temp.showTemp();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">catch</span>(TempIsZeroException e)</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;TempIsZeroException: &#123;0&#125;&quot;</span>, e.Message);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TempIsZeroException</span>: <span class="title">ApplicationException</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">TempIsZeroException</span>(<span class="params"><span class="built_in">string</span> message</span>): <span class="title">base</span>(<span class="params">message</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Temperature</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="built_in">int</span> temperature = <span class="number">0</span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showTemp</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">if</span>(temperature == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">throw</span> (<span class="keyword">new</span> TempIsZeroException(<span class="string">&quot;Zero Temperature found&quot;</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Temperature: &#123;0&#125;&quot;</span>, temperature);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TempIsZeroException: Zero Temperature found</span><br></pre></td></tr></table></figure><h1 id="抛出对象"><a href="#抛出对象" class="headerlink" title="抛出对象"></a>抛出对象</h1><p>如果异常是直接或间接派生自 <strong>System.Exception</strong> 类，您可以抛出一个对象。您可以在 catch 块中使用 throw 语句来抛出当前的对象，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Catch(Exception e)</span><br><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">   Throw e</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（26）正则表达式</title>
      <link href="/2018/02/28/CSharp/26CSharp_Regular/"/>
      <url>/2018/02/28/CSharp/26CSharp_Regular/</url>
      
        <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p><strong>正则表达式</strong> 是一种匹配输入文本的模式。</p><p>.Net 框架提供了允许这种匹配的正则表达式引擎。</p><p>模式由一个或多个字符、运算符和结构组成。</p><p>如果你还不理解正则表达式可以阅读菜鸟编程的<a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式 - 教程</a>。</p><h1 id="定义正则表达式"><a href="#定义正则表达式" class="headerlink" title="定义正则表达式"></a>定义正则表达式</h1><p>下面列出了用于定义正则表达式的各种类别的字符、运算符和结构。</p><ul><li>字符转义</li><li>字符类</li><li>定位点</li><li>分组构造</li><li>限定符</li><li>反向引用构造</li><li>备用构造</li><li>替换</li><li>杂项构造</li></ul><h1 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h1><p>正则表达式中的反斜杠字符（\）指示其后跟的字符是特殊字符，或应按原义解释该字符。</p><p>下表列出了转义字符：</p><table><thead><tr><th align="left">转义字符</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left"><strong>\a</strong></td><td align="left">与报警 (bell) 符 \u0007 匹配。</td><td align="left">\a</td><td align="left">“Warning!” + ‘\u0007’ 中的 “\u0007”</td></tr><tr><td align="left"><strong>\b</strong></td><td align="left">在字符类中，与退格键 \u0008 匹配。</td><td align="left">[\b]{3,}</td><td align="left">“\b\b\b\b” 中的 “\b\b\b\b”</td></tr><tr><td align="left"><strong>\t</strong></td><td align="left">与制表符 \u0009 匹配。</td><td align="left">(\w+)\t</td><td align="left">“Name\tAddr\t” 中的 “Name\t” 和 “Addr\t”</td></tr><tr><td align="left"><strong>\r</strong></td><td align="left">与回车符 \u000D 匹配。（\r 与换行符 \n 不是等效的。）</td><td align="left">\r\n(\w+)</td><td align="left">“\r\nHello\nWorld.” 中的 “\r\nHello”</td></tr><tr><td align="left"><strong>\v</strong></td><td align="left">与垂直制表符 \u000B 匹配。</td><td align="left">[\v]{2,}</td><td align="left">“\v\v\v” 中的 “\v\v\v”</td></tr><tr><td align="left"><strong>\f</strong></td><td align="left">与换页符 \u000C 匹配。</td><td align="left">[\f]{2,}</td><td align="left">“\f\f\f” 中的 “\f\f\f”</td></tr><tr><td align="left"><strong>\n</strong></td><td align="left">与换行符 \u000A 匹配。</td><td align="left">\r\n(\w+)</td><td align="left">“\r\nHello\nWorld.” 中的 “\r\nHello”</td></tr><tr><td align="left"><strong>\e</strong></td><td align="left">与转义符 \u001B 匹配。</td><td align="left">\e</td><td align="left">“\x001B” 中的 “\x001B”</td></tr><tr><td align="left"><strong>\ nnn</strong></td><td align="left">使用八进制表示形式指定一个字符（nnn 由二到三位数字组成）。</td><td align="left">\w\040\w</td><td align="left">“a bc d” 中的 “a b” 和 “c d”</td></tr><tr><td align="left"><strong>\x nn</strong></td><td align="left">使用十六进制表示形式指定字符（nn 恰好由两位数字组成）。</td><td align="left">\w\x20\w</td><td align="left">“a bc d” 中的 “a b” 和 “c d”</td></tr><tr><td align="left"><strong>\c X \c x</strong></td><td align="left">匹配 X 或 x 指定的 ASCII 控件字符，其中 X 或 x 是控件字符的字母。</td><td align="left">\cC</td><td align="left">“\x0003” 中的 “\x0003” (Ctrl-C)</td></tr><tr><td align="left"><strong>\u nnnn</strong></td><td align="left">使用十六进制表示形式匹配一个 Unicode 字符（由 nnnn 表示的四位数）。</td><td align="left">\w\u0020\w</td><td align="left">“a bc d” 中的 “a b” 和 “c d”</td></tr><tr><td align="left">\</td><td align="left">在后面带有不识别的转义字符时，与该字符匹配。</td><td align="left">\d+[+-x*]\d+\d+[+-x*\d+</td><td align="left">“(2+2) * 3<em>9” 中的 “2+2” 和 “3</em>9”</td></tr></tbody></table><h1 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h1><p>字符类与一组字符中的任何一个字符匹配。</p><p>下表列出了字符类：</p><table><thead><tr><th align="left">字符类</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left"><strong>[character_group]</strong></td><td align="left">匹配 character_group 中的任何单个字符。 默认情况下，匹配区分大小写。</td><td align="left">[mn]</td><td align="left">“mat” 中的 “m”，”moon” 中的 “m” 和 “n”</td></tr><tr><td align="left"><strong>[^character_group]</strong></td><td align="left">非：与不在 character_group 中的任何单个字符匹配。 默认情况下，character_group 中的字符区分大小写。</td><td align="left">[^aei]</td><td align="left">“avail” 中的 “v” 和 “l”</td></tr><tr><td align="left"><strong>[ first - last ]</strong></td><td align="left">字符范围：与从 first 到 last 的范围中的任何单个字符匹配。</td><td align="left">[b-d]</td><td align="left">[b-d]irds 可以匹配 Birds、 Cirds、 Dirds</td></tr><tr><td align="left"><strong>.</strong></td><td align="left">通配符：与除 \n 之外的任何单个字符匹配。 若要匹配原意句点字符（. 或 \u002E），您必须在该字符前面加上转义符 (.)。</td><td align="left">a.e</td><td align="left">“have” 中的 “ave”， “mate” 中的 “ate”</td></tr><tr><td align="left"><strong>\p{ name }</strong></td><td align="left">与 <em>name</em> 指定的 Unicode 通用类别或命名块中的任何单个字符匹配。</td><td align="left">\p{Lu}</td><td align="left">“City Lights” 中的 “C” 和 “L”</td></tr><tr><td align="left"><strong>\P{ name }</strong></td><td align="left">与不在 <em>name</em> 指定的 Unicode 通用类别或命名块中的任何单个字符匹配。</td><td align="left">\P{Lu}</td><td align="left">“City” 中的 “i”、 “t” 和 “y”</td></tr><tr><td align="left"><strong>\w</strong></td><td align="left">与任何单词字符匹配。</td><td align="left">\w</td><td align="left">“Room#1” 中的 “R”、 “o”、 “m” 和 “1”</td></tr><tr><td align="left"><strong>\W</strong></td><td align="left">与任何非单词字符匹配。</td><td align="left">\W</td><td align="left">“Room#1” 中的 “#”</td></tr><tr><td align="left"><strong>\s</strong></td><td align="left">与任何空白字符匹配。</td><td align="left">\w\s</td><td align="left">“ID A1.3” 中的 “D “</td></tr><tr><td align="left"><strong>\S</strong></td><td align="left">与任何非空白字符匹配。</td><td align="left">\s\S</td><td align="left">“int __ctr” 中的 “ _”</td></tr><tr><td align="left"><strong>\d</strong></td><td align="left">与任何十进制数字匹配。</td><td align="left">\d</td><td align="left">“4 &#x3D; IV” 中的 “4”</td></tr><tr><td align="left"><strong>\D</strong></td><td align="left">匹配不是十进制数的任意字符。</td><td align="left">\D</td><td align="left">“4 &#x3D; IV” 中的 “ “、 “&#x3D;”、 “ “、 “I” 和 “V”</td></tr></tbody></table><h1 id="定位点"><a href="#定位点" class="headerlink" title="定位点"></a>定位点</h1><p>定位点或原子零宽度断言会使匹配成功或失败，具体取决于字符串中的当前位置，但它们不会使引擎在字符串中前进或使用字符。</p><p>下表列出了定位点：</p><table><thead><tr><th align="left">断言</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left"><strong>^</strong></td><td align="left">匹配必须从字符串或一行的开头开始。</td><td align="left">^\d{3}</td><td align="left">“567-777-“ 中的 “567”</td></tr><tr><td align="left"><strong>$</strong></td><td align="left">匹配必须出现在字符串的末尾或出现在行或字符串末尾的 <strong>\n</strong> 之前。</td><td align="left">-\d{4}$</td><td align="left">“8-12-2012” 中的 “-2012”</td></tr><tr><td align="left"><strong>\A</strong></td><td align="left">匹配必须出现在字符串的开头。</td><td align="left">\A\w{4}</td><td align="left">“Code-007-“ 中的 “Code”</td></tr><tr><td align="left"><strong>\Z</strong></td><td align="left">匹配必须出现在字符串的末尾或出现在字符串末尾的 <strong>\n</strong> 之前。</td><td align="left">-\d{3}\Z</td><td align="left">“Bond-901-007” 中的 “-007”</td></tr><tr><td align="left"><strong>\z</strong></td><td align="left">匹配必须出现在字符串的末尾。</td><td align="left">-\d{3}\z</td><td align="left">“-901-333” 中的 “-333”</td></tr><tr><td align="left"><strong>\G</strong></td><td align="left">匹配必须出现在上一个匹配结束的地方。</td><td align="left">\G(\d)</td><td align="left">“(1)(3)(5)<a href="9">7</a>“ 中的 “(1)”、 “(3)” 和 “(5)”</td></tr><tr><td align="left"><strong>\b</strong></td><td align="left">匹配一个单词边界，也就是指单词和空格间的位置。</td><td align="left">er\b</td><td align="left">匹配”never”中的”er”，但不能匹配”verb”中的”er”。</td></tr><tr><td align="left"><strong>\B</strong></td><td align="left">匹配非单词边界。</td><td align="left">er\B</td><td align="left">匹配”verb”中的”er”，但不能匹配”never”中的”er”。</td></tr></tbody></table><h1 id="分组构造"><a href="#分组构造" class="headerlink" title="分组构造"></a>分组构造</h1><p>分组构造描述了正则表达式的子表达式，通常用于捕获输入字符串的子字符串。</p><p>这一部分比较难于理解，可以阅读 <strong><a href="https://www.runoob.com/regexp/regexp-syntax.html#reg-select">正则表达式-选择</a></strong> 、<strong><a href="https://www.runoob.com/w3cnote/reg-lookahead-lookbehind.html">正则表达式的先行断言(lookahead)和后行断言(lookbehind)</a></strong> 帮助理解。</p><p>下表列出了分组构造：</p><table><thead><tr><th align="left">分组构造</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left"><strong>( subexpression )</strong></td><td align="left">捕获匹配的子表达式并将其分配到一个从零开始的序号中。</td><td align="left">(\w)\1</td><td align="left">“deep” 中的 “ee”</td></tr><tr><td align="left"><strong>(?&lt; name &gt;subexpression)</strong></td><td align="left">将匹配的子表达式捕获到一个命名组中。</td><td align="left">(?&lt; double&gt;\w)\k&lt; double&gt;</td><td align="left">“deep” 中的 “ee”</td></tr><tr><td align="left"><strong>(?&lt; name1 -name2 &gt;subexpression)</strong></td><td align="left">定义平衡组定义。</td><td align="left">(((?’Open’()[^()]<em>)+((?’Close-Open’))[^()]</em>)+)*(?(Open)(?!))$</td><td align="left">“3+2^((1-3)<em>(3-1))” 中的 “((1-3)</em>(3-1))”</td></tr><tr><td align="left"><strong>(?: subexpression)</strong></td><td align="left">定义非捕获组。</td><td align="left">Write(?:Line)?</td><td align="left">“Console.WriteLine()” 中的 “WriteLine”</td></tr><tr><td align="left"><strong>(?imnsx-imnsx:subexpression)</strong></td><td align="left">应用或禁用 <em>subexpression</em> 中指定的选项。</td><td align="left">A\d{2}(?i:\w+)\b</td><td align="left">“A12xl A12XL a12xl” 中的 “A12xl” 和 “A12XL”</td></tr><tr><td align="left"><strong>(?&#x3D; subexpression)</strong></td><td align="left">零宽度正预测先行断言。</td><td align="left">\w+(?&#x3D;.)</td><td align="left">“He is. The dog ran. The sun is out.” 中的 “is”、 “ran” 和 “out”</td></tr><tr><td align="left"><strong>(?! subexpression)</strong></td><td align="left">零宽度负预测先行断言。</td><td align="left">\b(?!un)\w+\b</td><td align="left">“unsure sure unity used” 中的 “sure” 和 “used”</td></tr><tr><td align="left"><strong>(?&lt;&#x3D;subexpression)</strong></td><td align="left">零宽度正回顾后发断言。</td><td align="left">(?&lt;&#x3D;19)\d{2}\b</td><td align="left">“1851 1999 1950 1905 2003” 中的 “99”、”50”和 “05”</td></tr><tr><td align="left">**(?</td><td align="left">零宽度负回顾后发断言。</td><td align="left">(?&lt;!wo)man\b</td><td align="left">“Hi woman Hi man” 中的 “man”</td></tr><tr><td align="left"><strong>(?&gt; subexpression)</strong></td><td align="left">非回溯（也称为”贪婪”）子表达式。</td><td align="left"><a href="?%3EA+B+">13579</a></td><td align="left">“1ABB 3ABBC 5AB 5AC” 中的 “1ABB”、 “3ABB” 和 “5AB”</td></tr></tbody></table><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">string</span> input = <span class="string">&quot;1851 1999 1950 1905 2003&quot;</span>;</span><br><span class="line">      <span class="built_in">string</span> pattern = <span class="string">@&quot;(?&lt;=19)\d&#123;2&#125;\b&quot;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">foreach</span> (Match match <span class="keyword">in</span> Regex.Matches(input, pattern))</span><br><span class="line">         Console.WriteLine(match.Value);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h1><p>限定符指定在输入字符串中必须存在上一个元素（可以是字符、组或字符类）的多少个实例才能出现匹配项。 限定符包括下表中列出的语言元素。</p><p>下表列出了限定符：</p><table><thead><tr><th align="left">限定符</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left">*****</td><td align="left">匹配上一个元素零次或多次。</td><td align="left">\d*.\d</td><td align="left">“.0”、 “19.9”、 “219.9”</td></tr><tr><td align="left"><strong>+</strong></td><td align="left">匹配上一个元素一次或多次。</td><td align="left">“be+”</td><td align="left">“been” 中的 “bee”， “bent” 中的 “be”</td></tr><tr><td align="left"><strong>?</strong></td><td align="left">匹配上一个元素零次或一次。</td><td align="left">“rai?n”</td><td align="left">“ran”、 “rain”</td></tr><tr><td align="left"><strong>{ n }</strong></td><td align="left">匹配上一个元素恰好 n 次。</td><td align="left">“,\d{3}”</td><td align="left">“1,043.6” 中的 “,043”， “9,876,543,210” 中的 “,876”、 “,543” 和 “,210”</td></tr><tr><td align="left"><strong>{ n ,}</strong></td><td align="left">匹配上一个元素至少 n 次。</td><td align="left">“\d{2,}”</td><td align="left">“166”、 “29”、 “1930”</td></tr><tr><td align="left"><strong>{ n , m }</strong></td><td align="left">匹配上一个元素至少 n 次，但不多于 m 次。</td><td align="left">“\d{3,5}”</td><td align="left">“166”， “17668”， “193024” 中的 “19302”</td></tr><tr><td align="left">***?**</td><td align="left">匹配上一个元素零次或多次，但次数尽可能少。</td><td align="left">\d*?.\d</td><td align="left">“.0”、 “19.9”、 “219.9”</td></tr><tr><td align="left"><strong>+?</strong></td><td align="left">匹配上一个元素一次或多次，但次数尽可能少。</td><td align="left">“be+?”</td><td align="left">“been” 中的 “be”， “bent” 中的 “be”</td></tr><tr><td align="left"><strong>??</strong></td><td align="left">匹配上一个元素零次或一次，但次数尽可能少。</td><td align="left">“rai??n”</td><td align="left">“ran”、 “rain”</td></tr><tr><td align="left"><strong>{ n }?</strong></td><td align="left">匹配前导元素恰好 n 次。</td><td align="left">“,\d{3}?”</td><td align="left">“1,043.6” 中的 “,043”， “9,876,543,210” 中的 “,876”、 “,543” 和 “,210”</td></tr><tr><td align="left"><strong>{ n ,}?</strong></td><td align="left">匹配上一个元素至少 n 次，但次数尽可能少。</td><td align="left">“\d{2,}?”</td><td align="left">“166”、 “29” 和 “1930”</td></tr><tr><td align="left"><strong>{ n , m }?</strong></td><td align="left">匹配上一个元素的次数介于 n 和 m 之间，但次数尽可能少。</td><td align="left">“\d{3,5}?”</td><td align="left">“166”， “17668”， “193024” 中的 “193” 和 “024”</td></tr></tbody></table><h1 id="反向引用构造"><a href="#反向引用构造" class="headerlink" title="反向引用构造"></a>反向引用构造</h1><p>反向引用允许在同一正则表达式中随后标识以前匹配的子表达式。</p><p>下表列出了反向引用构造：</p><table><thead><tr><th align="left">反向引用构造</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left"><strong>\ number</strong></td><td align="left">反向引用。 匹配编号子表达式的值。</td><td align="left">(\w)\1</td><td align="left">“seek” 中的 “ee”</td></tr><tr><td align="left"><strong>\k&lt; name &gt;</strong></td><td align="left">命名反向引用。 匹配命名表达式的值。</td><td align="left">(?&lt; char&gt;\w)\k&lt; char&gt;</td><td align="left">“seek” 中的 “ee”</td></tr></tbody></table><h1 id="备用构造"><a href="#备用构造" class="headerlink" title="备用构造"></a>备用构造</h1><p>备用构造用于修改正则表达式以启用 either&#x2F;or 匹配。</p><p>下表列出了备用构造：</p><table><thead><tr><th align="left">备用构造</th><th align="left">描述</th><th align="left">模式</th><th align="left">匹配</th></tr></thead><tbody><tr><td align="left"><strong>|</strong></td><td align="left">匹配以竖线 (|) 字符分隔的任何一个元素。</td><td align="left">th(e|is|at)</td><td align="left">“this is the day. “ 中的 “the” 和 “this”</td></tr><tr><td align="left"><strong>(?( expression )yes | no )</strong></td><td align="left">如果正则表达式模式由 expression 匹配指定，则匹配 <em>yes</em>；否则匹配可选的 <em>no</em> 部分。 expression 被解释为零宽度断言。</td><td align="left">(?(A)A\d{2}\b|\b\d{3}\b)</td><td align="left">“A10 C103 910” 中的 “A10” 和 “910”</td></tr><tr><td align="left"><strong>(?( name )yes | no )</strong></td><td align="left">如果 name 或已命名或已编号的捕获组具有匹配，则匹配 <em>yes</em>；否则匹配可选的 <em>no</em>。</td><td align="left">(?&lt; quoted&gt;”)?(?(quoted).+?”|\S+\s)</td><td align="left">“Dogs.jpg “Yiska playing.jpg”” 中的 Dogs.jpg 和 “Yiska playing.jpg”</td></tr></tbody></table><h1 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h1><p>替换是替换模式中使用的正则表达式。</p><p>下表列出了用于替换的字符：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th><th align="left">模式</th><th align="left">替换模式</th><th align="left">输入字符串</th><th align="left">结果字符串</th></tr></thead><tbody><tr><td align="left">**$**number</td><td align="left">替换按组 <em>number</em> 匹配的子字符串。</td><td align="left">\b(\w+)(\s)(\w+)\b</td><td align="left">$3$2$1</td><td align="left">“one two”</td><td align="left">“two one”</td></tr><tr><td align="left"><strong>${<strong>name</strong>}</strong></td><td align="left">替换按命名组 <em>name</em> 匹配的子字符串。</td><td align="left">\b(?&lt; word1&gt;\w+)(\s)(?&lt; word2&gt;\w+)\b</td><td align="left">${word2} ${word1}</td><td align="left">“one two”</td><td align="left">“two one”</td></tr><tr><td align="left"><strong>$$</strong></td><td align="left">替换字符”$”。</td><td align="left">\b(\d+)\s?USD</td><td align="left">$$$1</td><td align="left">“103 USD”</td><td align="left">“$103”</td></tr><tr><td align="left"><strong>$&amp;</strong></td><td align="left">替换整个匹配项的一个副本。</td><td align="left">($<em>(\d</em>(.+\d+)?){1})</td><td align="left">**$&amp;</td><td align="left">“$1.30”</td><td align="left">“**$1.30”</td></tr><tr><td align="left"><strong>$&#96;</strong></td><td align="left">替换匹配前的输入字符串的所有文本。</td><td align="left">B+</td><td align="left">$&#96;</td><td align="left">“AABBCC”</td><td align="left">“AAAACC”</td></tr><tr><td align="left"><strong>$’</strong></td><td align="left">替换匹配后的输入字符串的所有文本。</td><td align="left">B+</td><td align="left">$’</td><td align="left">“AABBCC”</td><td align="left">“AACCCC”</td></tr><tr><td align="left"><strong>$+</strong></td><td align="left">替换最后捕获的组。</td><td align="left">B+(C+)</td><td align="left">$+</td><td align="left">“AABBCCDD”</td><td align="left">AACCDD</td></tr><tr><td align="left"><strong>$_</strong></td><td align="left">替换整个输入字符串。</td><td align="left">B+</td><td align="left">$_</td><td align="left">“AABBCC”</td><td align="left">“AAAABBCCCC”</td></tr></tbody></table><h1 id="杂项构造"><a href="#杂项构造" class="headerlink" title="杂项构造"></a>杂项构造</h1><p>下表列出了各种杂项构造：</p><table><thead><tr><th align="left">构造</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left"><strong>(?imnsx-imnsx)</strong></td><td align="left">在模式中间对诸如不区分大小写这样的选项进行设置或禁用。</td><td align="left">\bA(?i)b\w+\b 匹配 “ABA Able Act” 中的 “ABA” 和 “Able”</td></tr><tr><td align="left"><strong>(?#注释)</strong></td><td align="left">内联注释。该注释在第一个右括号处终止。</td><td align="left">\bA(?#匹配以A开头的单词)\w+\b</td></tr><tr><td align="left"><strong>#</strong> [行尾]</td><td align="left">该注释以非转义的 # 开头，并继续到行的结尾。</td><td align="left">(?x)\bA\w+\b#匹配以 A 开头的单词</td></tr></tbody></table><h1 id="Regex-类"><a href="#Regex-类" class="headerlink" title="Regex 类"></a>Regex 类</h1><p>Regex 类用于表示一个正则表达式。</p><p>下表列出了 Regex 类中一些常用的方法：</p><table><thead><tr><th align="left">序号</th><th align="left">方法 &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>public bool IsMatch( string input )</strong> 指示 Regex 构造函数中指定的正则表达式是否在指定的输入字符串中找到匹配项。</td></tr><tr><td align="left">2</td><td align="left"><strong>public bool IsMatch( string input, int startat )</strong> 指示 Regex 构造函数中指定的正则表达式是否在指定的输入字符串中找到匹配项，从字符串中指定的开始位置开始。</td></tr><tr><td align="left">3</td><td align="left"><strong>public static bool IsMatch( string input, string pattern )</strong> 指示指定的正则表达式是否在指定的输入字符串中找到匹配项。</td></tr><tr><td align="left">4</td><td align="left"><strong>public MatchCollection Matches( string input )</strong> 在指定的输入字符串中搜索正则表达式的所有匹配项。</td></tr><tr><td align="left">5</td><td align="left"><strong>public string Replace( string input, string replacement )</strong> 在指定的输入字符串中，把所有匹配正则表达式模式的所有匹配的字符串替换为指定的替换字符串。</td></tr><tr><td align="left">6</td><td align="left"><strong>public string[] Split( string input )</strong> 把输入字符串分割为子字符串数组，根据在 Regex 构造函数中指定的正则表达式模式定义的位置进行分割。</td></tr></tbody></table><p>如需了解 Regex 类的完整的属性列表，请参阅微软的 C# 文档。</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例 1"></a>实例 1</h2><p>下面的实例匹配了以 ‘S’ 开头的单词：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RegExApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showMatch</span>(<span class="params"><span class="built_in">string</span> text, <span class="built_in">string</span> expr</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;The Expression: &quot;</span> + expr);</span><br><span class="line">         MatchCollection mc = Regex.Matches(text, expr);</span><br><span class="line">         <span class="keyword">foreach</span> (Match m <span class="keyword">in</span> mc)</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(m);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span> str = <span class="string">&quot;A Thousand Splendid Suns&quot;</span>;</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Matching words that start with &#x27;S&#x27;: &quot;</span>);</span><br><span class="line">         showMatch(str, <span class="string">@&quot;\bS\S*&quot;</span>);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Matching words that start with &#x27;S&#x27;:</span><br><span class="line">The Expression: \bS\S*</span><br><span class="line">Splendid</span><br><span class="line">Suns</span><br></pre></td></tr></table></figure><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例 2"></a>实例 2</h2><p>下面的实例匹配了以 ‘m’ 开头以 ‘e’ 结尾的单词：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RegExApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showMatch</span>(<span class="params"><span class="built_in">string</span> text, <span class="built_in">string</span> expr</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;The Expression: &quot;</span> + expr);</span><br><span class="line">         MatchCollection mc = Regex.Matches(text, expr);</span><br><span class="line">         <span class="keyword">foreach</span> (Match m <span class="keyword">in</span> mc)</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(m);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span> str = <span class="string">&quot;make maze and manage to measure it&quot;</span>;</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Matching words start with &#x27;m&#x27; and ends with &#x27;e&#x27;:&quot;</span>);</span><br><span class="line">         showMatch(str, <span class="string">@&quot;\bm\S*e\b&quot;</span>);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Matching words start with &#x27;m&#x27; and ends with &#x27;e&#x27;:</span><br><span class="line">The Expression: \bm\S*e\b</span><br><span class="line">make</span><br><span class="line">maze</span><br><span class="line">manage</span><br><span class="line">measure</span><br></pre></td></tr></table></figure><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例 3"></a>实例 3</h2><p>下面的实例替换掉多余的空格：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text.RegularExpressions;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RegExApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span> input = <span class="string">&quot;Hello   World   &quot;</span>;</span><br><span class="line">         <span class="built_in">string</span> pattern = <span class="string">&quot;\\s+&quot;</span>;</span><br><span class="line">         <span class="built_in">string</span> replacement = <span class="string">&quot; &quot;</span>;</span><br><span class="line">         Regex rgx = <span class="keyword">new</span> Regex(pattern);</span><br><span class="line">         <span class="built_in">string</span> result = rgx.Replace(input, replacement);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Original String: &#123;0&#125;&quot;</span>, input);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Replacement String: &#123;0&#125;&quot;</span>, result);    </span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Original String: Hello   World   </span><br><span class="line">Replacement String: Hello World   </span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（25）预处理器指令</title>
      <link href="/2018/02/05/CSharp/25CSharp_Dedine/"/>
      <url>/2018/02/05/CSharp/25CSharp_Dedine/</url>
      
        <content type="html"><![CDATA[<h1 id="C-预处理器指令"><a href="#C-预处理器指令" class="headerlink" title="C# 预处理器指令"></a>C# 预处理器指令</h1><p>预处理器指令指导编译器在实际编译开始之前对信息进行预处理。</p><p>所有的预处理器指令都是以 # 开始。且在一行上，只有空白字符可以出现在预处理器指令之前。预处理器指令不是语句，所以它们不以分号（;）结束。</p><p>C# 编译器没有一个单独的预处理器，但是，指令被处理时就像是有一个单独的预处理器一样。在 C# 中，预处理器指令用于在条件编译中起作用。与 C 和 C++ 不同的是，它们不是用来创建宏。一个预处理器指令必须是该行上的唯一指令。</p><h1 id="C-预处理器指令列表"><a href="#C-预处理器指令列表" class="headerlink" title="C# 预处理器指令列表"></a>C# 预处理器指令列表</h1><p>下表列出了 C# 中可用的预处理器指令：</p><table><thead><tr><th align="left">预处理器指令</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">#define</td><td align="left">它用于定义一系列成为符号的字符。</td></tr><tr><td align="left">#undef</td><td align="left">它用于取消定义符号。</td></tr><tr><td align="left">#if</td><td align="left">它用于测试符号是否为真。</td></tr><tr><td align="left">#else</td><td align="left">它用于创建复合条件指令，与 #if 一起使用。</td></tr><tr><td align="left">#elif</td><td align="left">它用于创建复合条件指令。</td></tr><tr><td align="left">#endif</td><td align="left">指定一个条件指令的结束。</td></tr><tr><td align="left">#line</td><td align="left">它可以让您修改编译器的行数以及（可选地）输出错误和警告的文件名。</td></tr><tr><td align="left">#error</td><td align="left">它允许从代码的指定位置生成一个错误。</td></tr><tr><td align="left">#warning</td><td align="left">它允许从代码的指定位置生成一级警告。</td></tr><tr><td align="left">#region</td><td align="left">它可以让您在使用 Visual Studio Code Editor 的大纲特性时，指定一个可展开或折叠的代码块。</td></tr><tr><td align="left">#endregion</td><td align="left">它标识着 #region 块的结束。</td></tr></tbody></table><h1 id="define-预处理器"><a href="#define-预处理器" class="headerlink" title="#define 预处理器"></a>#define 预处理器</h1><p>#define 预处理器指令创建符号常量。</p><p>#define 允许您定义一个符号，这样，通过使用符号作为传递给 #if 指令的表达式，表达式将返回 true。它的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define symbol</span><br></pre></td></tr></table></figure><p>下面的程序说明了这点：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> PI</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PreprocessorDAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="meta">#<span class="keyword">if</span> (PI)</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;PI is defined&quot;</span>);</span><br><span class="line">         <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;PI is not defined&quot;</span>);</span><br><span class="line">         <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PI is defined</span><br></pre></td></tr></table></figure><h1 id="条件指令"><a href="#条件指令" class="headerlink" title="条件指令"></a>条件指令</h1><p>您可以使用 #if 指令来创建一个条件指令。条件指令用于测试符号是否为真。如果为真，编译器会执行 #if 和下一个指令之间的代码。</p><p>条件指令的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#if symbol [operator symbol]...</span><br></pre></td></tr></table></figure><p>其中，<em>symbol</em> 是要测试的符号名称。您也可以使用 true 和 false，或在符号前放置否定运算符。</p><p>常见运算符有：</p><ul><li>&#x3D;&#x3D; (等于)</li><li>!&#x3D; (不等于)</li><li>&amp;&amp; (与)</li><li>|| (或)</li></ul><p>您也可以用括号把符号和运算符进行分组。条件指令用于在调试版本或编译指定配置时编译代码。一个以 <strong>#if</strong> 指令开始的条件指令，必须显示地以一个 <strong>#endif</strong> 指令终止。</p><p>下面的程序演示了条件指令的用法：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VC_V10</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestClass</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      <span class="meta">#<span class="keyword">if</span> (DEBUG &amp;&amp; !VC_V10)</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;DEBUG is defined&quot;</span>);</span><br><span class="line">      <span class="meta">#<span class="keyword">elif</span> (!DEBUG &amp;&amp; VC_V10)</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;VC_V10 is defined&quot;</span>);</span><br><span class="line">      <span class="meta">#<span class="keyword">elif</span> (DEBUG &amp;&amp; VC_V10)</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;DEBUG and VC_V10 are defined&quot;</span>);</span><br><span class="line">      <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;DEBUG and VC_V10 are not defined&quot;</span>);</span><br><span class="line">      <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">      Console.ReadKey();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEBUG and VC_V10 are defined</span><br></pre></td></tr></table></figure><h1 id="预处理器指令的用途理解："><a href="#预处理器指令的用途理解：" class="headerlink" title="预处理器指令的用途理解："></a>预处理器指令的用途理解：</h1><p>在程序调试和运行上有重要的作用。比如预处理器指令可以禁止编译器编译代码的某一部分，如果计划发布两个版本的代码，即基本版本和有更多功能的企业版本，就可以使用这些预处理器指令来控制。在编译软件的基本版本时，使用预处理器指令还可以禁止编译器编译于额外功能相关的代码。另外，在编写提供调试信息的代码时，也可以使用预处理器指令进行控制。总的来说和普通的控制语句（if等）功能类似，方便在于预处理器指令包含的未执行部分是不需要编译的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> PI</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PreprocessorDAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="meta">#<span class="keyword">if</span> (PI)</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;PI is defined&quot;</span>);     <span class="comment">//PI不存在，则这条语句不编译</span></span><br><span class="line">         <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;PI is not defined&quot;</span>); <span class="comment">//PI存在，则这条语句不编译</span></span><br><span class="line">         <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他预处理器指令：</p><h2 id="1-warning-和-error："><a href="#1-warning-和-error：" class="headerlink" title="1.#warning 和 #error："></a><strong>1.#warning 和 #error：</strong></h2><p>当编译器遇到它们时，会分别产生警告或错误。如果编译器遇到 #warning 指令，会给用户显示 #warning 指令后面的文本，之后编译继续进行。如果编译器遇到 #error 指令，就会给用户显示后面的文本，作为一条编译错误消息，然后会立即退出编译。使用这两条指令可以检查 #define 语句是不是做错了什么事，使用 #warning 语句可以提醒自己执行某个操作。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#if DEBUG &amp;&amp; RELEASE  </span><br><span class="line">#error &quot;You&#x27;ve defined DEBUG and RELEASE simultaneously!&quot;  </span><br><span class="line">#endif  </span><br><span class="line">#warning &quot;Don&#x27;t forget to remove this line before the boss tests the code!&quot;  </span><br><span class="line">Console.WriteLine(&quot;*I hate this job.*&quot;);</span><br></pre></td></tr></table></figure><h2 id="2-region-和-endregion"><a href="#2-region-和-endregion" class="headerlink" title="2. #region 和 #endregion"></a><strong>2. #region 和 #endregion</strong></h2><p>#region 和 #endregion 指令用于把一段代码标记为有给定名称的一个块，如下所示:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#region Member Field Declarations</span><br><span class="line">int x;</span><br><span class="line">double d;</span><br><span class="line">Currency balance;</span><br><span class="line">#endregion</span><br></pre></td></tr></table></figure><p>这看起来似乎没有什么用，它不影响编译过程。这些指令的优点是它们可以被某些编辑器识别，包括 Visual Studio .NET 编辑器。这些编辑器可以使用这些指令使代码在屏幕上更好地布局。</p><h2 id="3-line"><a href="#3-line" class="headerlink" title="3. #line"></a><strong>3. #line</strong></h2><p>#line 指令可以用于改变编译器在警告和错误信息中显示的文件名和行号信息，不常用。</p><p>如果编写代码时，在把代码发送给编译器前，要使用某些软件包改变输入的代码，就可以使用这个指令，因为这意味着编译器报告的行号或文件名与文件中的行号或编辑的文件名不匹配。#line指令可以用于还原这种匹配。也可以使用语法#line default把行号还原为默认的行号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#line 164 &quot;Core.cs&quot; // 在文件的第 164 行</span><br><span class="line">// Core.cs, before the intermediate</span><br><span class="line">// package mangles it.</span><br><span class="line">// later on</span><br><span class="line">#line default // 恢复默认行号</span><br></pre></td></tr></table></figure><h2 id="4-pragma"><a href="#4-pragma" class="headerlink" title="4. #pragma"></a><strong>4. #pragma</strong></h2><p>#pragma 指令可以抑制或还原指定的编译警告。与命令行选项不同，#pragma 指令可以在类或方法级别执行，对抑制警告的内容和抑制的时间进行更精细的控制。如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#pragma warning disable 169    // 取消编号 169 的警告（字段未使用的警告）</span><br><span class="line">public class MyClass</span><br><span class="line">&#123;</span><br><span class="line">    int neverUsedField;       // 编译整个 MyClass 类时不会发出警告</span><br><span class="line">&#125;</span><br><span class="line">#pragma warning restore 169   // 恢复编号 169 的警告</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（24）命名空间（Namespace）</title>
      <link href="/2018/02/02/CSharp/24CSharp_Namespace/"/>
      <url>/2018/02/02/CSharp/24CSharp_Namespace/</url>
      
        <content type="html"><![CDATA[<h1 id="命名空间（Namespace）"><a href="#命名空间（Namespace）" class="headerlink" title="命名空间（Namespace）"></a>命名空间（Namespace）</h1><p><strong>命名空间</strong>的设计目的是提供一种让一组名称与其他名称分隔开的方式。在一个命名空间中声明的类的名称与另一个命名空间中声明的相同的类的名称不冲突。</p><p>我们举一个计算机系统中的例子，一个文件夹(目录)中可以包含多个文件夹，每个文件夹中不能有相同的文件名，但不同文件夹中的文件可以重名。</p><p><img src="https://www.runoob.com/wp-content/uploads/2019/09/0129A8E9-30FE-431D-8C48-399EA4841E9D.jpg" alt="img"></p><h1 id="定义命名空间"><a href="#定义命名空间" class="headerlink" title="定义命名空间"></a>定义命名空间</h1><p>命名空间的定义是以关键字 <strong>namespace</strong> 开始，后跟命名空间的名称，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">namespace_name</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 代码声明</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了调用支持命名空间版本的函数或变量，会把命名空间的名称置于前面，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namespace_name.item_name;</span><br></pre></td></tr></table></figure><p>下面的程序演示了命名空间的用法：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">first_space</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">namespace_cl</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Inside first_space&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">second_space</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">namespace_cl</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Inside second_space&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">class</span> <span class="title">TestClass</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">      first_space.namespace_cl fc = <span class="keyword">new</span> first_space.namespace_cl();</span><br><span class="line">      second_space.namespace_cl sc = <span class="keyword">new</span> second_space.namespace_cl();</span><br><span class="line">      fc.func();</span><br><span class="line">      sc.func();</span><br><span class="line">      Console.ReadKey();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Inside first_space</span><br><span class="line">Inside second_space</span><br></pre></td></tr></table></figure><h1 id="using-关键字"><a href="#using-关键字" class="headerlink" title="using 关键字"></a><em>using</em> 关键字</h1><p><strong>using</strong> 关键字表明程序使用的是给定命名空间中的名称。例如，我们在程序中使用 <strong>System</strong> 命名空间，其中定义了类 Console。我们可以只写：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine (<span class="string">&quot;Hello there&quot;</span>);</span><br></pre></td></tr></table></figure><p>我们可以写完全限定名称，如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.Console.WriteLine(<span class="string">&quot;Hello there&quot;</span>);</span><br></pre></td></tr></table></figure><p>您也可以使用 <strong>using</strong> 命名空间指令，这样在使用的时候就不用在前面加上命名空间名称。该指令告诉编译器随后的代码使用了指定命名空间中的名称。下面的代码演示了命名空间的应用。</p><p>让我们使用 using 指定重写上面的实例：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">first_space</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">namespace_cl</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Inside first_space&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">second_space</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">namespace_cl</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">func</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Inside second_space&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">class</span> <span class="title">TestClass</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">      first_space.namespace_cl fc = <span class="keyword">new</span> first_space.namespace_cl();</span><br><span class="line">      second_space.namespace_cl sc = <span class="keyword">new</span> second_space.namespace_cl();</span><br><span class="line">      fc.func();</span><br><span class="line">      sc.func();</span><br><span class="line">      Console.ReadKey();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Inside first_space</span><br><span class="line">Inside second_space</span><br></pre></td></tr></table></figure><h1 id="嵌套命名空间"><a href="#嵌套命名空间" class="headerlink" title="嵌套命名空间"></a>嵌套命名空间</h1><p>命名空间可以被嵌套，即您可以在一个命名空间内定义另一个命名空间，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">namespace_name1</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 代码声明</span></span><br><span class="line">   <span class="keyword">namespace</span> <span class="title">namespace_name2</span> </span><br><span class="line">   &#123;</span><br><span class="line">     <span class="comment">// 代码声明</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可以使用点（.）运算符访问嵌套的命名空间的成员，如下所示：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> SomeNameSpace;</span><br><span class="line"><span class="keyword">using</span> SomeNameSpace.Nested;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SomeNameSpace</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;In SomeNameSpace&quot;</span>);</span><br><span class="line">            Nested.NestedNameSpaceClass.SayHello();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 内嵌命名空间</span></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">Nested</span>  </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NestedNameSpaceClass</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SayHello</span>()</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;In Nested&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In SomeNameSpace</span><br><span class="line">In Nested</span><br></pre></td></tr></table></figure><h1 id="using的用法："><a href="#using的用法：" class="headerlink" title="using的用法："></a>using的用法：</h1><p><strong>1. using指令：引入命名空间</strong></p><p>这是最常见的用法，例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Namespace1.SubNameSpace;</span><br></pre></td></tr></table></figure><p><strong>2. using static 指令：指定无需指定类型名称即可访问其静态成员的类型</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">using static System.Math;var = PI; // 直接使用System.Math.PI</span><br></pre></td></tr></table></figure><p><strong>3. 起别名</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Project = PC.MyCompany.Project;</span><br></pre></td></tr></table></figure><p><strong>4. using语句：将实例与代码绑定</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> (Font font3 = <span class="keyword">new</span> Font(<span class="string">&quot;Arial&quot;</span>, <span class="number">10.0f</span>),</span><br><span class="line">            font4 = <span class="keyword">new</span> Font(<span class="string">&quot;Arial&quot;</span>, <span class="number">10.0f</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Use font3 and font4.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码段结束时，自动调用font3和font4的Dispose方法，释放实例。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（23）接口（Interface）</title>
      <link href="/2018/02/01/CSharp/23CSharp_Interface/"/>
      <url>/2018/02/01/CSharp/23CSharp_Interface/</url>
      
        <content type="html"><![CDATA[<h1 id="接口（Interface）"><a href="#接口（Interface）" class="headerlink" title="接口（Interface）"></a>接口（Interface）</h1><p>接口定义了所有类继承接口时应遵循的语法合同。接口定义了语法合同 <strong>“是什么”</strong> 部分，派生类定义了语法合同 <strong>“怎么做”</strong> 部分。</p><p>接口定义了属性、方法和事件，这些都是接口的成员。接口只包含了成员的声明。成员的定义是派生类的责任。接口提供了派生类应遵循的标准结构。</p><p>接口使得实现接口的类或结构在形式上保持一致。</p><p>抽象类在某种程度上与接口类似，但是，它们大多只是用在当只有少数方法由基类声明由派生类实现时。</p><p>接口本身并不实现任何功能，它只是和声明实现该接口的对象订立一个必须实现哪些行为的契约。</p><p>抽象类不能直接实例化，但允许派生出具体的，具有实际功能的类。</p><hr><h1 id="定义接口-MyInterface-cs"><a href="#定义接口-MyInterface-cs" class="headerlink" title="定义接口: MyInterface.cs"></a>定义接口: MyInterface.cs</h1><p>接口使用 <strong>interface</strong> 关键字声明，它与类的声明类似。接口声明默认是 public 的。下面是一个接口声明的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title">IMyInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MethodToImplement</span>()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码定义了接口 IMyInterface。通常接口命令以 <strong>I</strong> 字母开头，这个接口只有一个方法 MethodToImplement()，没有参数和返回值，当然我们可以按照需求设置参数和返回值。</p><p>值得注意的是，该方法并没有具体的实现。</p><h1 id="接下来我们来实现以上接口：InterfaceImplementer-cs"><a href="#接下来我们来实现以上接口：InterfaceImplementer-cs" class="headerlink" title="接下来我们来实现以上接口：InterfaceImplementer.cs"></a>接下来我们来实现以上接口：InterfaceImplementer.cs</h1><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title">IMyInterface</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">// 接口成员</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MethodToImplement</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">InterfaceImplementer</span> : <span class="title">IMyInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InterfaceImplementer iImp = <span class="keyword">new</span> InterfaceImplementer();</span><br><span class="line">        iImp.MethodToImplement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MethodToImplement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;MethodToImplement() called.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>InterfaceImplementer 类实现了 IMyInterface 接口，接口的实现与类的继承语法格式类似：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">InterfaceImplementer</span> : <span class="title">IMyInterface</span></span><br></pre></td></tr></table></figure><p>继承接口后，我们需要实现接口的方法 MethodToImplement() , 方法名必须与接口定义的方法名一致。</p><hr><h1 id="接口继承-InterfaceInheritance-cs"><a href="#接口继承-InterfaceInheritance-cs" class="headerlink" title="接口继承: InterfaceInheritance.cs"></a>接口继承: InterfaceInheritance.cs</h1><p>以下实例定义了两个接口 IMyInterface 和 IParentInterface。</p><p>如果一个接口继承其他接口，那么实现类或结构就需要实现所有接口的成员。</p><p>以下实例 IMyInterface 继承了 IParentInterface 接口，因此接口实现类必须实现 MethodToImplement() 和 ParentInterfaceMethod() 方法：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title">IParentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ParentInterfaceMethod</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title">IMyInterface</span> : <span class="title">IParentInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MethodToImplement</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">InterfaceImplementer</span> : <span class="title">IMyInterface</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        InterfaceImplementer iImp = <span class="keyword">new</span> InterfaceImplementer();</span><br><span class="line">        iImp.MethodToImplement();</span><br><span class="line">        iImp.ParentInterfaceMethod();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MethodToImplement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;MethodToImplement() called.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ParentInterfaceMethod</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;ParentInterfaceMethod() called.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例输出结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MethodToImplement() called.</span><br><span class="line">ParentInterfaceMethod() called.</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（22）运算符重载</title>
      <link href="/2018/01/31/CSharp/22CSharp_Overload/"/>
      <url>/2018/01/31/CSharp/22CSharp_Overload/</url>
      
        <content type="html"><![CDATA[<h1 id="C-运算符重载"><a href="#C-运算符重载" class="headerlink" title="C# 运算符重载"></a>C# 运算符重载</h1><p>您可以重定义或重载 C# 中内置的运算符。因此，程序员也可以使用用户自定义类型的运算符。重载运算符是具有特殊名称的函数，是通过关键字 <strong>operator</strong> 后跟运算符的符号来定义的。与其他函数一样，重载运算符有返回类型和参数列表。</p><p>例如，请看下面的函数：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Box <span class="keyword">operator</span>+ (Box b, Box c)</span><br><span class="line">&#123;</span><br><span class="line">   Box box = <span class="keyword">new</span> Box();</span><br><span class="line">   box.length = b.length + c.length;</span><br><span class="line">   box.breadth = b.breadth + c.breadth;</span><br><span class="line">   box.height = b.height + c.height;</span><br><span class="line">   <span class="keyword">return</span> box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的函数为用户自定义的类 Box 实现了加法运算符（+）。它把两个 Box 对象的属性相加，并返回相加后的 Box 对象。</p><h1 id="运算符重载的实现"><a href="#运算符重载的实现" class="headerlink" title="运算符重载的实现"></a>运算符重载的实现</h1><p>下面的程序演示了完整的实现：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorOvlApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Box</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> length;      <span class="comment">// 长度</span></span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> breadth;     <span class="comment">// 宽度</span></span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> height;      <span class="comment">// 高度</span></span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getVolume</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> length * breadth * height;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span>(<span class="params"> <span class="built_in">double</span> len </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = len;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBreadth</span>(<span class="params"> <span class="built_in">double</span> bre </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         breadth = bre;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span>(<span class="params"> <span class="built_in">double</span> hei </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         height = hei;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 重载 + 运算符来把两个 Box 对象相加</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> Box <span class="keyword">operator</span>+ (Box b, Box c)</span><br><span class="line">      &#123;</span><br><span class="line">         Box box = <span class="keyword">new</span> Box();</span><br><span class="line">         box.length = b.length + c.length;</span><br><span class="line">         box.breadth = b.breadth + c.breadth;</span><br><span class="line">         box.height = b.height + c.height;</span><br><span class="line">         <span class="keyword">return</span> box;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">class</span> <span class="title">Tester</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Box Box1 = <span class="keyword">new</span> Box();         <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">         Box Box2 = <span class="keyword">new</span> Box();         <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">         Box Box3 = <span class="keyword">new</span> Box();         <span class="comment">// 声明 Box3，类型为 Box</span></span><br><span class="line">         <span class="built_in">double</span> volume = <span class="number">0.0</span>;          <span class="comment">// 体积</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">// Box1 详述</span></span><br><span class="line">         Box1.setLength(<span class="number">6.0</span>);</span><br><span class="line">         Box1.setBreadth(<span class="number">7.0</span>);</span><br><span class="line">         Box1.setHeight(<span class="number">5.0</span>);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Box2 详述</span></span><br><span class="line">         Box2.setLength(<span class="number">12.0</span>);</span><br><span class="line">         Box2.setBreadth(<span class="number">13.0</span>);</span><br><span class="line">         Box2.setHeight(<span class="number">10.0</span>);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Box1 的体积</span></span><br><span class="line">         volume = Box1.getVolume();</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Box1 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Box2 的体积</span></span><br><span class="line">         volume = Box2.getVolume();</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Box2 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 把两个对象相加</span></span><br><span class="line">         Box3 = Box1 + Box2;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Box3 的体积</span></span><br><span class="line">         volume = Box3.getVolume();</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Box3 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Box1 的体积： 210</span><br><span class="line">Box2 的体积： 1560</span><br><span class="line">Box3 的体积： 5400</span><br></pre></td></tr></table></figure><h1 id="可重载和不可重载运算符"><a href="#可重载和不可重载运算符" class="headerlink" title="可重载和不可重载运算符"></a>可重载和不可重载运算符</h1><p>下表描述了 C# 中运算符重载的能力：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">+, -, !, ~, ++, –</td><td align="left">这些一元运算符只有一个操作数，且可以被重载。</td></tr><tr><td align="left">+, -, *, &#x2F;, %</td><td align="left">这些二元运算符带有两个操作数，且可以被重载。</td></tr><tr><td align="left">&#x3D;&#x3D;, !&#x3D;, &lt;, &gt;, &lt;&#x3D;, &gt;&#x3D;</td><td align="left">这些比较运算符可以被重载。</td></tr><tr><td align="left">&amp;&amp;, ||</td><td align="left">这些条件逻辑运算符不能被直接重载。</td></tr><tr><td align="left">+&#x3D;, -&#x3D;, *&#x3D;, &#x2F;&#x3D;, %&#x3D;</td><td align="left">这些赋值运算符不能被重载。</td></tr><tr><td align="left">&#x3D;, ., ?:, -&gt;, new, is, sizeof, typeof</td><td align="left">这些运算符不能被重载。</td></tr></tbody></table><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>针对上述讨论，让我们扩展上面的实例，重载更多的运算符：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorOvlApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Box</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">double</span> length;      <span class="comment">// 长度</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">double</span> breadth;     <span class="comment">// 宽度</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">double</span> height;      <span class="comment">// 高度</span></span><br><span class="line">     </span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getVolume</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">         <span class="keyword">return</span> length * breadth * height;</span><br><span class="line">       &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span>(<span class="params"> <span class="built_in">double</span> len </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          length = len;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBreadth</span>(<span class="params"> <span class="built_in">double</span> bre </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          breadth = bre;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span>(<span class="params"> <span class="built_in">double</span> hei </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          height = hei;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 重载 + 运算符来把两个 Box 对象相加</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> Box <span class="keyword">operator</span>+ (Box b, Box c)</span><br><span class="line">      &#123;</span><br><span class="line">          Box box = <span class="keyword">new</span> Box();</span><br><span class="line">          box.length = b.length + c.length;</span><br><span class="line">          box.breadth = b.breadth + c.breadth;</span><br><span class="line">          box.height = b.height + c.height;</span><br><span class="line">          <span class="keyword">return</span> box;</span><br><span class="line">      &#125;</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">operator</span> == (Box lhs, Box rhs)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">bool</span> status = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (lhs.length == rhs.length &amp;&amp; lhs.height == rhs.height</span><br><span class="line">             &amp;&amp; lhs.breadth == rhs.breadth)</span><br><span class="line">          &#123;</span><br><span class="line">              status = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> status;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">operator</span> !=(Box lhs, Box rhs)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">bool</span> status = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (lhs.length != rhs.length || lhs.height != rhs.height</span><br><span class="line">              || lhs.breadth != rhs.breadth)</span><br><span class="line">          &#123;</span><br><span class="line">              status = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> status;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">operator</span> &lt;(Box lhs, Box rhs)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">bool</span> status = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (lhs.length &lt; rhs.length &amp;&amp; lhs.height</span><br><span class="line">              &lt; rhs.height &amp;&amp; lhs.breadth &lt; rhs.breadth)</span><br><span class="line">          &#123;</span><br><span class="line">              status = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> status;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">operator</span> &gt;(Box lhs, Box rhs)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">bool</span> status = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (lhs.length &gt; rhs.length &amp;&amp; lhs.height</span><br><span class="line">              &gt; rhs.height &amp;&amp; lhs.breadth &gt; rhs.breadth)</span><br><span class="line">          &#123;</span><br><span class="line">              status = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> status;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">operator</span> &lt;=(Box lhs, Box rhs)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">bool</span> status = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (lhs.length &lt;= rhs.length &amp;&amp; lhs.height</span><br><span class="line">              &lt;= rhs.height &amp;&amp; lhs.breadth &lt;= rhs.breadth)</span><br><span class="line">          &#123;</span><br><span class="line">              status = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> status;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="keyword">operator</span> &gt;=(Box lhs, Box rhs)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">bool</span> status = <span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">if</span> (lhs.length &gt;= rhs.length &amp;&amp; lhs.height</span><br><span class="line">             &gt;= rhs.height &amp;&amp; lhs.breadth &gt;= rhs.breadth)</span><br><span class="line">          &#123;</span><br><span class="line">              status = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> status;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> String.Format(<span class="string">&quot;(&#123;0&#125;, &#123;1&#125;, &#123;2&#125;)&quot;</span>, length, breadth, height);</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">class</span> <span class="title">Tester</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">        Box Box1 = <span class="keyword">new</span> Box();          <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">        Box Box2 = <span class="keyword">new</span> Box();          <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">        Box Box3 = <span class="keyword">new</span> Box();          <span class="comment">// 声明 Box3，类型为 Box</span></span><br><span class="line">        Box Box4 = <span class="keyword">new</span> Box();</span><br><span class="line">        <span class="built_in">double</span> volume = <span class="number">0.0</span>;   <span class="comment">// 体积</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Box1 详述</span></span><br><span class="line">        Box1.setLength(<span class="number">6.0</span>);</span><br><span class="line">        Box1.setBreadth(<span class="number">7.0</span>);</span><br><span class="line">        Box1.setHeight(<span class="number">5.0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Box2 详述</span></span><br><span class="line">        Box2.setLength(<span class="number">12.0</span>);</span><br><span class="line">        Box2.setBreadth(<span class="number">13.0</span>);</span><br><span class="line">        Box2.setHeight(<span class="number">10.0</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 使用重载的 ToString() 显示两个盒子</span></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Box1： &#123;0&#125;&quot;</span>, Box1.ToString());</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Box2： &#123;0&#125;&quot;</span>, Box2.ToString());</span><br><span class="line">       </span><br><span class="line">        <span class="comment">// Box1 的体积</span></span><br><span class="line">        volume = Box1.getVolume();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Box1 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Box2 的体积</span></span><br><span class="line">        volume = Box2.getVolume();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Box2 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把两个对象相加</span></span><br><span class="line">        Box3 = Box1 + Box2;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Box3： &#123;0&#125;&quot;</span>, Box3.ToString());</span><br><span class="line">        <span class="comment">// Box3 的体积</span></span><br><span class="line">        volume = Box3.getVolume();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Box3 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//comparing the boxes</span></span><br><span class="line">        <span class="keyword">if</span> (Box1 &gt; Box2)</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 大于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 不大于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Box1 &lt; Box2)</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 小于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 不小于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Box1 &gt;= Box2)</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 大于等于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 不大于等于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Box1 &lt;= Box2)</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 小于等于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 不小于等于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (Box1 != Box2)</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 不等于 Box2&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box1 等于 Box2&quot;</span>);</span><br><span class="line">        Box4 = Box3;</span><br><span class="line">        <span class="keyword">if</span> (Box3 == Box4)</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box3 等于 Box4&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Box3 不等于 Box4&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Box1： (6, 7, 5)</span><br><span class="line">Box2： (12, 13, 10)</span><br><span class="line">Box1 的体积： 210</span><br><span class="line">Box2 的体积： 1560</span><br><span class="line">Box3： (18, 20, 15)</span><br><span class="line">Box3 的体积： 5400</span><br><span class="line">Box1 不大于 Box2</span><br><span class="line">Box1 小于 Box2</span><br><span class="line">Box1 不大于等于 Box2</span><br><span class="line">Box1 小于等于 Box2</span><br><span class="line">Box1 不等于 Box2</span><br><span class="line">Box3 等于 Box4</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（21）多态性</title>
      <link href="/2018/01/30/CSharp/21CSharp_Polymorphism/"/>
      <url>/2018/01/30/CSharp/21CSharp_Polymorphism/</url>
      
        <content type="html"><![CDATA[<h1 id="C-多态性"><a href="#C-多态性" class="headerlink" title="C# 多态性"></a>C# 多态性</h1><p>多态是同一个行为具有多个不同表现形式或形态的能力。</p><p><strong>多态性</strong>意味着有多重形式。在面向对象编程范式中，多态性往往表现为”一个接口，多个功能”。</p><p>多态性可以是静态的或动态的。在<strong>静态多态性</strong>中，函数的响应是在编译时发生的。在<strong>动态多态性</strong>中，函数的响应是在运行时发生的。</p><p>在 C# 中，每个类型都是多态的，因为包括用户定义类型在内的所有类型都继承自 Object。</p><p>多态就是同一个接口，使用不同的实例而执行不同操作，如图所示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/12/dt-java.png" alt="img"></p><blockquote><p>现实中，比如我们按下 F1 键这个动作：</p><ul><li>如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；</li><li>如果当前在 Word 下弹出的就是 Word 帮助；</li><li>在 Windows 下弹出的就是 Windows 帮助和支持。</li></ul><p>同一个事件发生在不同的对象上会产生不同的结果。</p></blockquote><h1 id="静态多态性"><a href="#静态多态性" class="headerlink" title="静态多态性"></a>静态多态性</h1><p>在编译时，函数和对象的连接机制被称为早期绑定，也被称为静态绑定。C# 提供了两种技术来实现静态多态性。分别为：</p><ul><li>函数重载</li><li>运算符重载</li></ul><p>运算符重载将在下一章节讨论，接下来我们将讨论函数重载。</p><hr><h1 id="函数重载"><a href="#函数重载" class="headerlink" title="函数重载"></a>函数重载</h1><p>您可以在同一个范围内对相同的函数名有多个定义。函数的定义必须彼此不同，可以是参数列表中的参数类型不同，也可以是参数个数不同。不能重载只有返回类型不同的函数声明。</p><p>下面的实例演示了几个相同的函数 <strong>Add()</strong>，用于对不同个数参数进行相加处理：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PolymorphismApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestData</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Add</span>(<span class="params"><span class="built_in">int</span> a, <span class="built_in">int</span> b, <span class="built_in">int</span> c</span>)</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> a + b + c;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Add</span>(<span class="params"><span class="built_in">int</span> a, <span class="built_in">int</span> b</span>)</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">return</span> a + b;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span>  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span>  </span><br><span class="line">        &#123;  </span><br><span class="line">            TestData dataClass = <span class="keyword">new</span> TestData();</span><br><span class="line">            <span class="built_in">int</span> add1 = dataClass.Add(<span class="number">1</span>, <span class="number">2</span>);  </span><br><span class="line">            <span class="built_in">int</span> add2 = dataClass.Add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;add1 :&quot;</span> + add1);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;add2 :&quot;</span> + add2);  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的实例演示了几个相同的函数 <strong>print()</strong>，用于打印不同的数据类型：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PolymorphismApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Printdata</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">print</span>(<span class="params"><span class="built_in">int</span> i</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;输出整型: &#123;0&#125;&quot;</span>, i );</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">print</span>(<span class="params"><span class="built_in">double</span> f</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;输出浮点型: &#123;0&#125;&quot;</span> , f);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">print</span>(<span class="params"><span class="built_in">string</span> s</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;输出字符串: &#123;0&#125;&quot;</span>, s);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Printdata p = <span class="keyword">new</span> Printdata();</span><br><span class="line">         <span class="comment">// 调用 print 来打印整数</span></span><br><span class="line">         p.print(<span class="number">1</span>);</span><br><span class="line">         <span class="comment">// 调用 print 来打印浮点数</span></span><br><span class="line">         p.print(<span class="number">1.23</span>);</span><br><span class="line">         <span class="comment">// 调用 print 来打印字符串</span></span><br><span class="line">         p.print(<span class="string">&quot;Hello Runoob&quot;</span>);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输出整型: 1</span><br><span class="line">输出浮点型: 1.23</span><br><span class="line">输出字符串: Hello Runoob</span><br></pre></td></tr></table></figure><hr><h1 id="动态多态性"><a href="#动态多态性" class="headerlink" title="动态多态性"></a>动态多态性</h1><p>C# 允许您使用关键字 <strong>abstract</strong> 创建抽象类，用于提供接口的部分类的实现。当一个派生类继承自该抽象类时，实现即完成。<strong>抽象类</strong>包含抽象方法，抽象方法可被派生类实现。派生类具有更专业的功能。</p><p>请注意，下面是有关抽象类的一些规则：</p><ul><li>您不能创建一个抽象类的实例。</li><li>您不能在一个抽象类外部声明一个抽象方法。</li><li>通过在类定义前面放置关键字 <strong>sealed</strong>，可以将类声明为<strong>密封类</strong>。当一个类被声明为 <strong>sealed</strong> 时，它不能被继承。抽象类不能被声明为 sealed。</li></ul><p>下面的程序演示了一个抽象类：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PolymorphismApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="built_in">int</span> <span class="title">area</span>()</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rectangle</span>:  <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> length;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">int</span> width;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"> <span class="built_in">int</span> a=<span class="number">0</span>, <span class="built_in">int</span> b=<span class="number">0</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = a;</span><br><span class="line">         width = b;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">int</span> <span class="title">area</span> ()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Rectangle 类的面积：&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> (width * length);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">class</span> <span class="title">RectangleTester</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Rectangle r = <span class="keyword">new</span> Rectangle(<span class="number">10</span>, <span class="number">7</span>);</span><br><span class="line">         <span class="built_in">double</span> a = r.area();</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>,a);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Rectangle 类的面积：</span><br><span class="line">面积： <span class="number">70</span></span><br></pre></td></tr></table></figure><p>当有一个定义在类中的函数需要在继承类中实现时，可以使用<strong>虚方法</strong>。</p><p>虚方法是使用关键字 <strong>virtual</strong> 声明的。</p><p>虚方法可以在不同的继承类中有不同的实现。</p><p>对虚方法的调用是在运行时发生的。</p><p>动态多态性是通过 <strong>抽象类</strong> 和 <strong>虚方法</strong> 实现的。</p><p>以下实例创建了 Shape 基类，并创建派生类 Circle、 Rectangle、Triangle， Shape 类提供一个名为 Draw 的虚拟方法，在每个派生类中重写该方法以绘制该类的指定形状。</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> X &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Y &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Height &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Width &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// 虚方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Draw</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;执行基类的画图任务&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Circle</span> : <span class="title">Shape</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Draw</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;画一个圆形&quot;</span>);</span><br><span class="line">        <span class="keyword">base</span>.Draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Rectangle</span> : <span class="title">Shape</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Draw</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;画一个长方形&quot;</span>);</span><br><span class="line">        <span class="keyword">base</span>.Draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title">Triangle</span> : <span class="title">Shape</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Draw</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;画一个三角形&quot;</span>);</span><br><span class="line">        <span class="keyword">base</span>.Draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个 List&lt;Shape&gt; 对象，并向该对象添加 Circle、Triangle 和 Rectangle</span></span><br><span class="line">        <span class="keyword">var</span> shapes = <span class="keyword">new</span> List&lt;Shape&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> Rectangle(),</span><br><span class="line">            <span class="keyword">new</span> Triangle(),</span><br><span class="line">            <span class="keyword">new</span> Circle()</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用 foreach 循环对该列表的派生类进行循环访问，并对其中的每个 Shape 对象调用 Draw 方法</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> shape <span class="keyword">in</span> shapes)</span><br><span class="line">        &#123;</span><br><span class="line">            shape.Draw();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;按下任意键退出。&quot;</span>);</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">画一个长方形</span><br><span class="line">执行基类的画图任务</span><br><span class="line">画一个三角形</span><br><span class="line">执行基类的画图任务</span><br><span class="line">画一个圆形</span><br><span class="line">执行基类的画图任务</span><br><span class="line">按下任意键退出。</span><br></pre></td></tr></table></figure><p>下面的程序演示通过虚方法 area() 来计算不同形状图像的面积：</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">PolymorphismApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">int</span> width, height;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Shape</span>(<span class="params"> <span class="built_in">int</span> a=<span class="number">0</span>, <span class="built_in">int</span> b=<span class="number">0</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         width = a;</span><br><span class="line">         height = b;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="built_in">int</span> <span class="title">area</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;父类的面积：&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rectangle</span>: <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"> <span class="built_in">int</span> a=<span class="number">0</span>, <span class="built_in">int</span> b=<span class="number">0</span></span>): <span class="title">base</span>(<span class="params">a, b</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">int</span> <span class="title">area</span> ()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Rectangle 类的面积：&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> (width * height);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Triangle</span>: <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Triangle</span>(<span class="params"><span class="built_in">int</span> a = <span class="number">0</span>, <span class="built_in">int</span> b = <span class="number">0</span></span>): <span class="title">base</span>(<span class="params">a, b</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">     </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">int</span> <span class="title">area</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Triangle 类的面积：&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> (width * height / <span class="number">2</span>);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Caller</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CallArea</span>(<span class="params">Shape sh</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> a;</span><br><span class="line">         a = sh.area();</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="keyword">class</span> <span class="title">Tester</span></span><br><span class="line">   &#123;</span><br><span class="line">     </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Caller c = <span class="keyword">new</span> Caller();</span><br><span class="line">         Rectangle r = <span class="keyword">new</span> Rectangle(<span class="number">10</span>, <span class="number">7</span>);</span><br><span class="line">         Triangle t = <span class="keyword">new</span> Triangle(<span class="number">10</span>, <span class="number">5</span>);</span><br><span class="line">         c.CallArea(r);</span><br><span class="line">         c.CallArea(t);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Rectangle 类的面积：</span><br><span class="line">面积：70</span><br><span class="line">Triangle 类的面积：</span><br><span class="line">面积：25</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（20）继承</title>
      <link href="/2018/01/29/CSharp/20CSharp_Inheritance/"/>
      <url>/2018/01/29/CSharp/20CSharp_Inheritance/</url>
      
        <content type="html"><![CDATA[<h1 id="C-继承"><a href="#C-继承" class="headerlink" title="C# 继承"></a>C# 继承</h1><p>继承是面向对象程序设计中最重要的概念之一。继承允许我们根据一个类来定义另一个类，这使得创建和维护应用程序变得更容易。同时也有利于重用代码和节省开发时间。</p><p>当创建一个类时，程序员不需要完全重新编写新的数据成员和成员函数，只需要设计一个新的类，继承了已有的类的成员即可。这个已有的类被称为的<strong>基类</strong>，这个新的类被称为<strong>派生类</strong>。</p><p>继承的思想实现了 <strong>属于（IS-A）</strong> 关系。例如，哺乳动物 <strong>属于（IS-A）</strong> 动物，狗 <strong>属于（IS-A）</strong> 哺乳动物，因此狗 <strong>属于（IS-A）</strong> 动物。</p><h1 id="基类和派生类"><a href="#基类和派生类" class="headerlink" title="基类和派生类"></a>基类和派生类</h1><p>一个类可以派生自多个类或接口，这意味着它可以从多个基类或接口继承数据和函数。</p><p>C# 中创建派生类的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;访问修饰符&gt; <span class="keyword">class</span> &lt;基类&gt;</span><br><span class="line">&#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> &lt;派生类&gt; : &lt;基类&gt;</span><br><span class="line">&#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设，有一个基类 Shape，它的派生类是 Rectangle：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">InheritanceApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWidth</span>(<span class="params"><span class="built_in">int</span> w</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span>(<span class="params"><span class="built_in">int</span> h</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         height = h;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">int</span> width;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">int</span> height;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 派生类</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rectangle</span>: <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getArea</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> (width * height);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">class</span> <span class="title">RectangleTester</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Rectangle Rect = <span class="keyword">new</span> Rectangle();</span><br><span class="line"></span><br><span class="line">         Rect.setWidth(<span class="number">5</span>);</span><br><span class="line">         Rect.setHeight(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 打印对象的面积</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;总面积： &#123;0&#125;&quot;</span>,  Rect.getArea());</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">总面积： 35</span><br></pre></td></tr></table></figure><h1 id="基类的初始化"><a href="#基类的初始化" class="headerlink" title="基类的初始化"></a>基类的初始化</h1><p>派生类继承了基类的成员变量和成员方法。因此父类对象应在子类对象创建之前被创建。您可以在成员初始化列表中进行父类的初始化。</p><p>下面的程序演示了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">// 成员变量</span></span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">double</span> length;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">double</span> width;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"><span class="built_in">double</span> l, <span class="built_in">double</span> w</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = l;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> length * width;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;长度： &#123;0&#125;&quot;</span>, length);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;宽度： &#123;0&#125;&quot;</span>, width);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;<span class="comment">//end class Rectangle  </span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">Tabletop</span> : <span class="title">Rectangle</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> cost;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Tabletop</span>(<span class="params"><span class="built_in">double</span> l, <span class="built_in">double</span> w</span>) : <span class="title">base</span>(<span class="params">l, w</span>)</span></span><br><span class="line">      &#123; &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetCost</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">double</span> cost;</span><br><span class="line">         cost = GetArea() * <span class="number">70</span>;</span><br><span class="line">         <span class="keyword">return</span> cost;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">base</span>.Display();</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;成本： &#123;0&#125;&quot;</span>, GetCost());</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Tabletop t = <span class="keyword">new</span> Tabletop(<span class="number">4.5</span>, <span class="number">7.5</span>);</span><br><span class="line">         t.Display();</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">长度： 4.5</span><br><span class="line">宽度： 7.5</span><br><span class="line">面积： 33.75</span><br><span class="line">成本： 2362.5</span><br></pre></td></tr></table></figure><h1 id="C-多重继承"><a href="#C-多重继承" class="headerlink" title="C# 多重继承"></a>C# 多重继承</h1><p>多重继承指的是一个类别可以同时从多于一个父类继承行为与特征的功能。与单一继承相对，单一继承指一个类别只可以继承自一个父类。</p><p><strong>C# 不支持多重继承</strong>。但是，您可以使用接口来实现多重继承。下面的程序演示了这点：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">InheritanceApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWidth</span>(<span class="params"><span class="built_in">int</span> w</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         width = w;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span>(<span class="params"><span class="built_in">int</span> h</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         height = h;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">int</span> width;</span><br><span class="line">      <span class="keyword">protected</span> <span class="built_in">int</span> height;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 基类 PaintCost</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">PaintCost</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="built_in">int</span> <span class="title">getCost</span>(<span class="params"><span class="built_in">int</span> area</span>)</span>;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 派生类</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">Rectangle</span> : <span class="title">Shape</span>, <span class="title">PaintCost</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getArea</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> (width * height);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getCost</span>(<span class="params"><span class="built_in">int</span> area</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> area * <span class="number">70</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">RectangleTester</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Rectangle Rect = <span class="keyword">new</span> Rectangle();</span><br><span class="line">         <span class="built_in">int</span> area;</span><br><span class="line">         Rect.setWidth(<span class="number">5</span>);</span><br><span class="line">         Rect.setHeight(<span class="number">7</span>);</span><br><span class="line">         area = Rect.getArea();</span><br><span class="line">         <span class="comment">// 打印对象的面积</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;总面积： &#123;0&#125;&quot;</span>,  Rect.getArea());</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;油漆总成本： $&#123;0&#125;&quot;</span> , Rect.getCost(area));</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总面积： 35</span><br><span class="line">油漆总成本： $2450</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（19）类（Class）</title>
      <link href="/2018/01/26/CSharp/19CSharp_Class/"/>
      <url>/2018/01/26/CSharp/19CSharp_Class/</url>
      
        <content type="html"><![CDATA[<h1 id="类（Class）"><a href="#类（Class）" class="headerlink" title="类（Class）"></a>类（Class）</h1><p>当你定义一个类时，你定义了一个数据类型的蓝图。这实际上并没有定义任何的数据，但它定义了类的名称意味着什么，也就是说，类的对象由什么组成及在这个对象上可执行什么操作。对象是类的实例。构成类的方法和变量称为类的成员。</p><h1 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h1><p>类的定义是以关键字 <strong>class</strong> 开始，后跟类的名称。类的主体，包含在一对花括号内。下面是类定义的一般形式：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;access specifier&gt; **<span class="keyword">class</span>** <span class="title">class_name</span></span><br><span class="line">&#123;</span><br><span class="line">  *<span class="comment">// member variables*</span></span><br><span class="line">  &lt;access specifier&gt; &lt;data type&gt; variable1;</span><br><span class="line">  &lt;access specifier&gt; &lt;data type&gt; variable2;</span><br><span class="line">  ...</span><br><span class="line">  &lt;access specifier&gt; &lt;data type&gt; variableN;</span><br><span class="line">  *<span class="comment">// member methods*</span></span><br><span class="line">  &lt;access specifier&gt; &lt;**<span class="keyword">return</span>** type&gt; method1(parameter_list)</span><br><span class="line">  &#123;</span><br><span class="line">    *<span class="comment">// method body*</span></span><br><span class="line">  &#125;</span><br><span class="line">  &lt;access specifier&gt; &lt;**<span class="keyword">return</span>** type&gt; method2(parameter_list)</span><br><span class="line">  &#123;</span><br><span class="line">    *<span class="comment">// method body*</span></span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">  &lt;access specifier&gt; &lt;**<span class="keyword">return</span>** type&gt; methodN(parameter_list)</span><br><span class="line">  &#123;</span><br><span class="line">    *<span class="comment">// method body*</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意：</p><ul><li>访问标识符 <access specifier> 指定了对类及其成员的访问规则。如果没有指定，则使用默认的访问标识符。类的默认访问标识符是 <strong>internal</strong>，成员的默认访问标识符是 <strong>private</strong>。</li><li>数据类型 <data type> 指定了变量的类型，返回类型 <return type> 指定了返回的方法返回的数据类型。</li><li>如果要访问类的成员，你要使用点（.）运算符。</li><li>点运算符链接了对象的名称和成员的名称。</li></ul><p>下面的实例说明了目前为止所讨论的概念：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">sing System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BoxApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Box</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">double</span> length;   <span class="comment">// 长度</span></span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">double</span> breadth;  <span class="comment">// 宽度</span></span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">double</span> height;   <span class="comment">// 高度</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Boxtester</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Box Box1 = <span class="keyword">new</span> Box();        <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">            Box Box2 = <span class="keyword">new</span> Box();        <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">            <span class="built_in">double</span> volume = <span class="number">0.0</span>;         <span class="comment">// 体积</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Box1 详述</span></span><br><span class="line">            Box1.height = <span class="number">5.0</span>;</span><br><span class="line">            Box1.length = <span class="number">6.0</span>;</span><br><span class="line">            Box1.breadth = <span class="number">7.0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Box2 详述</span></span><br><span class="line">            Box2.height = <span class="number">10.0</span>;</span><br><span class="line">            Box2.length = <span class="number">12.0</span>;</span><br><span class="line">            Box2.breadth = <span class="number">13.0</span>;</span><br><span class="line">           </span><br><span class="line">            <span class="comment">// Box1 的体积</span></span><br><span class="line">            volume = Box1.height * Box1.length * Box1.breadth;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Box1 的体积： &#123;0&#125;&quot;</span>,  volume);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Box2 的体积</span></span><br><span class="line">            volume = Box2.height * Box2.length * Box2.breadth;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Box2 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Box1 的体积： <span class="number">210</span></span><br><span class="line">Box2 的体积： <span class="number">1560</span></span><br></pre></td></tr></table></figure><h1 id="成员函数和封装"><a href="#成员函数和封装" class="headerlink" title="成员函数和封装"></a>成员函数和封装</h1><p>类的成员函数是一个在类定义中有它的定义或原型的函数，就像其他变量一样。作为类的一个成员，它能在类的任何对象上操作，且能访问该对象的类的所有成员。</p><p>成员变量是对象的属性（从设计角度），且它们保持私有来实现封装。这些变量只能使用公共成员函数来访问。</p><p>让我们使用上面的概念来设置和获取一个类中不同的类成员的值：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">BoxApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Box</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">double</span> length;   <span class="comment">// 长度</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">double</span> breadth;  <span class="comment">// 宽度</span></span><br><span class="line">       <span class="keyword">private</span> <span class="built_in">double</span> height;   <span class="comment">// 高度</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span>(<span class="params"> <span class="built_in">double</span> len </span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">            length = len;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBreadth</span>(<span class="params"> <span class="built_in">double</span> bre </span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">            breadth = bre;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHeight</span>(<span class="params"> <span class="built_in">double</span> hei </span>)</span></span><br><span class="line">       &#123;</span><br><span class="line">            height = hei;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getVolume</span>()</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">return</span> length * breadth * height;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Boxtester</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Box Box1 = <span class="keyword">new</span> Box();        <span class="comment">// 声明 Box1，类型为 Box</span></span><br><span class="line">            Box Box2 = <span class="keyword">new</span> Box();        <span class="comment">// 声明 Box2，类型为 Box</span></span><br><span class="line">            <span class="built_in">double</span> volume;               <span class="comment">// 体积</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Box1 详述</span></span><br><span class="line">            Box1.setLength(<span class="number">6.0</span>);</span><br><span class="line">            Box1.setBreadth(<span class="number">7.0</span>);</span><br><span class="line">            Box1.setHeight(<span class="number">5.0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Box2 详述</span></span><br><span class="line">            Box2.setLength(<span class="number">12.0</span>);</span><br><span class="line">            Box2.setBreadth(<span class="number">13.0</span>);</span><br><span class="line">            Box2.setHeight(<span class="number">10.0</span>);</span><br><span class="line">       </span><br><span class="line">            <span class="comment">// Box1 的体积</span></span><br><span class="line">            volume = Box1.getVolume();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Box1 的体积： &#123;0&#125;&quot;</span> ,volume);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Box2 的体积</span></span><br><span class="line">            volume = Box2.getVolume();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Box2 的体积： &#123;0&#125;&quot;</span>, volume);</span><br><span class="line">           </span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Box1 的体积： 210</span><br><span class="line">Box2 的体积： 1560</span><br></pre></td></tr></table></figure><h1 id="C-中的构造函数"><a href="#C-中的构造函数" class="headerlink" title="C# 中的构造函数"></a>C# 中的构造函数</h1><p>类的 <strong>构造函数</strong> 是类的一个特殊的成员函数，当创建类的新对象时执行。</p><p>构造函数的名称与类的名称完全相同，它没有任何返回类型。</p><p>下面的实例说明了构造函数的概念：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LineApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Line</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> length;   <span class="comment">// 线条的长度</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Line</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;对象已创建&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span>(<span class="params"> <span class="built_in">double</span> len </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = len;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getLength</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> length;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Line line = <span class="keyword">new</span> Line();    </span><br><span class="line">         <span class="comment">// 设置线条长度</span></span><br><span class="line">         line.setLength(<span class="number">6.0</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;线条的长度： &#123;0&#125;&quot;</span>, line.getLength());</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">对象已创建</span><br><span class="line">线条的长度： <span class="number">6</span></span><br></pre></td></tr></table></figure><p><strong>默认的构造函数</strong>没有任何参数。但是如果你需要一个带有参数的构造函数可以有参数，这种构造函数叫做<strong>参数化构造函数</strong>。这种技术可以帮助你在创建对象的同时给对象赋初始值，具体请看下面实例：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LineApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Line</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> length;   <span class="comment">// 线条的长度</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Line</span>(<span class="params"><span class="built_in">double</span> len</span>)  <span class="comment">// 参数化构造函数</span></span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;对象已创建，length = &#123;0&#125;&quot;</span>, len);</span><br><span class="line">         length = len;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span>(<span class="params"> <span class="built_in">double</span> len </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = len;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getLength</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> length;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Line line = <span class="keyword">new</span> Line(<span class="number">10.0</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;线条的长度： &#123;0&#125;&quot;</span>, line.getLength());</span><br><span class="line">         <span class="comment">// 设置线条长度</span></span><br><span class="line">         line.setLength(<span class="number">6.0</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;线条的长度： &#123;0&#125;&quot;</span>, line.getLength());</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对象已创建，length = 10</span><br><span class="line">线条的长度： 10</span><br><span class="line">线条的长度： 6</span><br></pre></td></tr></table></figure><h1 id="C-中的析构函数"><a href="#C-中的析构函数" class="headerlink" title="C# 中的析构函数"></a>C# 中的析构函数</h1><p>类的 <strong>析构函数</strong> 是类的一个特殊的成员函数，当类的对象超出范围时执行。</p><p>析构函数的名称是在类的名称前加上一个波浪形（~）作为前缀，它不返回值，也不带任何参数。</p><p>析构函数用于在结束程序（比如关闭文件、释放内存等）之前释放资源。析构函数不能继承或重载。</p><p>下面的实例说明了析构函数的概念：</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LineApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">Line</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="built_in">double</span> length;   <span class="comment">// 线条的长度</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">Line</span>()  <span class="comment">// 构造函数</span></span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;对象已创建&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      ~Line() <span class="comment">//析构函数</span></span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;对象已删除&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLength</span>(<span class="params"> <span class="built_in">double</span> len </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         length = len;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getLength</span>()</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">return</span> length;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         Line line = <span class="keyword">new</span> Line();</span><br><span class="line">         <span class="comment">// 设置线条长度</span></span><br><span class="line">         line.setLength(<span class="number">6.0</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;线条的长度： &#123;0&#125;&quot;</span>, line.getLength());          </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">对象已创建</span><br><span class="line">线条的长度： <span class="number">6</span></span><br><span class="line">对象已删除</span><br></pre></td></tr></table></figure><h1 id="C-类的静态成员-static"><a href="#C-类的静态成员-static" class="headerlink" title="C# 类的静态成员(static)"></a>C# 类的静态成员(static)</h1><p>我们可以使用 <strong>static</strong> 关键字把类成员定义为静态的。当我们声明一个类成员为静态时，意味着无论有多少个类的对象被创建，只会有一个该静态成员的副本。</p><p>关键字 <strong>static</strong> 意味着类中只有一个该成员的实例。静态变量用于定义常量，因为它们的值可以通过直接调用类而不需要创建类的实例来获取。静态变量可在成员函数或类的定义外部进行初始化。你也可以在类的定义内部初始化静态变量。</p><p>下面的实例演示了<strong>静态变量</strong>的用法：</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StaticVarApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StaticVar</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> num;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">count</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getNum</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StaticTester</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            StaticVar s1 = <span class="keyword">new</span> StaticVar();</span><br><span class="line">            StaticVar s2 = <span class="keyword">new</span> StaticVar();</span><br><span class="line">            s1.count();</span><br><span class="line">            s1.count();</span><br><span class="line">            s1.count();</span><br><span class="line">            s2.count();</span><br><span class="line">            s2.count();</span><br><span class="line">            s2.count();        </span><br><span class="line">            Console.WriteLine(<span class="string">&quot;s1 的变量 num： &#123;0&#125;&quot;</span>, s1.getNum());</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;s2 的变量 num： &#123;0&#125;&quot;</span>, s2.getNum());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 的变量 num： 6</span><br><span class="line">s2 的变量 num： 6</span><br></pre></td></tr></table></figure><p>你也可以把一个<strong>成员函数</strong>声明为 <strong>static</strong>。这样的函数只能访问静态变量。静态函数在对象被创建之前就已经存在。下面的实例演示了<strong>静态函数</strong>的用法：</p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StaticVarApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StaticVar</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> num;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">count</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            num++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">getNum</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StaticTester</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            StaticVar s = <span class="keyword">new</span> StaticVar();</span><br><span class="line">            s.count();</span><br><span class="line">            s.count();</span><br><span class="line">            s.count();                  </span><br><span class="line">            Console.WriteLine(<span class="string">&quot;变量 num： &#123;0&#125;&quot;</span>, StaticVar.getNum());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量 num： <span class="number">3</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（18）枚举（Enum）</title>
      <link href="/2018/01/25/CSharp/18CSharp_Enum/"/>
      <url>/2018/01/25/CSharp/18CSharp_Enum/</url>
      
        <content type="html"><![CDATA[<h1 id="C-枚举（Enum）"><a href="#C-枚举（Enum）" class="headerlink" title="C# 枚举（Enum）"></a>C# 枚举（Enum）</h1><p>枚举是一组命名整型常量。枚举类型是使用 <strong>enum</strong> 关键字声明的。</p><p>C# 枚举是值类型。换句话说，枚举包含自己的值，且不能继承或传递继承。</p><h1 id="声明-enum-变量"><a href="#声明-enum-变量" class="headerlink" title="声明 enum 变量"></a>声明 enum 变量</h1><p>声明枚举的一般语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enum</span> &lt;enum_name&gt;</span><br><span class="line">&#123; </span><br><span class="line">    enumeration list </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中，</p><ul><li><em>enum_name</em> 指定枚举的类型名称。</li><li><em>enumeration list</em> 是一个用逗号分隔的标识符列表。</li></ul><p>枚举列表中的每个符号代表一个整数值，一个比它前面的符号大的整数值。默认情况下，第一个枚举符号的值是 0.例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enum</span> Days &#123; Sun, Mon, tue, Wed, thu, Fri, Sat &#125;;</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面的实例演示了枚举变量的用法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EnumTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">enum</span> Day &#123; Sun, Mon, Tue, Wed, Thu, Fri, Sat &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> x = (<span class="built_in">int</span>)Day.Sun;</span><br><span class="line">        <span class="built_in">int</span> y = (<span class="built_in">int</span>)Day.Fri;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Sun = &#123;0&#125;&quot;</span>, x);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Fri = &#123;0&#125;&quot;</span>, y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sun = <span class="number">0</span></span><br><span class="line">Fri = <span class="number">5</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（17）结构体（Struct）</title>
      <link href="/2018/01/24/CSharp/17CSharp_Struct/"/>
      <url>/2018/01/24/CSharp/17CSharp_Struct/</url>
      
        <content type="html"><![CDATA[<h1 id="结构体（Struct）"><a href="#结构体（Struct）" class="headerlink" title="结构体（Struct）"></a>结构体（Struct）</h1><p>在 C# 中，结构体是值类型数据结构。它使得一个单一变量可以存储各种数据类型的相关数据。<strong>struct</strong> 关键字用于创建结构体。</p><p>结构体是用来代表一个记录。假设您想跟踪图书馆中书的动态。您可能想跟踪每本书的以下属性：</p><ul><li>Title</li><li>Author</li><li>Subject</li><li>Book ID</li></ul><h1 id="定义结构体"><a href="#定义结构体" class="headerlink" title="定义结构体"></a>定义结构体</h1><p>为了定义一个结构体，您必须使用 struct 语句。struct 语句为程序定义了一个带有多个成员的新的数据类型。</p><p>例如，您可以按照如下的方式声明 Book 结构：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> Books</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> title;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> author;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> subject;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">int</span> book_id;</span><br><span class="line">&#125;;  </span><br></pre></td></tr></table></figure><p>下面的程序演示了结构的用法：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line">     </span><br><span class="line"><span class="keyword">struct</span> Books</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> title;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> author;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> subject;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">int</span> book_id;</span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">testStructure</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      Books Book1;        <span class="comment">/* 声明 Book1，类型为 Books */</span></span><br><span class="line">      Books Book2;        <span class="comment">/* 声明 Book2，类型为 Books */</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 1 详述 */</span></span><br><span class="line">      Book1.title = <span class="string">&quot;C Programming&quot;</span>;</span><br><span class="line">      Book1.author = <span class="string">&quot;Nuha Ali&quot;</span>;</span><br><span class="line">      Book1.subject = <span class="string">&quot;C Programming Tutorial&quot;</span>;</span><br><span class="line">      Book1.book_id = <span class="number">6495407</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 2 详述 */</span></span><br><span class="line">      Book2.title = <span class="string">&quot;Telecom Billing&quot;</span>;</span><br><span class="line">      Book2.author = <span class="string">&quot;Zara Ali&quot;</span>;</span><br><span class="line">      Book2.subject =  <span class="string">&quot;Telecom Billing Tutorial&quot;</span>;</span><br><span class="line">      Book2.book_id = <span class="number">6495700</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book1 信息 */</span></span><br><span class="line">      Console.WriteLine( <span class="string">&quot;Book 1 title : &#123;0&#125;&quot;</span>, Book1.title);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 1 author : &#123;0&#125;&quot;</span>, Book1.author);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 1 subject : &#123;0&#125;&quot;</span>, Book1.subject);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 1 book_id :&#123;0&#125;&quot;</span>, Book1.book_id);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book2 信息 */</span></span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 title : &#123;0&#125;&quot;</span>, Book2.title);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 author : &#123;0&#125;&quot;</span>, Book2.author);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 subject : &#123;0&#125;&quot;</span>, Book2.subject);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book 2 book_id : &#123;0&#125;&quot;</span>, Book2.book_id);      </span><br><span class="line"></span><br><span class="line">      Console.ReadKey();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Book 1 title : C Programming</span><br><span class="line">Book 1 author : Nuha Ali</span><br><span class="line">Book 1 subject : C Programming Tutorial</span><br><span class="line">Book 1 book_id : 6495407</span><br><span class="line">Book 2 title : Telecom Billing</span><br><span class="line">Book 2 author : Zara Ali</span><br><span class="line">Book 2 subject : Telecom Billing Tutorial</span><br><span class="line">Book 2 book_id : 6495700</span><br></pre></td></tr></table></figure><h1 id="C-结构的特点"><a href="#C-结构的特点" class="headerlink" title="C# 结构的特点"></a>C# 结构的特点</h1><p>您已经用了一个简单的名为 Books 的结构。在 C# 中的结构与传统的 C 或 C++ 中的结构不同。C# 中的结构有以下特点：</p><ul><li>结构可带有方法、字段、索引、属性、运算符方法和事件。</li><li>结构可定义构造函数，但不能定义析构函数。但是，您不能为结构定义无参构造函数。无参构造函数(默认)是自动定义的，且不能被改变。</li><li>与类不同，结构不能继承其他的结构或类。</li><li>结构不能作为其他结构或类的基础结构。</li><li>结构可实现一个或多个接口。</li><li>结构成员不能指定为 abstract、virtual 或 protected。</li><li>当您使用 <strong>New</strong> 操作符创建一个结构对象时，会调用适当的构造函数来创建结构。与类不同，结构可以不使用 New 操作符即可被实例化。</li><li>如果不使用 New 操作符，只有在所有的字段都被初始化之后，字段才被赋值，对象才被使用。</li></ul><h1 id="类-vs-结构"><a href="#类-vs-结构" class="headerlink" title="类 vs 结构"></a>类 vs 结构</h1><p>类和结构有以下几个基本的不同点：</p><ul><li>类是引用类型，结构是值类型。</li><li>结构不支持继承。</li><li>结构不能声明默认的构造函数。</li></ul><p>针对上述讨论，让我们重写前面的实例：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line">     </span><br><span class="line"><span class="keyword">struct</span> Books</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> title;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> author;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">string</span> subject;</span><br><span class="line">   <span class="keyword">private</span> <span class="built_in">int</span> book_id;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValues</span>(<span class="params"><span class="built_in">string</span> t, <span class="built_in">string</span> a, <span class="built_in">string</span> s, <span class="built_in">int</span> id</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">      title = t;</span><br><span class="line">      author = a;</span><br><span class="line">      subject = s;</span><br><span class="line">      book_id =id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span>()</span></span><br><span class="line">   &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Title : &#123;0&#125;&quot;</span>, title);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Author : &#123;0&#125;&quot;</span>, author);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Subject : &#123;0&#125;&quot;</span>, subject);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;Book_id :&#123;0&#125;&quot;</span>, book_id);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">testStructure</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">      Books Book1 = <span class="keyword">new</span> Books(); <span class="comment">/* 声明 Book1，类型为 Books */</span></span><br><span class="line">      Books Book2 = <span class="keyword">new</span> Books(); <span class="comment">/* 声明 Book2，类型为 Books */</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 1 详述 */</span></span><br><span class="line">      Book1.setValues(<span class="string">&quot;C Programming&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Nuha Ali&quot;</span>, <span class="string">&quot;C Programming Tutorial&quot;</span>,<span class="number">6495407</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* book 2 详述 */</span></span><br><span class="line">      Book2.setValues(<span class="string">&quot;Telecom Billing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Zara Ali&quot;</span>, <span class="string">&quot;Telecom Billing Tutorial&quot;</span>, <span class="number">6495700</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book1 信息 */</span></span><br><span class="line">      Book1.display();</span><br><span class="line"></span><br><span class="line">      <span class="comment">/* 打印 Book2 信息 */</span></span><br><span class="line">      Book2.display();</span><br><span class="line"></span><br><span class="line">      Console.ReadKey();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Title : C Programming</span><br><span class="line">Author : Nuha Ali</span><br><span class="line">Subject : C Programming Tutorial</span><br><span class="line">Book_id : <span class="number">6495407</span></span><br><span class="line">Title : Telecom Billing</span><br><span class="line">Author : Zara Ali</span><br><span class="line">Subject : Telecom Billing Tutorial</span><br><span class="line">Book_id : <span class="number">6495700</span></span><br></pre></td></tr></table></figure><h2 id="结构和类的区别："><a href="#结构和类的区别：" class="headerlink" title="结构和类的区别："></a>结构和类的区别：</h2><ol><li>结构是值类型，它在栈中分配空间；而类是引用类型，它在堆中分配空间，栈中保存的只是引用。</li><li>结构类型直接存储成员数据，让其他类的数据位于堆中，位于栈中的变量保存的是指向堆中数据对象的引用。<br>C# 中的简单类型，如int、double、bool等都是结构类型。如果需要的话，甚至可以使用结构类型结合运算符运算重载，再为 C# 语言创建出一种新的值类型来。</li></ol><p>由于结构是值类型，并且直接存储数据，因此在一个对象的主要成员为数据且数据量不大的情况下，使用结构会带来更好的性能。</p><p>因为结构是值类型，因此在为结构分配内存，或者当结构超出了作用域被删除时，性能会非常好，因为他们将内联或者保存在堆栈中。当把一个结构类型的变量赋值给另一个结构时，对性能的影响取决于结构的大小，如果结构的数据成员非常多而且复杂，就会造成损失，接下来使用一段代码来说明这个问题。</p><ol start="3"><li>结构体中声明的字段无法赋予初值，类可以:</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> test001</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> aa = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行以上代码将出现“结构中不能实例属性或字段初始值设定”的报错，而类中无此限制，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">test002</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> aa = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构和类的适用场合分析："><a href="#结构和类的适用场合分析：" class="headerlink" title="结构和类的适用场合分析："></a>结构和类的适用场合分析：</h2><p>首先明确，类的对象是存储在堆空间中，结构存储在栈中。堆空间大，但访问速度较慢，栈空间小，访问速度相对更快。故而，当我们描述一个轻量级对象的时候，结构可提高效率，成本更低。当然，这也得从需求出发，假如我们在传值的时候希望传递的是对象的引用地址而不是对象的拷贝，就应该使用类了。</p><ol><li>当堆栈的空间很有限，且有大量的逻辑对象时，创建类要比创建结构好一些；</li><li>对于点、矩形和颜色这样的轻量对象，假如要声明一个含有许多个颜色对象的数组，则CLR需要为每个对象分配内存，在这种情况下，使用结构的成本较低；</li><li>在表现抽象和多级别的对象层次时，类是最好的选择，因为结构不支持继承。</li><li>大多数情况下，目标类型只是含有一些数据，或者以数据为主。</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（16）字符串（String）</title>
      <link href="/2018/01/23/CSharp/16CSharp_String/"/>
      <url>/2018/01/23/CSharp/16CSharp_String/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a>字符串（String）</h1><p>在 C# 中，您可以使用字符数组来表示字符串，但是，更常见的做法是使用 <strong>string</strong> 关键字来声明一个字符串变量。string 关键字是 <strong>System.String</strong> 类的别名。</p><h1 id="创建-String-对象"><a href="#创建-String-对象" class="headerlink" title="创建 String 对象"></a>创建 String 对象</h1><p>您可以使用以下方法之一来创建 string 对象：</p><ul><li>通过给 String 变量指定一个字符串</li><li>通过使用 String 类构造函数</li><li>通过使用字符串串联运算符（ + ）</li><li>通过检索属性或调用一个返回字符串的方法</li><li>通过格式化方法来转换一个值或对象为它的字符串表示形式</li></ul><p>下面的实例演示了这点：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StringApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">//字符串，字符串连接</span></span><br><span class="line">            <span class="built_in">string</span> fname, lname;</span><br><span class="line">            fname = <span class="string">&quot;Rowan&quot;</span>;</span><br><span class="line">            lname = <span class="string">&quot;Atkinson&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> fullname = fname + lname;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Full Name: &#123;0&#125;&quot;</span>, fullname);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通过使用 string 构造函数</span></span><br><span class="line">            <span class="built_in">char</span>[] letters = &#123; <span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span> &#125;;</span><br><span class="line">            <span class="built_in">string</span> greetings = <span class="keyword">new</span> <span class="built_in">string</span>(letters);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Greetings: &#123;0&#125;&quot;</span>, greetings);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//方法返回字符串</span></span><br><span class="line">            <span class="built_in">string</span>[] sarray = &#123; <span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;From&quot;</span>, <span class="string">&quot;Tutorials&quot;</span>, <span class="string">&quot;Point&quot;</span> &#125;;</span><br><span class="line">            <span class="built_in">string</span> message = String.Join(<span class="string">&quot; &quot;</span>, sarray);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Message: &#123;0&#125;&quot;</span>, message);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//用于转化值的格式化方法</span></span><br><span class="line">            DateTime waiting = <span class="keyword">new</span> DateTime(<span class="number">2012</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">17</span>, <span class="number">58</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">string</span> chat = String.Format(<span class="string">&quot;Message sent at &#123;0:t&#125; on &#123;0:D&#125;&quot;</span>,</span><br><span class="line">            waiting);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Message: &#123;0&#125;&quot;</span>, chat);</span><br><span class="line">            Console.ReadKey() ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Full Name: RowanAtkinson</span><br><span class="line">Greetings: Hello</span><br><span class="line">Message: Hello From Tutorials Point</span><br><span class="line">Message: Message sent at 17:58 on Wednesday, 10 October 2012</span><br></pre></td></tr></table></figure><h1 id="String-类的属性"><a href="#String-类的属性" class="headerlink" title="String 类的属性"></a>String 类的属性</h1><p>String 类有以下两个属性：</p><table><thead><tr><th align="left">序号</th><th align="left">属性名称 &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>Chars</strong> 在当前 <em>String</em> 对象中获取 <em>Char</em> 对象的指定位置。</td></tr><tr><td align="left">2</td><td align="left"><strong>Length</strong> 在当前的 <em>String</em> 对象中获取字符数。</td></tr></tbody></table><h1 id="String-类的方法"><a href="#String-类的方法" class="headerlink" title="String 类的方法"></a>String 类的方法</h1><p>String 类有许多方法用于 string 对象的操作。下面的表格提供了一些最常用的方法：</p><table><thead><tr><th align="left">序号</th><th align="left">方法名称 &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>public static int Compare( string strA, string strB )</strong> 比较两个指定的 string 对象，并返回一个表示它们在排列顺序中相对位置的整数。该方法区分大小写。</td></tr><tr><td align="left">2</td><td align="left"><strong>public static int Compare( string strA, string strB, bool ignoreCase )</strong> 比较两个指定的 string 对象，并返回一个表示它们在排列顺序中相对位置的整数。但是，如果布尔参数为真时，该方法不区分大小写。</td></tr><tr><td align="left">3</td><td align="left"><strong>public static string Concat( string str0, string str1 )</strong> 连接两个 string 对象。</td></tr><tr><td align="left">4</td><td align="left"><strong>public static string Concat( string str0, string str1, string str2 )</strong> 连接三个 string 对象。</td></tr><tr><td align="left">5</td><td align="left"><strong>public static string Concat( string str0, string str1, string str2, string str3 )</strong> 连接四个 string 对象。</td></tr><tr><td align="left">6</td><td align="left"><strong>public bool Contains( string value )</strong> 返回一个表示指定 string 对象是否出现在字符串中的值。</td></tr><tr><td align="left">7</td><td align="left"><strong>public static string Copy( string str )</strong> 创建一个与指定字符串具有相同值的新的 String 对象。</td></tr><tr><td align="left">8</td><td align="left"><strong>public void CopyTo( int sourceIndex, char[] destination, int destinationIndex, int count )</strong> 从 string 对象的指定位置开始复制指定数量的字符到 Unicode 字符数组中的指定位置。</td></tr><tr><td align="left">9</td><td align="left"><strong>public bool EndsWith( string value )</strong> 判断 string 对象的结尾是否匹配指定的字符串。</td></tr><tr><td align="left">10</td><td align="left"><strong>public bool Equals( string value )</strong> 判断当前的 string 对象是否与指定的 string 对象具有相同的值。</td></tr><tr><td align="left">11</td><td align="left"><strong>public static bool Equals( string a, string b )</strong> 判断两个指定的 string 对象是否具有相同的值。</td></tr><tr><td align="left">12</td><td align="left"><strong>public static string Format( string format, Object arg0 )</strong> 把指定字符串中一个或多个格式项替换为指定对象的字符串表示形式。</td></tr><tr><td align="left">13</td><td align="left"><strong>public int IndexOf( char value )</strong> 返回指定 Unicode 字符在当前字符串中第一次出现的索引，索引从 0 开始。</td></tr><tr><td align="left">14</td><td align="left"><strong>public int IndexOf( string value )</strong> 返回指定字符串在该实例中第一次出现的索引，索引从 0 开始。</td></tr><tr><td align="left">15</td><td align="left"><strong>public int IndexOf( char value, int startIndex )</strong> 返回指定 Unicode 字符从该字符串中指定字符位置开始搜索第一次出现的索引，索引从 0 开始。</td></tr><tr><td align="left">16</td><td align="left"><strong>public int IndexOf( string value, int startIndex )</strong> 返回指定字符串从该实例中指定字符位置开始搜索第一次出现的索引，索引从 0 开始。</td></tr><tr><td align="left">17</td><td align="left"><strong>public int IndexOfAny( char[] anyOf )</strong> 返回某一个指定的 Unicode 字符数组中任意字符在该实例中第一次出现的索引，索引从 0 开始。</td></tr><tr><td align="left">18</td><td align="left"><strong>public int IndexOfAny( char[] anyOf, int startIndex )</strong> 返回某一个指定的 Unicode 字符数组中任意字符从该实例中指定字符位置开始搜索第一次出现的索引，索引从 0 开始。</td></tr><tr><td align="left">19</td><td align="left"><strong>public string Insert( int startIndex, string value )</strong> 返回一个新的字符串，其中，指定的字符串被插入在当前 string 对象的指定索引位置。</td></tr><tr><td align="left">20</td><td align="left"><strong>public static bool IsNullOrEmpty( string value )</strong> 指示指定的字符串是否为 null 或者是否为一个空的字符串。</td></tr><tr><td align="left">21</td><td align="left"><strong>public static string Join( string separator, string[] value )</strong> 连接一个字符串数组中的所有元素，使用指定的分隔符分隔每个元素。</td></tr><tr><td align="left">22</td><td align="left"><strong>public static string Join( string separator, string[] value, int startIndex, int count )</strong> 连接一个字符串数组中的指定位置开始的指定元素，使用指定的分隔符分隔每个元素。</td></tr><tr><td align="left">23</td><td align="left"><strong>public int LastIndexOf( char value )</strong> 返回指定 Unicode 字符在当前 string 对象中最后一次出现的索引位置，索引从 0 开始。</td></tr><tr><td align="left">24</td><td align="left"><strong>public int LastIndexOf( string value )</strong> 返回指定字符串在当前 string 对象中最后一次出现的索引位置，索引从 0 开始。</td></tr><tr><td align="left">25</td><td align="left"><strong>public string Remove( int startIndex )</strong> 移除当前实例中的所有字符，从指定位置开始，一直到最后一个位置为止，并返回字符串。</td></tr><tr><td align="left">26</td><td align="left"><strong>public string Remove( int startIndex, int count )</strong> 从当前字符串的指定位置开始移除指定数量的字符，并返回字符串。</td></tr><tr><td align="left">27</td><td align="left"><strong>public string Replace( char oldChar, char newChar )</strong> 把当前 string 对象中，所有指定的 Unicode 字符替换为另一个指定的 Unicode 字符，并返回新的字符串。</td></tr><tr><td align="left">28</td><td align="left"><strong>public string Replace( string oldValue, string newValue )</strong> 把当前 string 对象中，所有指定的字符串替换为另一个指定的字符串，并返回新的字符串。</td></tr><tr><td align="left">29</td><td align="left"><strong>public string[] Split( params char[] separator )</strong> 返回一个字符串数组，包含当前的 string 对象中的子字符串，子字符串是使用指定的 Unicode 字符数组中的元素进行分隔的。</td></tr><tr><td align="left">30</td><td align="left"><strong>public string[] Split( char[] separator, int count )</strong> 返回一个字符串数组，包含当前的 string 对象中的子字符串，子字符串是使用指定的 Unicode 字符数组中的元素进行分隔的。int 参数指定要返回的子字符串的最大数目。</td></tr><tr><td align="left">31</td><td align="left"><strong>public bool StartsWith( string value )</strong> 判断字符串实例的开头是否匹配指定的字符串。</td></tr><tr><td align="left">32</td><td align="left"><strong>public char[] ToCharArray()</strong> 返回一个带有当前 string 对象中所有字符的 Unicode 字符数组。</td></tr><tr><td align="left">33</td><td align="left"><strong>public char[] ToCharArray( int startIndex, int length )</strong> 返回一个带有当前 string 对象中所有字符的 Unicode 字符数组，从指定的索引开始，直到指定的长度为止。</td></tr><tr><td align="left">34</td><td align="left"><strong>public string ToLower()</strong> 把字符串转换为小写并返回。</td></tr><tr><td align="left">35</td><td align="left"><strong>public string ToUpper()</strong> 把字符串转换为大写并返回。</td></tr><tr><td align="left">36</td><td align="left"><strong>public string Trim()</strong> 移除当前 String 对象中的所有前导空白字符和后置空白字符。</td></tr></tbody></table><p>上面的方法列表并不详尽，请访问 MSDN 库，查看完整的方法列表和 String 类构造函数。</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>下面的实例演示了上面提到的一些方法：</p><p><strong>比较字符串</strong></p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StringApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">StringProg</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span> str1 = <span class="string">&quot;This is test&quot;</span>;</span><br><span class="line">         <span class="built_in">string</span> str2 = <span class="string">&quot;This is text&quot;</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (String.Compare(str1, str2) == <span class="number">0</span>)</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(str1 + <span class="string">&quot; and &quot;</span> + str2 +  <span class="string">&quot; are equal.&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(str1 + <span class="string">&quot; and &quot;</span> + str2 + <span class="string">&quot; are not equal.&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey() ;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is test and This is text are not equal.</span><br></pre></td></tr></table></figure><p><strong>字符串包含字符串：</strong></p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StringApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">StringProg</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span> str = <span class="string">&quot;This is test&quot;</span>;</span><br><span class="line">         <span class="keyword">if</span> (str.Contains(<span class="string">&quot;test&quot;</span>))</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;The sequence &#x27;test&#x27; was found.&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey() ;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The sequence &#x27;test&#x27; was found.</span><br></pre></td></tr></table></figure><p><strong>获取子字符串：</strong></p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StringApplication</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">StringProg</span></span><br><span class="line">        &#123;</span><br><span class="line">                <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="built_in">string</span> str = <span class="string">&quot;Last night I dreamt of San Pedro&quot;</span>;</span><br><span class="line">                        Console.WriteLine(str);</span><br><span class="line">                        <span class="built_in">string</span> substr = str.Substring(<span class="number">23</span>);</span><br><span class="line">                        Console.WriteLine(substr);</span><br><span class="line">                        Console.ReadKey() ;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Last night I dreamt of San Pedro</span><br><span class="line">San Pedro</span><br></pre></td></tr></table></figure><p><strong>连接字符串：</strong></p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">StringApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">StringProg</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">string</span>[] starray = <span class="keyword">new</span> <span class="built_in">string</span>[]&#123;<span class="string">&quot;Down the way nights are dark&quot;</span>,</span><br><span class="line">         <span class="string">&quot;And the sun shines daily on the mountain top&quot;</span>,</span><br><span class="line">         <span class="string">&quot;I took a trip on a sailing ship&quot;</span>,</span><br><span class="line">         <span class="string">&quot;And when I reached Jamaica&quot;</span>,</span><br><span class="line">         <span class="string">&quot;I made a stop&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">         <span class="built_in">string</span> str = String.Join(<span class="string">&quot;\n&quot;</span>, starray);</span><br><span class="line">         Console.WriteLine(str);</span><br><span class="line">         Console.ReadKey() ;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Down the way nights are dark</span><br><span class="line">And the sun shines daily <span class="keyword">on</span> the mountain top</span><br><span class="line">I took a trip <span class="keyword">on</span> a sailing ship</span><br><span class="line">And <span class="keyword">when</span> I reached Jamaica</span><br><span class="line">I made a stop</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（15）数组（Array）</title>
      <link href="/2018/01/22/CSharp/15CSharp_Array/"/>
      <url>/2018/01/22/CSharp/15CSharp_Array/</url>
      
        <content type="html"><![CDATA[<h1 id="数组（Array）"><a href="#数组（Array）" class="headerlink" title="数组（Array）"></a>数组（Array）</h1><p>数组是一个存储相同类型元素的固定大小的顺序集合。数组是用来存储数据的集合，通常认为数组是一个同一类型变量的集合。</p><p>声明数组变量并不是声明 number0、number1、…、number99 一个个单独的变量，而是声明一个就像 numbers 这样的变量，然后使用 numbers[0]、numbers[1]、…、numbers[99] 来表示一个个单独的变量。数组中某个指定的元素是通过索引来访问的。</p><p>所有的数组都是由连续的内存位置组成的。最低的地址对应第一个元素，最高的地址对应最后一个元素。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/arrays.jpg" alt="C# 中的数组"></p><h2 id="声明数组"><a href="#声明数组" class="headerlink" title="声明数组"></a>声明数组</h2><p>在 C# 中声明一个数组，您可以使用下面的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datatype[] arrayName;</span><br></pre></td></tr></table></figure><p>其中，</p><ul><li><em>datatype</em> 用于指定被存储在数组中的元素的类型。</li><li><em>[ ]</em> 指定数组的秩（维度）。秩指定数组的大小。</li><li><em>arrayName</em> 指定数组的名称。</li></ul><p>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] balance;</span><br></pre></td></tr></table></figure><h2 id="初始化数组"><a href="#初始化数组" class="headerlink" title="初始化数组"></a>初始化数组</h2><p>声明一个数组不会在内存中初始化数组。当初始化数组变量时，您可以赋值给数组。</p><p>数组是一个引用类型，所以您需要使用 <strong>new</strong> 关键字来创建数组的实例。</p><p>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] balance = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><h2 id="赋值给数组"><a href="#赋值给数组" class="headerlink" title="赋值给数组"></a>赋值给数组</h2><p>您可以通过使用索引号赋值给一个单独的数组元素，比如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] balance = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">10</span>];</span><br><span class="line">balance[<span class="number">0</span>] = <span class="number">4500.0</span>;</span><br></pre></td></tr></table></figure><p>您可以在声明数组的同时给数组赋值，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">double[] balance = &#123; 2340.0, 4523.69, 3421.0&#125;;</span><br></pre></td></tr></table></figure><p>您也可以创建并初始化一个数组，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int [] marks = new int[5]  &#123; 99,  98, 92, 97, 95&#125;;</span><br></pre></td></tr></table></figure><p>在上述情况下，你也可以省略数组的大小，比如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span><br></pre></td></tr></table></figure><p>您也可以赋值一个数组变量到另一个目标数组变量中。在这种情况下，目标和源会指向相同的内存位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span><br><span class="line">int[] score = marks;</span><br></pre></td></tr></table></figure><p>当您创建一个数组时，C# 编译器会根据数组类型隐式初始化每个数组元素为一个默认值。例如，int 数组的所有元素都会被初始化为 0。</p><h2 id="访问数组元素"><a href="#访问数组元素" class="headerlink" title="访问数组元素"></a>访问数组元素</h2><p>元素是通过带索引的数组名称来访问的。这是通过把元素的索引放置在数组名称后的方括号中来实现的。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> salary = balance[<span class="number">9</span>];</span><br></pre></td></tr></table></figure><p>下面是一个实例，使用上面提到的三个概念，即声明、赋值、访问数组：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">MyArray</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> []  n = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>]; <span class="comment">/* n 是一个带有 10 个整数的数组 */</span></span><br><span class="line">         <span class="built_in">int</span> i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 初始化数组 n 中的元素 */</span>        </span><br><span class="line">         <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ )</span><br><span class="line">         &#123;</span><br><span class="line">            n[ i ] = i + <span class="number">100</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 输出每个数组元素的值 */</span></span><br><span class="line">         <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++ )</span><br><span class="line">         &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Element[&#123;0&#125;] = &#123;1&#125;&quot;</span>, j, n[j]);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Element[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line">Element[<span class="number">1</span>] = <span class="number">101</span></span><br><span class="line">Element[<span class="number">2</span>] = <span class="number">102</span></span><br><span class="line">Element[<span class="number">3</span>] = <span class="number">103</span></span><br><span class="line">Element[<span class="number">4</span>] = <span class="number">104</span></span><br><span class="line">Element[<span class="number">5</span>] = <span class="number">105</span></span><br><span class="line">Element[<span class="number">6</span>] = <span class="number">106</span></span><br><span class="line">Element[<span class="number">7</span>] = <span class="number">107</span></span><br><span class="line">Element[<span class="number">8</span>] = <span class="number">108</span></span><br><span class="line">Element[<span class="number">9</span>] = <span class="number">109</span></span><br></pre></td></tr></table></figure><h2 id="使用-foreach-循环"><a href="#使用-foreach-循环" class="headerlink" title="使用 foreach 循环"></a>使用 <em>foreach</em> 循环</h2><p>在前面的实例中，我们使用一个 for 循环来访问每个数组元素。您也可以使用一个 <strong>foreach</strong> 语句来遍历数组。</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">MyArray</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> []  n = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>]; <span class="comment">/* n 是一个带有 10 个整数的数组 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 初始化数组 n 中的元素 */</span>        </span><br><span class="line">         <span class="keyword">for</span> ( <span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ )</span><br><span class="line">         &#123;</span><br><span class="line">            n[i] = i + <span class="number">100</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 输出每个数组元素的值 */</span></span><br><span class="line">         <span class="keyword">foreach</span> (<span class="built_in">int</span> j <span class="keyword">in</span> n )</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="built_in">int</span> i = j<span class="number">-100</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Element[&#123;0&#125;] = &#123;1&#125;&quot;</span>, i, j);</span><br><span class="line">         &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Element[<span class="number">0</span>] = <span class="number">100</span></span><br><span class="line">Element[<span class="number">1</span>] = <span class="number">101</span></span><br><span class="line">Element[<span class="number">2</span>] = <span class="number">102</span></span><br><span class="line">Element[<span class="number">3</span>] = <span class="number">103</span></span><br><span class="line">Element[<span class="number">4</span>] = <span class="number">104</span></span><br><span class="line">Element[<span class="number">5</span>] = <span class="number">105</span></span><br><span class="line">Element[<span class="number">6</span>] = <span class="number">106</span></span><br><span class="line">Element[<span class="number">7</span>] = <span class="number">107</span></span><br><span class="line">Element[<span class="number">8</span>] = <span class="number">108</span></span><br><span class="line">Element[<span class="number">9</span>] = <span class="number">109</span></span><br></pre></td></tr></table></figure><h1 id="C-数组细节"><a href="#C-数组细节" class="headerlink" title="C# 数组细节"></a>C# 数组细节</h1><p>在 C# 中，数组是非常重要的，且需要了解更多的细节。下面列出了 C# 程序员必须清楚的一些与数组相关的重要概念：</p><table><thead><tr><th align="left">概念</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">多维数组</td><td align="left">C# 支持多维数组。多维数组最简单的形式是二维数组。</td></tr><tr><td align="left">交错数组</td><td align="left">C# 支持交错数组，即数组的数组。</td></tr><tr><td align="left">传递数组给函数</td><td align="left">您可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。</td></tr><tr><td align="left">参数数组</td><td align="left">这通常用于传递未知数量的参数给函数。</td></tr><tr><td align="left">Array 类</td><td align="left">在 System 命名空间中定义，是所有数组的基类，并提供了各种用于数组的属性和方法。</td></tr></tbody></table><h1 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h1><p>C# 支持多维数组。多维数组又称为矩形数组。</p><p>您可以声明一个 string 变量的二维数组，如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> [,] names;</span><br></pre></td></tr></table></figure><p>或者，您可以声明一个 int 变量的三维数组，如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> [ , , ] m;</span><br></pre></td></tr></table></figure><h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><p>多维数组最简单的形式是二维数组。一个二维数组，在本质上，是一个一维数组的列表。</p><p>一个二维数组可以被认为是一个带有 x 行和 y 列的表格。下面是一个二维数组，包含 3 行和 4 列：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/two_dimensional_arrays.jpg" alt="C# 中的二维数组"></p><p>因此，数组中的每个元素是使用形式为 a[ i , j ] 的元素名称来标识的，其中 a 是数组名称，i 和 j 是唯一标识 a 中每个元素的下标。</p><h2 id="初始化二维数组"><a href="#初始化二维数组" class="headerlink" title="初始化二维数组"></a>初始化二维数组</h2><p>多维数组可以通过在括号内为每行指定值来进行初始化。下面是一个带有 3 行 4 列的数组。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> [,] a = <span class="keyword">new</span> <span class="built_in">int</span> [<span class="number">3</span>,<span class="number">4</span>] &#123;</span><br><span class="line"> &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125; ,   <span class="comment">/*  初始化索引号为 0 的行 */</span></span><br><span class="line"> &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125; ,   <span class="comment">/*  初始化索引号为 1 的行 */</span></span><br><span class="line"> &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>&#125;   <span class="comment">/*  初始化索引号为 2 的行 */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="访问二维数组元素"><a href="#访问二维数组元素" class="headerlink" title="访问二维数组元素"></a>访问二维数组元素</h2><p>二维数组中的元素是通过使用下标（即数组的行索引和列索引）来访问的。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int val = a[2,3];</span><br></pre></td></tr></table></figure><p>上面的语句将获取数组中第 3 行第 4 个元素。您可以通过上面的示意图来进行验证。让我们来看看下面的程序，我们将使用嵌套循环来处理二维数组：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyArray</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 一个带有 5 行 2 列的数组 */</span></span><br><span class="line">            <span class="built_in">int</span>[,] a = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>, <span class="number">2</span>] &#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;, &#123;<span class="number">1</span>,<span class="number">2</span>&#125;, &#123;<span class="number">2</span>,<span class="number">4</span>&#125;, &#123;<span class="number">3</span>,<span class="number">6</span>&#125;, &#123;<span class="number">4</span>,<span class="number">8</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> i, j;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 输出数组中每个元素的值 */</span></span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;a[&#123;0&#125;,&#123;1&#125;] = &#123;2&#125;&quot;</span>, i, j, a[i,j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a[<span class="number">0</span>,<span class="number">0</span>]: <span class="number">0</span></span><br><span class="line">a[<span class="number">0</span>,<span class="number">1</span>]: <span class="number">0</span></span><br><span class="line">a[<span class="number">1</span>,<span class="number">0</span>]: <span class="number">1</span></span><br><span class="line">a[<span class="number">1</span>,<span class="number">1</span>]: <span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>,<span class="number">0</span>]: <span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>,<span class="number">1</span>]: <span class="number">4</span></span><br><span class="line">a[<span class="number">3</span>,<span class="number">0</span>]: <span class="number">3</span></span><br><span class="line">a[<span class="number">3</span>,<span class="number">1</span>]: <span class="number">6</span></span><br><span class="line">a[<span class="number">4</span>,<span class="number">0</span>]: <span class="number">4</span></span><br><span class="line">a[<span class="number">4</span>,<span class="number">1</span>]: <span class="number">8</span></span><br></pre></td></tr></table></figure><h1 id="交错数组"><a href="#交错数组" class="headerlink" title="交错数组"></a>交错数组</h1><p>交错数组是数组的数组。</p><p>交错数组是一维数组。</p><p>您可以声明一个带有 <strong>int</strong> 值的交错数组 <em>scores</em>，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> [][] scores;</span><br></pre></td></tr></table></figure><p>声明一个数组不会在内存中创建数组。创建上面的数组：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[][] scores = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>][];</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; scores.Length; i++) </span><br><span class="line">&#123;</span><br><span class="line">   scores[i] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可以初始化一个交错数组，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[][] scores = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">2</span>][]&#123;<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">92</span>,<span class="number">93</span>,<span class="number">94</span>&#125;,<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">85</span>,<span class="number">66</span>,<span class="number">87</span>,<span class="number">88</span>&#125;&#125;;</span><br></pre></td></tr></table></figure><p>其中，scores 是一个由两个整型数组组成的数组 – scores[0] 是一个带有 3 个整数的数组，scores[1] 是一个带有 4 个整数的数组。</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><p>下面的实例演示了如何使用交错数组：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyArray</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 一个由 5 个整型数组组成的交错数组 */</span></span><br><span class="line">            <span class="built_in">int</span>[][] a = <span class="keyword">new</span> <span class="built_in">int</span>[][]&#123;<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">2</span>,<span class="number">4</span>&#125;,<span class="keyword">new</span> <span class="built_in">int</span>[]&#123; <span class="number">3</span>, <span class="number">6</span> &#125;, <span class="keyword">new</span> <span class="built_in">int</span>[]&#123; <span class="number">4</span>, <span class="number">8</span> &#125; &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> i, j;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 输出数组中每个元素的值 */</span></span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;a[&#123;0&#125;][&#123;1&#125;] = &#123;2&#125;&quot;</span>, i, j, a[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span></span><br><span class="line">a[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">a[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>][<span class="number">0</span>] = <span class="number">2</span></span><br><span class="line">a[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">4</span></span><br><span class="line">a[<span class="number">3</span>][<span class="number">0</span>] = <span class="number">3</span></span><br><span class="line">a[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">6</span></span><br><span class="line">a[<span class="number">4</span>][<span class="number">0</span>] = <span class="number">4</span></span><br><span class="line">a[<span class="number">4</span>][<span class="number">1</span>] = <span class="number">8</span></span><br></pre></td></tr></table></figure><h1 id="传递数组给函数"><a href="#传递数组给函数" class="headerlink" title="传递数组给函数"></a>传递数组给函数</h1><p>在 C# 中，您可以传递数组作为函数的参数。您可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><p>下面的实例演示了如何传递数组给函数：</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyArray</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 一个由 5 个整型数组组成的交错数组 */</span></span><br><span class="line">            <span class="built_in">int</span>[][] a = <span class="keyword">new</span> <span class="built_in">int</span>[][]&#123;<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">2</span>,<span class="number">4</span>&#125;,<span class="keyword">new</span> <span class="built_in">int</span>[]&#123; <span class="number">3</span>, <span class="number">6</span> &#125;, <span class="keyword">new</span> <span class="built_in">int</span>[]&#123; <span class="number">4</span>, <span class="number">8</span> &#125; &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> i, j;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 输出数组中每个元素的值 */</span></span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;a[&#123;0&#125;][&#123;1&#125;] = &#123;2&#125;&quot;</span>, i, j, a[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">平均值是： 214.4</span><br></pre></td></tr></table></figure><h1 id="Array-类"><a href="#Array-类" class="headerlink" title="Array 类"></a>Array 类</h1><p>Array 类是 C# 中所有数组的基类，它是在 System 命名空间中定义。Array 类提供了各种用于数组的属性和方法</p><h2 id="Array-类的属性"><a href="#Array-类的属性" class="headerlink" title="Array 类的属性"></a>Array 类的属性</h2><p>下表列出了 Array 类中一些最常用的属性：</p><table><thead><tr><th align="left">序号</th><th align="left">属性 &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>IsFixedSize</strong> 获取一个值，该值指示数组是否带有固定大小。</td></tr><tr><td align="left">2</td><td align="left"><strong>IsReadOnly</strong> 获取一个值，该值指示数组是否只读。</td></tr><tr><td align="left">3</td><td align="left"><strong>Length</strong> 获取一个 32 位整数，该值表示所有维度的数组中的元素总数。</td></tr><tr><td align="left">4</td><td align="left"><strong>LongLength</strong> 获取一个 64 位整数，该值表示所有维度的数组中的元素总数。</td></tr><tr><td align="left">5</td><td align="left"><strong>Rank</strong> 获取数组的秩（维度）。</td></tr></tbody></table><p>如需了解 Array 类的完整的属性列表，请参阅微软的 C# 文档。</p><h2 id="Array-类的方法"><a href="#Array-类的方法" class="headerlink" title="Array 类的方法"></a>Array 类的方法</h2><p>下表列出了 Array 类中一些最常用的方法：</p><table><thead><tr><th align="left">序号</th><th align="left">方法 &amp; 描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>Clear</strong> 根据元素的类型，设置数组中某个范围的元素为零、为 false 或者为 null。</td></tr><tr><td align="left">2</td><td align="left"><strong>Copy(Array, Array, Int32)</strong> 从数组的第一个元素开始复制某个范围的元素到另一个数组的第一个元素位置。长度由一个 32 位整数指定。</td></tr><tr><td align="left">3</td><td align="left"><strong>CopyTo(Array, Int32)</strong> 从当前的一维数组中复制所有的元素到一个指定的一维数组的指定索引位置。索引由一个 32 位整数指定。</td></tr><tr><td align="left">4</td><td align="left"><strong>GetLength</strong> 获取一个 32 位整数，该值表示指定维度的数组中的元素总数。</td></tr><tr><td align="left">5</td><td align="left"><strong>GetLongLength</strong> 获取一个 64 位整数，该值表示指定维度的数组中的元素总数。</td></tr><tr><td align="left">6</td><td align="left"><strong>GetLowerBound</strong> 获取数组中指定维度的下界。</td></tr><tr><td align="left">7</td><td align="left"><strong>GetType</strong> 获取当前实例的类型。从对象（Object）继承。</td></tr><tr><td align="left">8</td><td align="left"><strong>GetUpperBound</strong> 获取数组中指定维度的上界。</td></tr><tr><td align="left">9</td><td align="left"><strong>GetValue(Int32)</strong> 获取一维数组中指定位置的值。索引由一个 32 位整数指定。</td></tr><tr><td align="left">10</td><td align="left"><strong>IndexOf(Array, Object)</strong> 搜索指定的对象，返回整个一维数组中第一次出现的索引。</td></tr><tr><td align="left">11</td><td align="left"><strong>Reverse(Array)</strong> 逆转整个一维数组中元素的顺序。</td></tr><tr><td align="left">12</td><td align="left"><strong>SetValue(Object, Int32)</strong> 给一维数组中指定位置的元素设置值。索引由一个 32 位整数指定。</td></tr><tr><td align="left">13</td><td align="left"><strong>Sort(Array)</strong> 使用数组的每个元素的 IComparable 实现来排序整个一维数组中的元素。</td></tr><tr><td align="left">14</td><td align="left"><strong>ToString</strong> 返回一个表示当前对象的字符串。从对象（Object）继承。</td></tr></tbody></table><p>如需了解 Array 类的完整的方法列表，请参阅微软的 C# 文档。</p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><p>下面的程序演示了 Array 类的一些方法的用法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ArrayApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyArray</span></span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span>[] list = &#123; <span class="number">34</span>, <span class="number">72</span>, <span class="number">13</span>, <span class="number">44</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">            Console.Write(<span class="string">&quot;原始数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">           </span><br><span class="line">            <span class="comment">// 逆转数组</span></span><br><span class="line">            Array.Reverse(list);</span><br><span class="line">            Console.Write(<span class="string">&quot;逆转数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">           </span><br><span class="line">            <span class="comment">// 排序数组</span></span><br><span class="line">            Array.Sort(list);</span><br><span class="line">            Console.Write(<span class="string">&quot;排序数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">           Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">原始数组： 34 72 13 44 25 30 10</span><br><span class="line">逆转数组： 10 30 25 44 13 72 34</span><br><span class="line">排序数组： 10 13 25 30 34 44 72</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（14）可空类型（Nullable）</title>
      <link href="/2018/01/19/CSharp/14CSharp_Nullable/"/>
      <url>/2018/01/19/CSharp/14CSharp_Nullable/</url>
      
        <content type="html"><![CDATA[<h1 id="C-可空类型（Nullable）"><a href="#C-可空类型（Nullable）" class="headerlink" title="C# 可空类型（Nullable）"></a>C# 可空类型（Nullable）</h1><h1 id="C-单问号-与-双问号"><a href="#C-单问号-与-双问号" class="headerlink" title="C# 单问号 ? 与 双问号 ??"></a>C# 单问号 ? 与 双问号 ??</h1><p><strong>?</strong> 单问号用于对 <strong>int、double、bool</strong> 等无法直接赋值为 null 的数据类型进行 null 的赋值，意思是这个数据类型是 Nullable 类型的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int? i = 3;</span><br></pre></td></tr></table></figure><p>等同于：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Nullable&lt;int&gt; i = new Nullable&lt;int&gt;(3);</span><br><span class="line">int i; //默认值0</span><br><span class="line">int? ii; //默认值null</span><br></pre></td></tr></table></figure><p><strong>??</strong> 双问号用于判断一个变量在为 null 的时候返回一个指定的值。</p><p>接下来我们详细说明。</p><h1 id="C-可空类型（Nullable）-1"><a href="#C-可空类型（Nullable）-1" class="headerlink" title="C# 可空类型（Nullable）"></a>C# 可空类型（Nullable）</h1><p>C# 提供了一个特殊的数据类型，<strong>nullable</strong> 类型（可空类型），可空类型可以表示其基础值类型正常范围内的值，再加上一个 null 值。</p><p>例如，Nullable&lt; Int32 &gt;，读作”可空的 Int32”，可以被赋值为 -2,147,483,648 到 2,147,483,647 之间的任意值，也可以被赋值为 null 值。类似的，Nullable&lt; bool &gt; 变量可以被赋值为 true 或 false 或 null。</p><p>在处理数据库和其他包含可能未赋值的元素的数据类型时，将 null 赋值给数值类型或布尔型的功能特别有用。例如，数据库中的布尔型字段可以存储值 true 或 false，或者，该字段也可以未定义。</p><p>声明一个 <strong>nullable</strong> 类型（可空类型）的语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt; data_type&gt; ? &lt;variable_name&gt; = null;</span><br></pre></td></tr></table></figure><p>下面的实例演示了可空数据类型的用法：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NullablesAtShow</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span>? num1 = <span class="literal">null</span>;</span><br><span class="line">         <span class="built_in">int</span>? num2 = <span class="number">45</span>;</span><br><span class="line">         <span class="built_in">double</span>? num3 = <span class="keyword">new</span> <span class="built_in">double</span>?();</span><br><span class="line">         <span class="built_in">double</span>? num4 = <span class="number">3.14157</span>;</span><br><span class="line">         </span><br><span class="line">         <span class="built_in">bool</span>? boolval = <span class="keyword">new</span> <span class="built_in">bool</span>?();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 显示值</span></span><br><span class="line">         </span><br><span class="line">         Console.WriteLine(<span class="string">&quot;显示可空类型的值： &#123;0&#125;, &#123;1&#125;, &#123;2&#125;, &#123;3&#125;&quot;</span>,</span><br><span class="line">                            num1, num2, num3, num4);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;一个可空的布尔值： &#123;0&#125;&quot;</span>, boolval);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示可空类型的值： , 45,  , 3.14157</span><br><span class="line">一个可空的布尔值：</span><br></pre></td></tr></table></figure><h1 id="Null-合并运算符（-）"><a href="#Null-合并运算符（-）" class="headerlink" title="Null 合并运算符（ ?? ）"></a>Null 合并运算符（ ?? ）</h1><p>Null 合并运算符用于定义可空类型和引用类型的默认值。Null 合并运算符为类型转换定义了一个预设值，以防可空类型的值为 Null。Null 合并运算符把操作数类型隐式转换为另一个可空（或不可空）的值类型的操作数的类型。</p><p>如果第一个操作数的值为 null，则运算符返回第二个操作数的值，否则返回第一个操作数的值。下面的实例演示了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NullablesAtShow</span></span><br><span class="line">   &#123;</span><br><span class="line">         </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         </span><br><span class="line">         <span class="built_in">double</span>? num1 = <span class="literal">null</span>;</span><br><span class="line">         <span class="built_in">double</span>? num2 = <span class="number">3.14157</span>;</span><br><span class="line">         <span class="built_in">double</span> num3;</span><br><span class="line">         num3 = num1 ?? <span class="number">5.34</span>;      <span class="comment">// num1 如果为空值则返回 5.34</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;num3 的值： &#123;0&#125;&quot;</span>, num3);</span><br><span class="line">         num3 = num2 ?? <span class="number">5.34</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;num3 的值： &#123;0&#125;&quot;</span>, num3);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num3 的值： 5.34</span><br><span class="line">num3 的值： 3.14157</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num3 = num1 ?? <span class="number">5.34</span>;      <span class="comment">// num1 如果为空值则返回 5.34</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;num3 的值： &#123;0&#125;&quot;</span>, num3);</span><br><span class="line">num3 = num2 ?? <span class="number">5.34</span>;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;num3 的值： &#123;0&#125;&quot;</span>, num3);</span><br></pre></td></tr></table></figure><p>C# 中两个问号的作用是判断??左边的对象是否为 null，如果不为 null 则使用 ?? 左边的对象，如果为 null 则使用 ?? 右边的对象。</p><p>比如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = b ?? c</span><br></pre></td></tr></table></figure><p>如果 b 为 null，则 a &#x3D; c，如果 b 不为 null，则 a &#x3D; b。</p><p>?? 可以理解为三元运算符的简化形式：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num3 = num1 ?? <span class="number">5.34</span>;</span><br><span class="line">num3 = (num1 == <span class="literal">null</span>) ? <span class="number">5.34</span> : num1;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（13）方法</title>
      <link href="/2018/01/18/CSharp/13CSharp_Method/"/>
      <url>/2018/01/18/CSharp/13CSharp_Method/</url>
      
        <content type="html"><![CDATA[<h1 id="C-方法"><a href="#C-方法" class="headerlink" title="C# 方法"></a>C# 方法</h1><p>一个方法是把一些相关的语句组织在一起，用来执行一个任务的语句块。每一个 C# 程序至少有一个带有 Main 方法的类。</p><p>要使用一个方法，您需要：</p><ul><li>定义方法</li><li>调用方法</li></ul><h1 id="C-中定义方法"><a href="#C-中定义方法" class="headerlink" title="C# 中定义方法"></a>C# 中定义方法</h1><p>当定义一个方法时，从根本上说是在声明它的结构的元素。在 C# 中，定义方法的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Access Specifier&gt; &lt;Return Type&gt; &lt;Method Name&gt;(Parameter List)</span><br><span class="line">&#123;</span><br><span class="line">   Method Body</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是方法的各个元素：</p><ul><li><strong>Access Specifier</strong>：访问修饰符，这个决定了变量或方法对于另一个类的可见性。</li><li><strong>Return type</strong>：返回类型，一个方法可以返回一个值。返回类型是方法返回的值的数据类型。如果方法不返回任何值，则返回类型为 <strong>void</strong>。</li><li><strong>Method name</strong>：方法名称，是一个唯一的标识符，且是大小写敏感的。它不能与类中声明的其他标识符相同。</li><li><strong>Parameter list</strong>：参数列表，使用圆括号括起来，该参数是用来传递和接收方法的数据。参数列表是指方法的参数类型、顺序和数量。参数是可选的，也就是说，一个方法可能不包含参数。</li><li><strong>Method body</strong>：方法主体，包含了完成任务所需的指令集。</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>下面的代码片段显示一个函数 <em>FindMax</em>，它接受两个整数值，并返回两个中的较大值。它有 public 访问修饰符，所以它可以使用类的实例从类的外部进行访问。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">FindMax</span>(<span class="params"><span class="built_in">int</span> num1, <span class="built_in">int</span> num2</span>)</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">      <span class="built_in">int</span> result;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (num1 &gt; num2)</span><br><span class="line">         result = num1;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">         result = num2;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">   &#125;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-中调用方法"><a href="#C-中调用方法" class="headerlink" title="C# 中调用方法"></a>C# 中调用方法</h1><p>您可以使用方法名调用方法。下面的实例演示了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">FindMax</span>(<span class="params"><span class="built_in">int</span> num1, <span class="built_in">int</span> num2</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">/* 局部变量声明 */</span></span><br><span class="line">         <span class="built_in">int</span> result;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (num1 &gt; num2)</span><br><span class="line">            result = num1;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">            result = num2;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">return</span> result;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">         <span class="built_in">int</span> b = <span class="number">200</span>;</span><br><span class="line">         <span class="built_in">int</span> ret;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line"></span><br><span class="line">         <span class="comment">//调用 FindMax 方法</span></span><br><span class="line">         ret = n.FindMax(a, b);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;最大值是： &#123;0&#125;&quot;</span>, ret );</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最大值是： 200</span><br></pre></td></tr></table></figure><h1 id="递归方法调用"><a href="#递归方法调用" class="headerlink" title="递归方法调用"></a>递归方法调用</h1><p>一个方法可以自我调用。这就是所谓的 <strong>递归</strong>。下面的实例使用递归函数计算一个数的阶乘：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">factorial</span>(<span class="params"><span class="built_in">int</span> num</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> result;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                result = factorial(num - <span class="number">1</span>) * num;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">            <span class="comment">//调用 factorial 方法</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;6 的阶乘是： &#123;0&#125;&quot;</span>, n.factorial(<span class="number">6</span>));</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;7 的阶乘是： &#123;0&#125;&quot;</span>, n.factorial(<span class="number">7</span>));</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;8 的阶乘是： &#123;0&#125;&quot;</span>, n.factorial(<span class="number">8</span>));</span><br><span class="line">            Console.ReadLine();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">6</span> 的阶乘是： <span class="number">720</span></span><br><span class="line"><span class="number">7</span> 的阶乘是： <span class="number">5040</span></span><br><span class="line"><span class="number">8</span> 的阶乘是： <span class="number">40320</span></span><br></pre></td></tr></table></figure><h1 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h1><p>当调用带有参数的方法时，您需要向方法传递参数。在 C# 中，有三种向方法传递参数的方式：</p><table><thead><tr><th align="center">方式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">值参数</td><td align="left">这种方式复制参数的实际值给函数的形式参数，实参和形参使用的是两个不同内存中的值。在这种情况下，当形参的值发生改变时，不会影响实参的值，从而保证了实参数据的安全。</td></tr><tr><td align="center">引用参数</td><td align="left">这种方式复制参数的内存位置的引用给形式参数。这意味着，当形参的值发生改变时，同时也改变实参的值。</td></tr><tr><td align="center">输出参数</td><td align="left">这种方式可以返回多个值。</td></tr></tbody></table><h1 id="按值传递参数-int"><a href="#按值传递参数-int" class="headerlink" title="按值传递参数(int)"></a>按值传递参数(int)</h1><p>这是参数传递的默认方式。在这种方式下，当调用一个方法时，会为每个值参数创建一个新的存储位置。</p><p>实际参数的值会复制给形参，实参和形参使用的是两个不同内存中的值。所以，当形参的值发生改变时，不会影响实参的值，从而保证了实参数据的安全。下面的实例演示了这个概念：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params"><span class="built_in">int</span> x, <span class="built_in">int</span> y</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> temp;</span><br><span class="line">         </span><br><span class="line">         temp = x; <span class="comment">/* 保存 x 的值 */</span></span><br><span class="line">         x = y;    <span class="comment">/* 把 y 赋值给 x */</span></span><br><span class="line">         y = temp; <span class="comment">/* 把 temp 赋值给 y */</span></span><br><span class="line">      &#125;</span><br><span class="line">     </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">         <span class="built_in">int</span> b = <span class="number">200</span>;</span><br><span class="line">         </span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之前，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之前，b 的值： &#123;0&#125;&quot;</span>, b);</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 调用函数来交换值 */</span></span><br><span class="line">         n.swap(a, b);</span><br><span class="line">         </span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之后，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之后，b 的值： &#123;0&#125;&quot;</span>, b);</span><br><span class="line">         </span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在交换之前，a 的值：100</span><br><span class="line">在交换之前，b 的值：200</span><br><span class="line">在交换之后，a 的值：100</span><br><span class="line">在交换之后，b 的值：200</span><br></pre></td></tr></table></figure><p>结果表明，即使在函数内改变了值，值也没有发生任何的变化。</p><h1 id="按引用传递参数-ref"><a href="#按引用传递参数-ref" class="headerlink" title="按引用传递参数(ref)"></a>按引用传递参数(ref)</h1><p>引用参数是一个对变量的<strong>内存位置的引用</strong>。当按引用传递参数时，与值参数不同的是，它不会为这些参数创建一个新的存储位置。引用参数表示与提供给方法的实际参数具有相同的内存位置。</p><p>在 C# 中，使用 <strong>ref</strong> 关键字声明引用参数。下面的实例演示了这点：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">int</span> x, <span class="keyword">ref</span> <span class="built_in">int</span> y</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> temp;</span><br><span class="line"></span><br><span class="line">         temp = x; <span class="comment">/* 保存 x 的值 */</span></span><br><span class="line">         x = y;    <span class="comment">/* 把 y 赋值给 x */</span></span><br><span class="line">         y = temp; <span class="comment">/* 把 temp 赋值给 y */</span></span><br><span class="line">       &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">         <span class="built_in">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之前，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之前，b 的值： &#123;0&#125;&quot;</span>, b);</span><br><span class="line"></span><br><span class="line">         <span class="comment">/* 调用函数来交换值 */</span></span><br><span class="line">         n.swap(<span class="keyword">ref</span> a, <span class="keyword">ref</span> b);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之后，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在交换之后，b 的值： &#123;0&#125;&quot;</span>, b);</span><br><span class="line"> </span><br><span class="line">         Console.ReadLine();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在交换之前，a 的值：100</span><br><span class="line">在交换之前，b 的值：200</span><br><span class="line">在交换之后，a 的值：200</span><br><span class="line">在交换之后，b 的值：100</span><br></pre></td></tr></table></figure><p>结果表明，<em>swap</em> 函数内的值改变了，且这个改变可以在 <em>Main</em> 函数中反映出来。</p><h1 id="按输出传递参数-out"><a href="#按输出传递参数-out" class="headerlink" title="按输出传递参数(out)"></a>按输出传递参数(out)</h1><p>return 语句可用于只从函数中返回一个值。但是，可以使用 <strong>输出参数</strong> 来从函数中返回两个值。输出参数会把方法输出的数据赋给自己，其他方面与引用参数相似。</p><p>下面的实例演示了这点：</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getValue</span>(<span class="params"><span class="keyword">out</span> <span class="built_in">int</span> x </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> temp = <span class="number">5</span>;</span><br><span class="line">         x = temp;</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">         </span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在方法调用之前，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 调用函数来获取值 */</span></span><br><span class="line">         n.getValue(<span class="keyword">out</span> a);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在方法调用之后，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在方法调用之前，a 的值： 100</span><br><span class="line">在方法调用之后，a 的值： 5</span><br></pre></td></tr></table></figure><p>提供给输出参数的变量不需要赋值。当需要从一个参数没有指定初始值的方法中返回值时，输出参数特别有用。请看下面的实例，来理解这一点：</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CalculatorApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">NumberManipulator</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getValues</span>(<span class="params"><span class="keyword">out</span> <span class="built_in">int</span> x, <span class="keyword">out</span> <span class="built_in">int</span> y </span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;请输入第一个值： &quot;</span>);</span><br><span class="line">          x = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;请输入第二个值： &quot;</span>);</span><br><span class="line">          y = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">      &#125;</span><br><span class="line">   </span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         NumberManipulator n = <span class="keyword">new</span> NumberManipulator();</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="built_in">int</span> a , b;</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 调用函数来获取值 */</span></span><br><span class="line">         n.getValues(<span class="keyword">out</span> a, <span class="keyword">out</span> b);</span><br><span class="line"></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在方法调用之后，a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;在方法调用之后，b 的值： &#123;0&#125;&quot;</span>, b);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果（取决于用户输入）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">请输入第一个值：</span><br><span class="line">7</span><br><span class="line">请输入第二个值：</span><br><span class="line">8</span><br><span class="line">在方法调用之后，a 的值： 7</span><br><span class="line">在方法调用之后，b 的值： 8</span><br></pre></td></tr></table></figure><h1 id="参数数目可变-params"><a href="#参数数目可变-params" class="headerlink" title="参数数目可变(params)"></a>参数数目可变(params)</h1><ul><li>params参数：参数数目可变。</li></ul><ol><li>若形参表中含一个参数数组，则该参数数组必须位于形参列表的最后；</li><li>参数数组必须是一维数组；</li><li>不允许将params修饰符与ref和out修饰符组合起来使用；</li><li>与参数数组对应的实参可以是同一类型的数组名，也可以是任意多个与该数组的元素属于同一类型的变量；</li><li>若实参是数组则按引用传递，若实参是变量或表达式则按值传递。</li><li>可以发送参数声明中所指定类型的逗号分隔的参数列表或指定类型的参数数组。 还可以不发送参数。 如果未发送任何参数，则 params 列表的长度为零。</li><li>用法：可变的方法参数，也称数组型参数，适合于方法的参数个数不知的情况，用于传递大量的数组集合参数；当使用数组参数时，可通过使用params关键字在形参表中指定多种方法参数，并在方法的参数表中指定一个数组，</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">方法修饰符　返回类型　方法名（<span class="keyword">params</span>　类型[]　变量名）</span><br><span class="line">&#123;</span><br><span class="line">方法体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><ul><li>方法如下：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetByCriteria</span>(<span class="params"><span class="keyword">params</span> <span class="built_in">string</span>[] strs</span>)</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">string</span> result = <span class="built_in">string</span>.Empty;</span><br><span class="line">         <span class="keyword">foreach</span> (<span class="built_in">string</span> str <span class="keyword">in</span> strs)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="comment">//执行代码</span></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">return</span> result;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>params 是数组型参数，根据实参形式选择引用传递或值传递，包含数量可变的参数。<br>也就是说，GetByCriteria方法可以接收单个实体，也可以接收实体数组。<br>也就不需要重载方法了。<br>调用：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单个实体</span></span><br><span class="line"><span class="keyword">this</span>.GetByCriteria(<span class="string">&quot;test&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="built_in">string</span>[] strs = <span class="keyword">new</span> <span class="built_in">string</span>[]&#123;<span class="string">&quot;test&quot;</span>,<span class="string">&quot;test1&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">this</span>.GetByCriteria(strs);</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#练习（3）</title>
      <link href="/2018/01/16/CSharp/12CSharp_Z03/"/>
      <url>/2018/01/16/CSharp/12CSharp_Z03/</url>
      
        <content type="html"><![CDATA[<h1 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h1><p>   定义一个数字，判断这个数是否是奇数<br>   是奇数打印“是奇数”，否则”不是奇数”<br>   要求：if 语句来完成。<br>   提示：奇数的判断：和2取余数不等于0 </p><h1 id="练习：改写奇数的判断。"><a href="#练习：改写奇数的判断。" class="headerlink" title="练习：改写奇数的判断。"></a>练习：改写奇数的判断。</h1><p>  创建 IfElseDemo1.cs<br>  判断一个数是否是奇数，是“是奇数”，<br>  否则打印“不是奇数”<br>  要求：使用if..else语句实现。</p><h1 id="练习：定义一个人的年龄，根据年龄，判断所属年龄段："><a href="#练习：定义一个人的年龄，根据年龄，判断所属年龄段：" class="headerlink" title="练习：定义一个人的年龄，根据年龄，判断所属年龄段："></a>练习：定义一个人的年龄，根据年龄，判断所属年龄段：</h1><p>   幼年：0-6<br>   少年：7-16<br>   青年：17-27<br>   中年：28-60<br>   老年：60-150</p><p>   不合法数字()</p><hr><h1 id="day03作业-周四"><a href="#day03作业-周四" class="headerlink" title="day03作业   周四"></a>day03作业   周四</h1><p> 1.自由设计编码题</p><p>   学习了分支语句,请考虑一下:我们生活中哪些情景,现象可以使用if语句来实现.</p><ol><li><p>if…else 结构的举出一到两种案例. (尽量做)</p><p>如:如果每月工资达到2万,就有钱去谈女朋友了<br>   如果月薪达不到2万,就得努力工作了</p></li><li><p>if…else if ….else if ..else 形式的请举出一到两种案例<br>如: 星座性别分析器      </p></li><li><p>if嵌套形式的请举出一到两种案例 （选做）<br>如果明天是周末,就去玩<br>否则就去上班;<br>如果明天是周末,而且天气晴朗,就去室外玩;<br>如果明天是周末,但是天气不晴朗,就在室内玩</p></li></ol><p>   然后,针对以上您列举的生活案例,能否写出具体的实现代码.<br>   不限内容,不限类型,不限形式.请主动编写代码实现.</p><p> 2.写出下列程序的运行结果<br>  1）<br>  int a &#x3D; 1, b &#x3D; 10;<br>  int c1 &#x3D; a++;<br>  int c2 &#x3D; ++b;<br>  Console.WriteLine(<br>      “a&#x3D;” + a + “, b&#x3D;” + b +<br>      “, c1&#x3D;” + c1 + “, c2&#x3D;” + c2 );</p><p>答案：a&#x3D;2，b&#x3D;11<br>       c1&#x3D;1,c2&#x3D;11</p><p>  2）<br>  int i &#x3D; 100, j &#x3D; 200;<br>  bool b1 &#x3D; (i &gt; j) &amp;&amp; (i++ &gt; 100);<br>  Console.WriteLine(b1);<br>  Console.WriteLine(i);</p><p>答案：false<br>      100<br>  3）<br>   int num1 &#x3D;  10 ;<br>   int num2 &#x3D;  ++num1 ;<br>   Console.WriteLine( num1 );<br>   Console.WriteLine( num2 );</p><p>   int num3 &#x3D; num1+&#x3D;100  ;<br>   Console.WriteLine( num1 );<br>   Console.WriteLine( num3 );</p><p>   int num4 &#x3D; num1+&#x3D;num2 ;<br>   Console.WriteLine( num1 );<br>   Console.WriteLine( num4 ); </p><p>答案： num1&#x3D;11<br>       num2&#x3D;11<br>       num1&#x3D;111<br>       num3&#x3D;111<br>       num1&#x3D;122<br>       num4&#x3D;122<br>  4）<br>  class DemoTest2<br>  {<br>      static  void  Main( string[] args )<br>      {<br>           int x &#x3D; 5;<br>           int y &#x3D; 5;<br>           int z &#x3D; 5;<br>           x++;<br>           Console.WriteLine(x);<br>           Console.Write(y++);<br>           Console.WriteLine(++z);<br>      }<br>  }</p><p>答案：6<br>      5<br>      6<br>3.编程题.<br>通过控制台接收两个整数，使用不同的方法找出两个数中的最大值。<br>提示：可使用条件运算符 或 Math.Max()或 if..else语句</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（10）判断</title>
      <link href="/2018/01/15/CSharp/10CSharp_Judger/"/>
      <url>/2018/01/15/CSharp/10CSharp_Judger/</url>
      
        <content type="html"><![CDATA[<h1 id="程序结构："><a href="#程序结构：" class="headerlink" title="程序结构："></a>程序结构：</h1><ul><li>顺序结构:所谓顺序结构，指的是按照编写程序时的顺序，从上往下载依次执行程序中的代码。</li><li>分支结构:程序在运行过程中，根据给定条件的不同，而选择不同的代码语句来执行。<br>  C# 中常用的分支结构分为两种：if　语句构成的分支 switch　语句构成的分支</li><li>循环结构:所谓的循环，指的是在特定的场景或条件下，反复执行重复执行同一个动作，直到特定条件不成立，反复执行的动作才会正常结束。<br>  C# 中的循环主要有以下三种：while、do while 、for 。</li></ul><h1 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h1><p>C# 提供了以下类型的判断语句。</p><table><thead><tr><th align="left">语句</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">if 语句</td><td align="left">一个 <strong>if 语句</strong> 由一个布尔表达式后跟一个或多个语句组成。</td></tr><tr><td align="left">if…else 语句</td><td align="left">一个 <strong>if 语句</strong> 后可跟一个可选的 <strong>else 语句</strong>，else 语句在布尔表达式为假时执行。</td></tr><tr><td align="left">嵌套 if 语句</td><td align="left">可以在一个 <strong>if</strong> 或 <strong>else if</strong> 语句内使用另一个 <strong>if</strong> 或 <strong>else if</strong> 语句。</td></tr><tr><td align="left">switch 语句</td><td align="left">一个 <strong>switch</strong> 语句允许测试一个变量等于多个值时的情况。</td></tr><tr><td align="left">嵌套 switch 语句</td><td align="left">您可以在一个 <strong>switch</strong> 语句内使用另一个 <strong>switch</strong> 语句。</td></tr></tbody></table><h1 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h1><p>一个 <strong>if 语句</strong> 由一个布尔表达式后跟一个或多个语句组成。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>if</strong> 语句的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(boolean_expression)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">/* 如果布尔表达式为真将执行的语句 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果布尔表达式为 <strong>true</strong>，则 if 语句内的代码块将被执行。如果布尔表达式为 <strong>false</strong>，则 if 语句结束后的第一组代码（闭括号后）将被执行。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DecisionMaking</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 使用 if 语句检查布尔条件 */</span></span><br><span class="line">            <span class="keyword">if</span> (a &lt; <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果条件为真，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 小于 20&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的值是 &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a 小于 <span class="number">20</span></span><br><span class="line">a 的值是 <span class="number">10</span></span><br></pre></td></tr></table></figure><hr><h1 id="if…else-语句"><a href="#if…else-语句" class="headerlink" title="if…else 语句"></a>if…else 语句</h1><p>一个 <strong>if 语句</strong> 后可跟一个可选的 <strong>else 语句</strong>，else 语句在布尔表达式为假时执行。</p><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>if…else</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if(boolean_expression)</span><br><span class="line">&#123;</span><br><span class="line">   /* 如果布尔表达式为真将执行的语句 */</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">  /* 如果布尔表达式为假将执行的语句 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果布尔表达式为 <strong>true</strong>，则执行 <strong>if</strong> 块内的代码。如果布尔表达式为 <strong>false</strong>，则执行 <strong>else</strong> 块内的代码。</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DecisionMaking</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 检查布尔条件 */</span></span><br><span class="line">            <span class="keyword">if</span> (a &lt; <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果条件为真，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 小于 20&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果条件为假，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 大于 20&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的值是 &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a 大于 <span class="number">20</span></span><br><span class="line">a 的值是 <span class="number">100</span></span><br></pre></td></tr></table></figure><h1 id="if…else-if…else-语句"><a href="#if…else-if…else-语句" class="headerlink" title="if…else if…else 语句"></a>if…else if…else 语句</h1><p>一个 <strong>if</strong> 语句后可跟一个可选的 <strong>else if…else</strong> 语句，这可用于测试多种条件。</p><p>当使用 if…else if…else 语句时，以下几点需要注意：</p><ul><li>一个 if 后可跟零个或一个 else，它必须在任何一个 else if 之后。</li><li>一个 if 后可跟零个或多个 else if，它们必须在 else 之前。</li><li>一旦某个 else if 匹配成功，其他的 else if 或 else 将不会被测试。</li></ul><h2 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h2><p>C# 中的 <strong>if…else if…else</strong> 语句的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(boolean_expression <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">/* 当布尔表达式 1 为真时执行 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( boolean_expression <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">/* 当布尔表达式 2 为真时执行 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( boolean_expression <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">/* 当布尔表达式 3 为真时执行 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">/* 当上面条件都不为真时执行 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DecisionMaking</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 检查布尔条件 */</span></span><br><span class="line">            <span class="keyword">if</span> (a == <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果 if 条件为真，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值是 10&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果 else if 条件为真，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值是 20&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="number">30</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果 else if 条件为真，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值是 30&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果上面条件都不为真，则输出下面的语句 */</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;没有匹配的值&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的准确值是 &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">没有匹配的值</span><br><span class="line">a 的准确值是 100</span><br></pre></td></tr></table></figure><h1 id="嵌套-if-语句"><a href="#嵌套-if-语句" class="headerlink" title="嵌套 if 语句"></a>嵌套 if 语句</h1><p>在 C# 中，<strong>嵌套</strong> if-else 语句是合法的，这意味着您可以在一个 <strong>if</strong> 或 <strong>else if</strong> 语句内使用另一个 <strong>if</strong> 或 <strong>else if</strong> 语句。</p><h2 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>嵌套 if</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if( boolean_expression 1)</span><br><span class="line">&#123;</span><br><span class="line">   /* 当布尔表达式 1 为真时执行 */</span><br><span class="line">   if(boolean_expression 2)</span><br><span class="line">   &#123;</span><br><span class="line">      /* 当布尔表达式 2 为真时执行 */</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您可以嵌套 <strong>else if…else</strong>，方式与嵌套 <em>if</em> 语句相似。</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DecisionMaking</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">            <span class="built_in">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 检查布尔条件 */</span></span><br><span class="line">            <span class="keyword">if</span> (a == <span class="number">100</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 如果条件为真，则检查下面的条件 */</span></span><br><span class="line">                <span class="keyword">if</span> (b == <span class="number">200</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* 如果条件为真，则输出下面的语句 */</span></span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;a 的值是 100，且 b 的值是 200&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的准确值是 &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b 的准确值是 &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a 的值是 100，且 b 的值是 200</span><br><span class="line">a 的准确值是 100</span><br><span class="line">b 的准确值是 200</span><br></pre></td></tr></table></figure><h1 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h1><p>一个 <strong>switch</strong> 语句允许测试一个变量等于多个值时的情况。每个值称为一个 case，且被测试的变量会对每个 <strong>switch case</strong> 进行检查。</p><h2 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>switch</strong> 语句的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression)&#123;</span><br><span class="line">    <span class="keyword">case</span> constant-expression  :</span><br><span class="line">       statement(s);</span><br><span class="line">       <span class="keyword">break</span>; </span><br><span class="line">    <span class="keyword">case</span> constant-expression  :</span><br><span class="line">       statement(s);</span><br><span class="line">       <span class="keyword">break</span>; </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/* 您可以有任意数量的 case 语句 */</span></span><br><span class="line">    <span class="literal">default</span> : <span class="comment">/* 可选的 */</span></span><br><span class="line">       statement(s);</span><br><span class="line">       <span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>switch</strong> 语句必须遵循下面的规则：</p><ul><li><p><strong>switch</strong> 语句中的 <strong>expression</strong> 必须是一个整型或枚举类型，或者是一个 class 类型，其中 class 有一个单一的转换函数将其转换为整型或枚举类型。</p></li><li><p>在一个 switch 中可以有任意数量的 case 语句。每个 case 后跟一个要比较的值和一个冒号。</p></li><li><p>case 的 <strong>constant-expression</strong> 必须与 switch 中的变量具有相同的数据类型，且必须是一个常量。</p></li><li><p>当被测试的变量等于 case 中的常量时，case 后跟的语句将被执行，直到遇到 <strong>break</strong> 语句为止。</p></li><li><p>当遇到 <strong>break</strong> 语句时，switch 终止，控制流将跳转到 switch 语句后的下一行。</p></li><li><p>不是每一个 case 都需要包含 <strong>break</strong>。如果 case 语句为空，则可以不包含 <strong>break</strong>，控制流将会 <em>继续</em> 后续的 case，直到遇到 break 为止。</p></li><li><p>C# 不允许从一个 case 部分继续执行到下一个 case 部分。如果 case 语句中有已经执行，则必须包含 <strong>break</strong> 或其他跳转语句。</p></li><li><p>一个 <strong>switch</strong> 语句可以有一个可选的 <strong>default</strong> 语句，在 switch 的结尾。default 语句用于在上面所有 case 都不为 true 时执行的一个任务。default 也需要包含 <strong>break</strong> 语句，这是一个良好的习惯。</p></li><li><p>C# 不支持从一个 case 标签显式贯穿到另一个 case 标签。如果要使 C# 支持从一个 case 标签显式贯穿到另一个 case 标签，可以使用 goto 一个 switch-case 或 goto default。</p></li></ul><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MyApplication</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">int</span> day = <span class="number">4</span>;</span><br><span class="line">      <span class="keyword">switch</span> (day)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Monday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Tuesday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Wednesday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Thursday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Friday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Saturday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Sunday&quot;</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  执行结果根据当天日期有所不同，我这里执行这天的结果为：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Thursday</span><br></pre></td></tr></table></figure><p>  以下实例判断学生的成绩，包含了 <strong>default</strong> 语句：</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DecisionMaking</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">char</span> grade = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (grade)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;很棒！&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;做得好&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;您通过了&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;F&#x27;</span>:</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;最好再试一下&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="literal">default</span>:</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;无效的成绩&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;您的成绩是 &#123;0&#125;&quot;</span>, grade);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  当上面的代码被编译和执行时，它会产生下列结果：</p>  <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">做得好</span><br><span class="line">您的成绩是 B</span><br></pre></td></tr></table></figure><h1 id="嵌套-switch-语句"><a href="#嵌套-switch-语句" class="headerlink" title="嵌套 switch 语句"></a>嵌套 switch 语句</h1><p>您可以把一个 <strong>switch</strong> 作为一个外部 <strong>switch</strong> 的语句序列的一部分，即可以在一个 <strong>switch</strong> 语句内使用另一个 <strong>switch</strong> 语句。即使内部和外部 switch 的 case 常量包含共同的值，也没有矛盾。</p><h2 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>嵌套 switch</strong> 语句的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(ch1)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">      printf(<span class="string">&quot;这个 A 是外部 switch 的一部分&quot;</span> );</span><br><span class="line">      <span class="keyword">switch</span>(ch2)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">            printf(<span class="string">&quot;这个 A 是内部 switch 的一部分&quot;</span> );</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>: <span class="comment">/* 内部 B case 代码 */</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>: <span class="comment">/* 外部 B case 代码 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DecisionMaking</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">            <span class="built_in">int</span> b = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (a)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">100</span>:</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;这是外部 switch 的一部分&quot;</span>);</span><br><span class="line">                    <span class="keyword">switch</span> (b)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">200</span>:</span><br><span class="line">                        Console.WriteLine(<span class="string">&quot;这是内部 switch 的一部分&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的准确值是 &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b 的准确值是 &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是外部 switch 的一部分</span><br><span class="line">这是内部 switch 的一部分</span><br><span class="line">a 的准确值是 100</span><br><span class="line">b 的准确值是 200</span><br></pre></td></tr></table></figure><h1 id="运算符"><a href="#运算符" class="headerlink" title="? : 运算符"></a>? : 运算符</h1><p>我们已经在前面的章节中讲解了 <strong>条件运算符 ? :</strong>，可以用来替代 <strong>if…else</strong> 语句。它的一般形式如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exp1 ? Exp2 : Exp3;</span><br></pre></td></tr></table></figure><p>其中，Exp1、Exp2 和 Exp3 是表达式。请注意，冒号的使用和位置。</p><p>? 表达式的值是由 Exp1 决定的。如果 Exp1 为真，则计算 Exp2 的值，结果即为整个 ? 表达式的值。如果 Exp1 为假，则计算 Exp3 的值，结果即为整个 ? 表达式的值。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（12）访问修饰符</title>
      <link href="/2018/01/15/CSharp/12CSharp_Encapsulation/"/>
      <url>/2018/01/15/CSharp/12CSharp_Encapsulation/</url>
      
        <content type="html"><![CDATA[<h1 id="C-封装"><a href="#C-封装" class="headerlink" title="C# 封装"></a>C# 封装</h1><p><strong>封装</strong> 被定义为”把一个或多个项目封闭在一个物理的或者逻辑的包中”。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。</p><p>抽象和封装是面向对象程序设计的相关特性。抽象允许相关信息可视化，封装则使开发者<em>实现所需级别的抽象</em>。</p><p>C# 封装根据具体的需要，设置使用者的访问权限，并通过 <strong>访问修饰符</strong> 来实现。</p><p>一个 <strong>访问修饰符</strong> 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：</p><ul><li>public：所有对象都可以访问；</li><li>private：对象本身在对象内部可以访问；</li><li>protected：只有该类对象及其子类对象可以访问</li><li>internal：同一个程序集的对象可以访问；</li><li>protected internal：访问限于当前程序集或派生自包含类的类型。</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/csharp-public.png" alt="img"></p><h2 id="范围比较："><a href="#范围比较：" class="headerlink" title="范围比较："></a>范围比较：</h2><ol><li>Pubilc ：任何公有成员可以被外部的类访问。</li><li>Private ：只有同一个类中的函数可以访问它的私有成员。</li><li>Protected ：该类内部和继承类中可以访问。</li><li>internal : 同一个程序集的对象可以访问。</li><li>Protected internal ：3 和 4 的并集，符合任意一条都可以访问。</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> &lt; <span class="keyword">internal</span>/<span class="keyword">protected</span> &lt; <span class="keyword">protected</span> <span class="keyword">internal</span> &lt; <span class="keyword">public</span></span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>比如说：一个人A为父类，他的儿子B，妻子C，私生子D（注：D不在他家里）</p><p>如果我们给A的事情增加修饰符：</p><ul><li>public事件，地球人都知道，全公开</li><li>protected事件，A，B，D知道（A和他的所有儿子知道，妻子C不知道）</li><li>private事件，只有A知道（隐私？心事？）</li><li>internal事件，A，B，C知道（A家里人都知道，私生子D不知道）</li><li>protected internal事件，A，B，C，D都知道,其它人不知道</li></ul><h1 id="Public-访问修饰符"><a href="#Public-访问修饰符" class="headerlink" title="Public 访问修饰符"></a>Public 访问修饰符</h1><p>Public 访问修饰符允许一个类将其成员变量和成员函数暴露给其他的函数和对象。任何公有成员可以被外部的类访问。</p><p>下面的实例说明了这点：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//成员变量</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> length;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">double</span> width;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;长度： &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;宽度： &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">// Rectangle 结束</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Rectangle r = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            r.length = <span class="number">4.5</span>;</span><br><span class="line">            r.width = <span class="number">3.5</span>;</span><br><span class="line">            r.Display();</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">长度： 4.5</span><br><span class="line">宽度： 3.5</span><br><span class="line">面积： 15.75</span><br></pre></td></tr></table></figure><p>在上面的实例中，成员变量 length 和 width 被声明为 <strong>public</strong>，所以它们可以被函数 Main() 使用 Rectangle 类的实例 <strong>r</strong> 访问。</p><p>成员函数 <em>Display()</em> 和 <em>GetArea()</em> 可以直接访问这些变量。</p><p>成员函数 <em>Display()</em> 也被声明为 <strong>public</strong>，所以它也能被 <em>Main()</em> 使用 Rectangle 类的实例 <strong>r</strong> 访问。</p><h1 id="Private-访问修饰符"><a href="#Private-访问修饰符" class="headerlink" title="Private 访问修饰符"></a>Private 访问修饰符</h1><p>Private 访问修饰符允许一个类将其成员变量和成员函数对其他的函数和对象进行隐藏。只有同一个类中的函数可以访问它的私有成员。即使是类的实例也不能访问它的私有成员。</p><p>下面的实例说明了这点：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//成员变量</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">double</span> length;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">double</span> width;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Acceptdetails</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;请输入长度：&quot;</span>);</span><br><span class="line">            length = Convert.ToDouble(Console.ReadLine());</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;请输入宽度：&quot;</span>);</span><br><span class="line">            width = Convert.ToDouble(Console.ReadLine());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;长度： &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;宽度： &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//end class Rectangle    </span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Rectangle r = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            r.Acceptdetails();</span><br><span class="line">            r.Display();</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">请输入长度：</span><br><span class="line">4.4</span><br><span class="line">请输入宽度：</span><br><span class="line">3.3</span><br><span class="line">长度： 4.4</span><br><span class="line">宽度： 3.3</span><br><span class="line">面积： 14.52</span><br></pre></td></tr></table></figure><p>在上面的实例中，成员变量 length 和 width 被声明为 <strong>private</strong>，所以它们不能被函数 Main() 访问。</p><p>成员函数 <em>AcceptDetails()</em> 和 <em>Display()</em> 可以访问这些变量。</p><p>由于成员函数 <em>AcceptDetails()</em> 和 <em>Display()</em> 被声明为 <strong>public</strong>，所以它们可以被 <em>Main()</em> 使用 Rectangle 类的实例 <strong>r</strong> 访问。</p><h1 id="Protected-访问修饰符"><a href="#Protected-访问修饰符" class="headerlink" title="Protected 访问修饰符"></a>Protected 访问修饰符</h1><p>Protected 访问修饰符允许子类访问它的基类的成员变量和成员函数。这样有助于实现继承。我们将在继承的章节详细讨论这个。更详细地讨论这个。</p><h1 id="Internal-访问修饰符"><a href="#Internal-访问修饰符" class="headerlink" title="Internal 访问修饰符"></a>Internal 访问修饰符</h1><p>Internal 访问说明符允许一个类将其成员变量和成员函数暴露给当前程序中的其他函数和对象。换句话说，带有 internal 访问修饰符的任何成员可以被定义在该成员所定义的应用程序内的任何类或方法访问。</p><p>下面的实例说明了这点：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//成员变量</span></span><br><span class="line">        <span class="keyword">internal</span> <span class="built_in">double</span> length;</span><br><span class="line">        <span class="keyword">internal</span> <span class="built_in">double</span> width;</span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;长度： &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;宽度： &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//end class Rectangle    </span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Rectangle r = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            r.length = <span class="number">4.5</span>;</span><br><span class="line">            r.width = <span class="number">3.5</span>;</span><br><span class="line">            r.Display();</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">长度： 4.5</span><br><span class="line">宽度： 3.5</span><br><span class="line">面积： 15.75</span><br></pre></td></tr></table></figure><p>在上面的实例中，请注意成员函数 <em>GetArea()</em> 声明的时候不带有任何访问修饰符。如果没有指定访问修饰符，则使用类成员的默认访问修饰符，即为 <strong>private</strong>。</p><h1 id="Protected-Internal-访问修饰符"><a href="#Protected-Internal-访问修饰符" class="headerlink" title="Protected Internal 访问修饰符"></a>Protected Internal 访问修饰符</h1><p>Protected Internal 访问修饰符允许在本类,派生类或者包含该类的程序集中访问。这也被用于实现继承。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（11）循环</title>
      <link href="/2018/01/14/CSharp/11CSharp_Loop/"/>
      <url>/2018/01/14/CSharp/11CSharp_Loop/</url>
      
        <content type="html"><![CDATA[<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><p>C# 提供了以下几种循环类型。</p><table><thead><tr><th align="left">循环类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">while 循环</td><td align="left">当给定条件为真时，重复语句或语句组。它会在执行循环主体之前测试条件。</td></tr><tr><td align="left">for&#x2F;foreach 循环</td><td align="left">多次执行一个语句序列，简化管理循环变量的代码。</td></tr><tr><td align="left">do…while 循环</td><td align="left">除了它是在循环主体结尾测试条件外，其他与 while 语句类似。</td></tr><tr><td align="left">嵌套循环</td><td align="left">您可以在 while、for 或 do..while 循环内使用一个或多个循环。</td></tr></tbody></table><hr><h1 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h1><p>只要给定的条件为真，C# 中的 <strong>while</strong> 循环语句会重复执行一个目标语句。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>while</strong> 循环的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(condition)</span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里，<strong>statement(s)</strong> 可以是一个单独的语句，也可以是几个语句组成的代码块。<strong>condition</strong> 可以是任意的表达式，当为任意非零值时都为真。当条件为真时执行循环。</p><p>当条件为假时，程序流将继续执行紧接着循环的下一条语句。</p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/cpp_while_loop.png" alt="C# 中的 while 循环"></p><p>在这里，<em>while</em> 循环的关键点是循环可能一次都不会执行。当条件被测试且结果为假时，会跳过循环主体，直接执行紧接着 while 循环的下一条语句。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* while 循环执行 */</span></span><br><span class="line">            <span class="keyword">while</span> (a &lt; <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">                a++;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a 的值： <span class="number">10</span></span><br><span class="line">a 的值： <span class="number">11</span></span><br><span class="line">a 的值： <span class="number">12</span></span><br><span class="line">a 的值： <span class="number">13</span></span><br><span class="line">a 的值： <span class="number">14</span></span><br><span class="line">a 的值： <span class="number">15</span></span><br><span class="line">a 的值： <span class="number">16</span></span><br><span class="line">a 的值： <span class="number">17</span></span><br><span class="line">a 的值： <span class="number">18</span></span><br><span class="line">a 的值： <span class="number">19</span></span><br></pre></td></tr></table></figure><h1 id="for-foreach-循环"><a href="#for-foreach-循环" class="headerlink" title="for&#x2F;foreach 循环"></a>for&#x2F;foreach 循环</h1><p>一个 <strong>for</strong> 循环是一个允许您编写一个执行特定次数的循环的重复控制结构。</p><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>for</strong> 循环的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="keyword">init</span>; condition; increment )</span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是 for 循环的控制流：</p><ol><li><strong>init</strong> 会首先被执行，且只会执行一次。这一步允许您声明并初始化任何循环控制变量。您也可以不在这里写任何语句，只要有一个分号出现即可。</li><li>接下来，会判断 <strong>condition</strong>。如果为真，则执行循环主体。如果为假，则不执行循环主体，且控制流会跳转到紧接着 for 循环的下一条语句。</li><li>在执行完 for 循环主体后，控制流会跳回上面的 <strong>increment</strong> 语句。该语句允许您更新循环控制变量。该语句可以留空，只要在条件后有一个分号出现即可。</li><li>条件再次被判断。如果为真，则执行循环，这个过程会不断重复（循环主体，然后增加步值，再然后重新判断条件）。在条件变为假时，for 循环终止。</li></ol><h2 id="流程图-1"><a href="#流程图-1" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/cpp_for_loop.png" alt="C# 中的 for 循环"></p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* for 循环执行 */</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> a = <span class="number">10</span>; a &lt; <span class="number">20</span>; a = a + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a 的值： <span class="number">10</span></span><br><span class="line">a 的值： <span class="number">11</span></span><br><span class="line">a 的值： <span class="number">12</span></span><br><span class="line">a 的值： <span class="number">13</span></span><br><span class="line">a 的值： <span class="number">14</span></span><br><span class="line">a 的值： <span class="number">15</span></span><br><span class="line">a 的值： <span class="number">16</span></span><br><span class="line">a 的值： <span class="number">17</span></span><br><span class="line">a 的值： <span class="number">18</span></span><br><span class="line">a 的值： <span class="number">19</span></span><br></pre></td></tr></table></figure><h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h2><p>C# 也支持 foreach 循环，使用foreach可以迭代数组或者一个集合对象。</p><p>以下实例有三个部分：</p><ul><li>通过 foreach 循环输出整型数组中的元素。</li><li>通过 for 循环输出整型数组中的元素。</li><li>foreach 循环设置数组元素的计算器。</li></ul><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">ForEachTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span>[] fibarray = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span> &#125;;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">int</span> element <span class="keyword">in</span> fibarray)</span><br><span class="line">        &#123;</span><br><span class="line">            System.Console.WriteLine(element);</span><br><span class="line">        &#125;</span><br><span class="line">        System.Console.WriteLine();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 类似 foreach 循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; fibarray.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.Console.WriteLine(fibarray[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.Console.WriteLine();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置集合中元素的计算器</span></span><br><span class="line">        <span class="built_in">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="built_in">int</span> element <span class="keyword">in</span> fibarray)</span><br><span class="line">        &#123;</span><br><span class="line">            count += <span class="number">1</span>;</span><br><span class="line">            System.Console.WriteLine(<span class="string">&quot;Element #&#123;0&#125;: &#123;1&#125;&quot;</span>, count, element);</span><br><span class="line">        &#125;</span><br><span class="line">        System.Console.WriteLine(<span class="string">&quot;Number of elements in the array: &#123;0&#125;&quot;</span>, count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"></span><br><span class="line">Element <span class="meta">#1: 0</span></span><br><span class="line">Element <span class="meta">#2: 1</span></span><br><span class="line">Element <span class="meta">#3: 1</span></span><br><span class="line">Element <span class="meta">#4: 2</span></span><br><span class="line">Element <span class="meta">#5: 3</span></span><br><span class="line">Element <span class="meta">#6: 5</span></span><br><span class="line">Element <span class="meta">#7: 8</span></span><br><span class="line">Element <span class="meta">#8: 13</span></span><br><span class="line">Number of elements <span class="keyword">in</span> the array: <span class="number">8</span></span><br></pre></td></tr></table></figure><p>更多 foreach 内容可以参考：<a href="https://www.runoob.com/w3cnote/csharp-foreach.html">C# 中 foreach 遍历的用法</a></p><h1 id="do…while-循环"><a href="#do…while-循环" class="headerlink" title="do…while 循环"></a>do…while 循环</h1><p>不像 <strong>for</strong> 和 <strong>while</strong> 循环，它们是在循环头部测试循环条件。<strong>do…while</strong> 循环是在循环的尾部检查它的条件。</p><p><strong>do…while</strong> 循环与 while 循环类似，但是 do…while 循环会确保至少执行一次循环。</p><h2 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>do…while</strong> 循环的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">while</span>( condition );</span><br></pre></td></tr></table></figure><p>请注意，条件表达式出现在循环的尾部，所以循环中的 statement(s) 会在条件被测试之前至少执行一次。</p><p>如果条件为真，控制流会跳转回上面的 do，然后重新执行循环中的 statement(s)。这个过程会不断重复，直到给定条件变为假为止。</p><h2 id="流程图-2"><a href="#流程图-2" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/cpp_do_while_loop.jpg" alt="C# 中的 do...while 循环"></p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* do 循环执行 */</span></span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">                a = a + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">while</span> (a &lt; <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a 的值： <span class="number">10</span></span><br><span class="line">a 的值： <span class="number">11</span></span><br><span class="line">a 的值： <span class="number">12</span></span><br><span class="line">a 的值： <span class="number">13</span></span><br><span class="line">a 的值： <span class="number">14</span></span><br><span class="line">a 的值： <span class="number">15</span></span><br><span class="line">a 的值： <span class="number">16</span></span><br><span class="line">a 的值： <span class="number">17</span></span><br><span class="line">a 的值： <span class="number">18</span></span><br><span class="line">a 的值： <span class="number">19</span></span><br></pre></td></tr></table></figure><h1 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h1><p><a href="https://www.runoob.com/csharp/csharp-loops.html"><img src="https://www.runoob.com/images/up.gif" alt="C# 循环"> C# 循环</a></p><p>C# 允许在一个循环内使用另一个循环，下面演示几个实例来说明这个概念。</p><h2 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>嵌套 for 循环</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for ( init; condition; increment )</span><br><span class="line">&#123;</span><br><span class="line">   for ( init; condition; increment )</span><br><span class="line">   &#123;</span><br><span class="line">      statement(s);</span><br><span class="line">   &#125;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C# 中 <strong>嵌套 while 循环</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">while(condition)</span><br><span class="line">&#123;</span><br><span class="line">   while(condition)</span><br><span class="line">   &#123;</span><br><span class="line">      statement(s);</span><br><span class="line">   &#125;</span><br><span class="line">   statement(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>C# 中 <strong>嵌套 do…while 循环</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">do</span><br><span class="line">&#123;</span><br><span class="line">   statement(s);</span><br><span class="line">   do</span><br><span class="line">   &#123;</span><br><span class="line">      statement(s);</span><br><span class="line">   &#125;while( condition );</span><br><span class="line"></span><br><span class="line">&#125;while( condition );</span><br></pre></td></tr></table></figure><p>关于嵌套循环有一点值得注意，您可以在任何类型的循环内嵌套其他任何类型的循环。比如，一个 for 循环可以嵌套在一个 while 循环内，反之亦然。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><p>下面的程序使用了一个嵌套的 for 循环来查找 2 到 100 中的质数：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">         <span class="built_in">int</span> i, j;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">2</span>; j &lt;= (i / j); j++)</span><br><span class="line">               <span class="keyword">if</span> ((i % j) == <span class="number">0</span>) <span class="keyword">break</span>; <span class="comment">// 如果找到，则不是质数</span></span><br><span class="line">            <span class="keyword">if</span> (j &gt; (i / j))</span><br><span class="line">               Console.WriteLine(<span class="string">&quot;&#123;0&#125; 是质数&quot;</span>, i);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">2 是质数</span><br><span class="line">3 是质数</span><br><span class="line">5 是质数</span><br><span class="line">7 是质数</span><br><span class="line">11 是质数</span><br><span class="line">13 是质数</span><br><span class="line">17 是质数</span><br><span class="line">19 是质数</span><br><span class="line">23 是质数</span><br><span class="line">29 是质数</span><br><span class="line">31 是质数</span><br><span class="line">37 是质数</span><br><span class="line">41 是质数</span><br><span class="line">43 是质数</span><br><span class="line">47 是质数</span><br><span class="line">53 是质数</span><br><span class="line">59 是质数</span><br><span class="line">61 是质数</span><br><span class="line">67 是质数</span><br><span class="line">71 是质数</span><br><span class="line">73 是质数</span><br><span class="line">79 是质数</span><br><span class="line">83 是质数</span><br><span class="line">89 是质数</span><br><span class="line">97 是质数</span><br></pre></td></tr></table></figure><p>1000 以内的质数有：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/A8825705-153F-44DC-9892-548FC5231BD0.jpg" alt="img"></p><h1 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h1><p>循环控制语句更改执行的正常序列。当执行离开一个范围时，所有在该范围中创建的自动对象都会被销毁。</p><p>C# 提供了下列的控制语句。点击链接查看每个语句的细节。</p><table><thead><tr><th align="left">控制语句</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">break 语句</td><td align="left">终止 <strong>loop</strong> 或 <strong>switch</strong> 语句，程序流将继续执行紧接着 loop 或 switch 的下一条语句。</td></tr><tr><td align="left">continue 语句</td><td align="left">引起循环跳过主体的剩余部分，立即重新开始测试条件。</td></tr></tbody></table><h1 id="break-语句"><a href="#break-语句" class="headerlink" title="break 语句"></a>break 语句</h1><p><a href="https://www.runoob.com/csharp/csharp-loops.html"><img src="https://www.runoob.com/images/up.gif" alt="C# 循环"> C# 循环</a></p><p>C# 中 <strong>break</strong> 语句有以下两种用法：</p><ol><li>当 <strong>break</strong> 语句出现在一个循环内时，循环会立即终止，且程序流将继续执行紧接着循环的下一条语句。</li><li>它可用于终止 <strong>switch</strong> 语句中的一个 case。</li></ol><p>如果您使用的是嵌套循环（即一个循环内嵌套另一个循环），break 语句会停止执行最内层的循环，然后开始执行该块之后的下一行代码。</p><h2 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>break</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">break;</span><br></pre></td></tr></table></figure><h2 id="流程图-3"><a href="#流程图-3" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/cpp_break_statement.jpg" alt="C# 中的 break 语句"></p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* while 循环执行 */</span></span><br><span class="line">            <span class="keyword">while</span> (a &lt; <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">                a++;</span><br><span class="line">                <span class="keyword">if</span> (a &gt; <span class="number">15</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* 使用 break 语句终止 loop */</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a 的值： 10</span><br><span class="line">a 的值： 11</span><br><span class="line">a 的值： 12</span><br><span class="line">a 的值： 13</span><br><span class="line">a 的值： 14</span><br><span class="line">a 的值： 15</span><br></pre></td></tr></table></figure><h1 id="continue-语句"><a href="#continue-语句" class="headerlink" title="continue 语句"></a>continue 语句</h1><p>C# 中的 <strong>continue</strong> 语句有点像 <strong>break</strong> 语句。但它不是强迫终止，continue 会跳过当前循环中的代码，强迫开始下一次循环。</p><p>对于 <strong>for</strong> 循环，<strong>continue</strong> 语句会导致执行条件测试和循环增量部分。对于 <strong>while</strong> 和 <strong>do…while</strong> 循环，<strong>continue</strong> 语句会导致程序控制回到条件测试上。</p><h2 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h2><p>C# 中 <strong>continue</strong> 语句的语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">continue;</span><br></pre></td></tr></table></figure><h2 id="流程图-4"><a href="#流程图-4" class="headerlink" title="流程图"></a>流程图</h2><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/cpp_continue_statement.jpg" alt="C# 中的 continue 语句"></p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* 局部变量定义 */</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* do 循环执行 */</span></span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a == <span class="number">15</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">/* 跳过迭代 */</span></span><br><span class="line">                    a = a + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line">                a++;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">while</span> (a &lt; <span class="number">20</span>);</span><br><span class="line"> </span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a 的值： 10</span><br><span class="line">a 的值： 11</span><br><span class="line">a 的值： 12</span><br><span class="line">a 的值： 13</span><br><span class="line">a 的值： 14</span><br><span class="line">a 的值： 16</span><br><span class="line">a 的值： 17</span><br><span class="line">a 的值： 18</span><br><span class="line">a 的值： 19</span><br></pre></td></tr></table></figure><h1 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h1><p>如果条件永远不为假，则循环将变成无限循环。<strong>for</strong> 循环在传统意义上可用于实现无限循环。由于构成循环的三个表达式中任何一个都不是必需的，您可以将某些条件表达式留空来构成一个无限循环。</p><h2 id="实例-7"><a href="#实例-7" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Loops</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (; ; )</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Hey! I am Trapped&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当条件表达式不存在时，它被假设为真。您也可以设置一个初始值和增量表达式，但是一般情况下，程序员偏向于使用 for(;;) 结构来表示一个无限循环。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#练习（2）</title>
      <link href="/2018/01/12/CSharp/09CSharp_Z02/"/>
      <url>/2018/01/12/CSharp/09CSharp_Z02/</url>
      
        <content type="html"><![CDATA[<h1 id="使用场景："><a href="#使用场景：" class="headerlink" title="&#x3D;&#x3D; 使用场景："></a>&#x3D;&#x3D; 使用场景：</h1><ol><li>判断一个数是否偶数（奇数）：<br>这个数和2取余，如果余数为0，证明是偶数<br> x % 2 &#x3D;&#x3D; 0 </li><li>判断是否是奇数： x % 2 !&#x3D; 0</li><li>判断一个数 n 是否是另外一个数 m 的倍数<br>即：n % m &#x3D;&#x3D; 0<br>如： 一个数是否是8的倍数 8   16  24  40<br>n % 8 &#x3D;&#x3D; 0 </li><li>判断一个数 n 是否能被 18 整除<br>n % 18 &#x3D;&#x3D; 0</li></ol><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p> 从键盘输入一个数，判断这个数是否大于10，是否大于等于10, 是否是偶数。<br>  &#x2F;&#x2F;1.准备一个数<br>  &#x2F;&#x2F;2.判断<br>  &#x2F;&#x2F;3.结果</p><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符 &#x3D;"></a>赋值运算符 &#x3D;</h2><p>  赋值运算，一个数字常用赋值运算符：<code>=</code>: 将等号右侧的内容赋值给等号左侧</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>  i =  <span class="number">1</span> ; <span class="comment">//定义变量i，值为1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//完整形式: i =  i + 10 </span></span><br><span class="line"><span class="comment">//先计算 i+10 的结果，再将赋值给变量i</span></span><br><span class="line"><span class="comment">// i 的值就变成了11</span></span><br><span class="line">i += <span class="number">10</span> ;  <span class="comment">//11</span></span><br></pre></td></tr></table></figure><h3 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h3><p>   定义一个变量，变量名为 i ,值为10<br>   然后计算<br>   1）  i +&#x3D; 10 ;  的结果</p><ol><li>i -&#x3D; 10 ;  的结果</li><li>i *&#x3D; 10 ;  的结果   </li><li>i &#x2F;&#x3D; 10 ;  的结果   </li><li>i %&#x3D; 10 ;  的结果</li></ol><p>   强调：+&#x3D;  -&#x3D;  *&#x3D;  &#x2F;&#x3D;等赋值运算符执行完之后，它们所操作的变量的值会改变. </p><h2 id="逻辑运算符-！"><a href="#逻辑运算符-！" class="headerlink" title="逻辑运算符 &amp;&amp;  ||  ！"></a>逻辑运算符 &amp;&amp;  ||  ！</h2><p>   1）布尔值： true  | false</p><p>   2）常用的逻辑运算符：</p><pre><code>&amp;&amp; ： 逻辑与 “并且”     || ： 逻辑或  “或”！ ： 逻辑非 “取反”</code></pre><p>   3） 逻辑运算符用下载连接多个比较表达式<br>       运算结果一般是放在一个bool类型的变量中<br>   4） 逻辑运算符中的逻辑与和逻辑或存在<br>       一种短路运算</p><p>   5） 关于短路运算：</p><p>   逻辑与连接多个式子时，会从左往右依次执行每一个式子，在这过程中，只要有一个为假，后面的其它式子根本不会执行，整个式子：false；只有所有式子都被执行，且都为真时，整个式子才为真。</p><p>   逻辑或连接多个式子时，也是依次执行每一个式子，在这过程中，只要有一个为真，后面的式子不会再执行，整个式将返回：true也就是说，面其它的式子即使全部为假，整个式子依然还是真的。</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  <span class="built_in">int</span>  i = <span class="number">1</span>; </span><br><span class="line">  <span class="built_in">int</span>  j = <span class="number">2</span>; </span><br><span class="line">  </span><br><span class="line"> <span class="comment">// bool b1 =  i + j &gt;= 3  ||  ++j == 2  ; </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  bool b2 =  i + j &gt;= 3  &amp;&amp;  j++ == 2 ; </span></span><br></pre></td></tr></table></figure><h3 id="练习：-1"><a href="#练习：-1" class="headerlink" title="练习："></a>练习：</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LianXI_Day3</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 键盘输入一个数，判断这个数是否是6的倍数。   </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">LianXi1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;请输入一个数&quot;</span>);</span><br><span class="line">            <span class="built_in">string</span> str1;</span><br><span class="line">            str1= Console.ReadLine();</span><br><span class="line">            <span class="built_in">int</span> num1 = <span class="built_in">int</span>.Parse(str1);</span><br><span class="line">            <span class="built_in">bool</span> r1;</span><br><span class="line">            Console.WriteLine(r1 = num1 % <span class="number">16</span> == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三元运算符（条件运算符）"><a href="#三元运算符（条件运算符）" class="headerlink" title="三元运算符（条件运算符）"></a>三元运算符（条件运算符）</h2><p> <code>基本语法：    条件 ？ 结果处1  ： 结果处2   ; </code></p><p> 1） 整个条件运算符返回时，返回值类型应该如何确定 ？是float ? double? string? bool?<br> 返回值要么是第1处结果，要么第2处结果，所以返回值是什么类型是根据     第1处内容的类型和第2处内容的类型<br> 2）三元运算符，其实是 if 语句的一种简化形式。表述的含义是：如果满足条件，执行一种操作；如果不满足条件，执行另外一种操作。</p><h2 id="位运算符-二进制"><a href="#位运算符-二进制" class="headerlink" title="位运算符 : 二进制"></a>位运算符 : 二进制</h2><table><thead><tr><th align="center">运算符</th><th align="center">描述</th><th align="center">实例：假设变量 A 的值为 60，变量 B 的值为 13</th></tr></thead><tbody><tr><td align="center">&amp;</td><td align="center">如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。</td><td align="center">(A &amp; B) 将得到 12，即为 0000 1100</td></tr><tr><td align="center"><code>&#124;</code></td><td align="center">如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。</td><td align="center">(A <code>&#124;</code> B) 将得到 61，即为 0011 1101</td></tr><tr><td align="center">^</td><td align="center">如果存在于其中一个操作数中但不同时存在于两个操作数中，二进制异或运算符复制一位到结果中。</td><td align="center">(A ^ B) 将得到 49，即为 0011 0001</td></tr><tr><td align="center">~</td><td align="center">按位取反运算符是一元运算符，具有”翻转”位效果，即0变成1，1变成0，包括符号位。</td><td align="center">(~A ) 将得到 -61，即为 1100 0011，一个有符号二进制数的补码形式。</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">二进制左移运算符。左操作数的值向左移动右操作数指定的位数。</td><td align="center">A &lt;&lt; 2 将得到 240，即为 1111 0000</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">二进制右移运算符。左操作数的值向右移动右操作数指定的位数。</td><td align="center">A &gt;&gt; 2 将得到 15，即为 0000 1111</td></tr></tbody></table><h2 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h2><p>  算术运算符：<br>      ++  –  &#x3D;&#x3D;  +  -  *  &#x2F;   %  </p><ol><li><p>++或–：<br>放在变量的前面时,要先进行+1，然后再执行其它运算;<br>int i &#x3D; 1 ;<br>Console.WriteLine( ++i );</p><p>放在变量的后面时，要进行其它的运行,然后再<br>为变量加1.<br>int i &#x3D; 1 ;<br>Console.WriteLine( i++ );</p><p>++或–放在已经赋值变量的前面或后面</p></li><li><p>&#x3D;&#x3D; 与  &#x3D;  区别？<br>1） &#x3D;&#x3D; 是比较运算符，是布尔值<br>用来比较两个的值是否是相等的<br>相等返回true,否则返回false</p><ol><li><p>&#x3D;  是基础的赋值运算符，</p><p>int   number &#x3D;  10  ;<br>将等号右侧的10赋值给等号左侧的变量 number</p></li></ol></li><li><p>% 与 &#x3D;&#x3D;<br>判断奇偶性，整除，是倍数…<br> m % n &#x3D;&#x3D; 0 : 整除，m是n的倍数</p></li><li><p>&#x3D;&#x3D; 与 !&#x3D;</p></li><li><p>短路运算  &amp;&amp;  || </p></li><li><p>三元运算符<br> ： ？<br>   其实是分支if结构简单化</p></li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（9）运算符</title>
      <link href="/2018/01/12/CSharp/09CSharp_Operator/"/>
      <url>/2018/01/12/CSharp/09CSharp_Operator/</url>
      
        <content type="html"><![CDATA[<h1 id="C-运算符"><a href="#C-运算符" class="headerlink" title="C# 运算符"></a>C# 运算符</h1><p>运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。C# 有丰富的内置运算符，分类如下：</p><ul><li>算术运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>位运算符</li><li>赋值运算符</li><li>其他运算符</li></ul><p>本教程将逐一讲解算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符及其他运算符。</p><hr><h1 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h1><p>下表显示了 C# 支持的所有算术运算符。假设变量 <strong>A</strong> 的值为 10，变量 <strong>B</strong> 的值为 20，则：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">把两个操作数相加</td><td align="left">A + B 将得到 30</td></tr><tr><td align="left">-</td><td align="left">从第一个操作数中减去第二个操作数</td><td align="left">A - B 将得到 -10</td></tr><tr><td align="left">*</td><td align="left">把两个操作数相乘</td><td align="left">A * B 将得到 200</td></tr><tr><td align="left">&#x2F;</td><td align="left">分子除以分母</td><td align="left">B &#x2F; A 将得到 2</td></tr><tr><td align="left">%</td><td align="left">取模运算符，整除后的余数</td><td align="left">B % A 将得到 0</td></tr><tr><td align="left">++</td><td align="left">自增运算符，整数值增加 1</td><td align="left">A++ 将得到 11</td></tr><tr><td align="left">--</td><td align="left">自减运算符，整数值减少 1</td><td align="left">A-- 将得到 9</td></tr></tbody></table><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorsAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">21</span>;</span><br><span class="line">            <span class="built_in">int</span> b = <span class="number">10</span>;</span><br><span class="line">            <span class="built_in">int</span> c;</span><br><span class="line"></span><br><span class="line">            c = a + b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 1 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            c = a - b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 2 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            c = a * b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 3 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            c = a / b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 4 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            c = a % b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 5 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ++a 先进行自增运算再赋值</span></span><br><span class="line">            c = ++a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 6 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 此时 a 的值为 22</span></span><br><span class="line">            <span class="comment">// --a 先进行自减运算再赋值</span></span><br><span class="line">            c = --a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 7 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Line 1 - c 的值是 31</span><br><span class="line">Line 2 - c 的值是 11</span><br><span class="line">Line 3 - c 的值是 210</span><br><span class="line">Line 4 - c 的值是 2</span><br><span class="line">Line 5 - c 的值是 1</span><br><span class="line">Line 6 - c 的值是 22</span><br><span class="line">Line 7 - c 的值是 21</span><br></pre></td></tr></table></figure><ul><li><code>c = a++</code>: 先将 a 赋值给 c，再对 a 进行自增运算。</li><li><code>c = ++a</code>: 先将 a 进行自增运算，再将 a 赋值给 c 。</li><li><code>c = a--</code>: 先将 a 赋值给 c，再对 a 进行自减运算。</li><li><code>c = --a</code>: 先将 a 进行自减运算，再将 a 赋值给 c 。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorsAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">int</span> b;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// a++ 先赋值再进行自增运算</span></span><br><span class="line">            b = a++;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b = &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// ++a 先进行自增运算再赋值</span></span><br><span class="line">            a = <span class="number">1</span>; <span class="comment">// 重新初始化 a</span></span><br><span class="line">            b = ++a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b = &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// a-- 先赋值再进行自减运算</span></span><br><span class="line">            a = <span class="number">1</span>;  <span class="comment">// 重新初始化 a</span></span><br><span class="line">            b= a--;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b = &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// --a 先进行自减运算再赋值</span></span><br><span class="line">            a = <span class="number">1</span>;  <span class="comment">// 重新初始化 a</span></span><br><span class="line">            b= --a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b = &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行以上程序，输出结果为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line">a = <span class="number">2</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">a = <span class="number">0</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line">a = <span class="number">0</span></span><br><span class="line">b = <span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><p>下表显示了 C# 支持的所有关系运算符。假设变量 <strong>A</strong> 的值为 10，变量 <strong>B</strong> 的值为 20，则：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;&#x3D;</td><td align="left">检查两个操作数的值是否相等，如果相等则条件为真。</td><td align="left">(A &#x3D;&#x3D; B) 不为真。</td></tr><tr><td align="left">!&#x3D;</td><td align="left">检查两个操作数的值是否相等，如果不相等则条件为真。</td><td align="left">(A !&#x3D; B) 为真。</td></tr><tr><td align="left">&gt;</td><td align="left">检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td><td align="left">(A &gt; B) 不为真。</td></tr><tr><td align="left">&lt;</td><td align="left">检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td><td align="left">(A &lt; B) 为真。</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td><td align="left">(A &gt;&#x3D; B) 不为真。</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。</td><td align="left">(A &lt;&#x3D; B) 为真。</td></tr></tbody></table><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>请看下面的实例，了解 C# 中所有可用的关系运算符：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="built_in">int</span> a = <span class="number">21</span>;</span><br><span class="line">      <span class="built_in">int</span> b = <span class="number">10</span>;</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">if</span> (a == b)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 1 - a 等于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 1 - a 不等于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 2 - a 小于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 2 - a 不小于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 3 - a 大于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 3 - a 不大于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/* 改变 a 和 b 的值 */</span></span><br><span class="line">      a = <span class="number">5</span>;</span><br><span class="line">      b = <span class="number">20</span>;</span><br><span class="line">      <span class="keyword">if</span> (a &lt;= b)</span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Line 4 - a 小于或等于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (b &gt;= a)</span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Line 5 - b 大于或等于 a&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Line 1 - a 不等于 b</span><br><span class="line">Line 2 - a 不小于 b</span><br><span class="line">Line 3 - a 大于 b</span><br><span class="line">Line 4 - a 小于或等于 b</span><br><span class="line">Line 5 - b 大于或等于 a</span><br></pre></td></tr></table></figure><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><p>下表显示了 C# 支持的所有逻辑运算符。假设变量 <strong>A</strong> 为布尔值 true，变量 <strong>B</strong> 为布尔值 false，则：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">称为逻辑与运算符。如果两个操作数都非零，则条件为真。</td><td align="left">(A &amp;&amp; B) 为假。</td></tr><tr><td align="left">||</td><td align="left">称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td><td align="left">(A || B) 为真。</td></tr><tr><td align="left">!</td><td align="left">称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td><td align="left">!(A &amp;&amp; B) 为真。</td></tr></tbody></table><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>请看下面的实例，了解 C# 中所有可用的逻辑运算符：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="built_in">int</span> a = <span class="number">21</span>;</span><br><span class="line">      <span class="built_in">int</span> b = <span class="number">10</span>;</span><br><span class="line">     </span><br><span class="line">      <span class="keyword">if</span> (a == b)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 1 - a 等于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 1 - a 不等于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 2 - a 小于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 2 - a 不小于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 3 - a 大于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(<span class="string">&quot;Line 3 - a 不大于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/* 改变 a 和 b 的值 */</span></span><br><span class="line">      a = <span class="number">5</span>;</span><br><span class="line">      b = <span class="number">20</span>;</span><br><span class="line">      <span class="keyword">if</span> (a &lt;= b)</span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Line 4 - a 小于或等于 b&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (b &gt;= a)</span><br><span class="line">      &#123;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Line 5 - b 大于或等于 a&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Line 1 - 条件为真</span><br><span class="line">Line 2 - 条件为真</span><br><span class="line">Line 3 - 条件不为真</span><br><span class="line">Line 4 - 条件为真</span><br></pre></td></tr></table></figure><h2 id="短路运算"><a href="#短路运算" class="headerlink" title="短路运算"></a>短路运算</h2><p>逻辑与连接多个式子时，会从左往右依次执行每一个式子，在这过程中，只要有一个为假，后面的其它式子根本不会执行，整个式子：false；只有所有式子都被执行，且都为真时，整个式子才为真。</p><p>逻辑或连接多个式子时，也是依次执行每一个式子，在这过程中，只要有一个为真，后面的式子不会再执行，整个式将返回：true也就是说，面其它的式子即使全部为假，整个式子依然还是真的。</p><h2 id="与，或，异或。"><a href="#与，或，异或。" class="headerlink" title="与，或，异或。"></a>与，或，异或。</h2><p><strong>&amp;，|，^</strong> 除了用于位运算，还可以用于逻辑运算，分别对应与，或，异或。</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="^ 运算符"></a><code>^ </code>运算符</h3><p>针对整型类型和 bool 预定义了二元 ^ 运算符。<br>对于整型类型，^ 会计算其操作数的按位异或。<br>对于 bool 操作数，^ 计算其操作数的逻辑异或；即，当且仅当其一个操作数为 true 时，结果才为 true。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="literal">true</span> ^ <span class="literal">false</span>);  <span class="comment">// 返回 true</span></span><br><span class="line">Console.WriteLine(<span class="literal">false</span> ^ <span class="literal">false</span>);  <span class="comment">// 返回 false</span></span><br><span class="line">Console.WriteLine(<span class="literal">true</span> ^ <span class="literal">true</span>);  <span class="comment">// 返回 false</span></span><br></pre></td></tr></table></figure><h3 id="运算符-1"><a href="#运算符-1" class="headerlink" title="| 运算符"></a><code>| </code>运算符</h3><p>针对整型类型和 bool 预定义了二元 | 运算符。<br>对于整型类型，<code>| </code>会计算其操作数的按位 OR。<br> 对于 bool 操作数，<code>| </code>会计算其操作数的逻辑 OR；即，当且仅当其两个操作数皆为 false 时，结果才为 false。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="literal">true</span> | <span class="literal">false</span>);  <span class="comment">// 返回 true</span></span><br><span class="line">Console.WriteLine(<span class="literal">false</span> | <span class="literal">false</span>); <span class="comment">// 返回 false</span></span><br></pre></td></tr></table></figure><h3 id="运算符-2"><a href="#运算符-2" class="headerlink" title="&amp; 运算符"></a><code>&amp; </code>运算符</h3><p>为整型类型和 bool 预定义了二元 &amp; 运算符。<br>对于整型类型，&amp; 计算其操作数的逻辑按位 AND。<br>对于 bool 操作数，&amp; 计算其操作数的逻辑 AND；即，当且仅当其两个操作数皆为 true 时，结果才为 true。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="literal">true</span> &amp; <span class="literal">false</span>);  <span class="comment">// 返回 false</span></span><br><span class="line">Console.WriteLine(<span class="literal">true</span> &amp; <span class="literal">true</span>);   <span class="comment">// 返回 true</span></span><br></pre></td></tr></table></figure><p>其中&amp;，|的运算结果与&amp;&amp;，||完全相同，但&amp;&amp;和||的性能更好。因为&amp;&amp;和||都是检查第一个操作数的值，如果已经能判断结果，就根本不处理第二个操作数。</p><p>比如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> a = <span class="literal">true</span>;               </span><br><span class="line"><span class="built_in">bool</span> b = <span class="literal">false</span>;              </span><br><span class="line"><span class="built_in">bool</span> c = a || b;</span><br></pre></td></tr></table></figure><p>检查第一个操作数a时已经得出c为true，就不用再处理第二个操作数b了。</p><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><p>位运算符作用于位，并逐位执行操作。&amp;、 | 和 ^ 的真值表如下所示：</p><table><thead><tr><th align="left">p</th><th align="left">q</th><th align="left">p &amp; q</th><th align="left">p | q</th><th align="left">p ^ q</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>假设如果 A &#x3D; 60，且 B &#x3D; 13，现在以二进制格式表示，它们如下所示：</p><p>A &#x3D; 0011 1100</p><p>B &#x3D; 0000 1101</p><p>-—————-</p><p>A&amp;B &#x3D; 0000 1100</p><p>A|B &#x3D; 0011 1101</p><p>A^B &#x3D; 0011 0001</p><p>~A &#x3D; 1100 0011</p><p>下表列出了 C# 支持的位运算符。假设变量 <strong>A</strong> 的值为 60，变量 <strong>B</strong> 的值为 13，则：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。</td><td align="left">(A &amp; B) 将得到 12，即为 0000 1100</td></tr><tr><td align="left">|</td><td align="left">如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。</td><td align="left">(A | B) 将得到 61，即为 0011 1101</td></tr><tr><td align="left">^</td><td align="left">如果存在于其中一个操作数中但不同时存在于两个操作数中，二进制异或运算符复制一位到结果中。</td><td align="left">(A ^ B) 将得到 49，即为 0011 0001</td></tr><tr><td align="left">~</td><td align="left">按位取反运算符是一元运算符，具有”翻转”位效果，即0变成1，1变成0，包括符号位。</td><td align="left">(~A ) 将得到 -61，即为 1100 0011，一个有符号二进制数的补码形式。</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">二进制左移运算符。左操作数的值向左移动右操作数指定的位数。</td><td align="left">A &lt;&lt; 2 将得到 240，即为 1111 0000</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">二进制右移运算符。左操作数的值向右移动右操作数指定的位数。</td><td align="left">A &gt;&gt; 2 将得到 15，即为 0000 1111</td></tr></tbody></table><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p>请看下面的实例，了解 C# 中所有可用的位运算符：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorsAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">60</span>;            <span class="comment">/* 60 = 0011 1100 */</span>  </span><br><span class="line">            <span class="built_in">int</span> b = <span class="number">13</span>;            <span class="comment">/* 13 = 0000 1101 */</span></span><br><span class="line">            <span class="built_in">int</span> c = <span class="number">0</span>;          </span><br><span class="line"></span><br><span class="line">             c = a &amp; b;           <span class="comment">/* 12 = 0000 1100 */</span></span><br><span class="line">             Console.WriteLine(<span class="string">&quot;Line 1 - c 的值是 &#123;0&#125;&quot;</span>, c );</span><br><span class="line"></span><br><span class="line">             c = a | b;           <span class="comment">/* 61 = 0011 1101 */</span></span><br><span class="line">             Console.WriteLine(<span class="string">&quot;Line 2 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">             c = a ^ b;           <span class="comment">/* 49 = 0011 0001 */</span></span><br><span class="line">             Console.WriteLine(<span class="string">&quot;Line 3 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">             c = ~a;               <span class="comment">/*-61 = 1100 0011 */</span></span><br><span class="line">             Console.WriteLine(<span class="string">&quot;Line 4 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">             c = a &lt;&lt; <span class="number">2</span>;     <span class="comment">/* 240 = 1111 0000 */</span></span><br><span class="line">             Console.WriteLine(<span class="string">&quot;Line 5 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">             c = a &gt;&gt; <span class="number">2</span>;     <span class="comment">/* 15 = 0000 1111 */</span></span><br><span class="line">             Console.WriteLine(<span class="string">&quot;Line 6 - c 的值是 &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Line <span class="number">1</span> - c 的值是 <span class="number">12</span></span><br><span class="line">Line <span class="number">2</span> - c 的值是 <span class="number">61</span></span><br><span class="line">Line <span class="number">3</span> - c 的值是 <span class="number">49</span></span><br><span class="line">Line <span class="number">4</span> - c 的值是 <span class="number">-61</span></span><br><span class="line">Line <span class="number">5</span> - c 的值是 <span class="number">240</span></span><br><span class="line">Line <span class="number">6</span> - c 的值是 <span class="number">15</span></span><br></pre></td></tr></table></figure><h1 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h1><p>下表列出了 C# 支持的赋值运算符：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">简单的赋值运算符，把右边操作数的值赋给左边操作数</td><td align="left">C &#x3D; A + B 将把 A + B 的值赋给 C</td></tr><tr><td align="left">+&#x3D;</td><td align="left">加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数</td><td align="left">C +&#x3D; A 相当于 C &#x3D; C + A</td></tr><tr><td align="left">-&#x3D;</td><td align="left">减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数</td><td align="left">C -&#x3D; A 相当于 C &#x3D; C - A</td></tr><tr><td align="left">*&#x3D;</td><td align="left">乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数</td><td align="left">C *&#x3D; A 相当于 C &#x3D; C * A</td></tr><tr><td align="left">&#x2F;&#x3D;</td><td align="left">除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数</td><td align="left">C &#x2F;&#x3D; A 相当于 C &#x3D; C &#x2F; A</td></tr><tr><td align="left">%&#x3D;</td><td align="left">求模且赋值运算符，求两个操作数的模赋值给左边操作数</td><td align="left">C %&#x3D; A 相当于 C &#x3D; C % A</td></tr><tr><td align="left">&lt;&lt;&#x3D;</td><td align="left">左移且赋值运算符</td><td align="left">C &lt;&lt;&#x3D; 2 等同于 C &#x3D; C &lt;&lt; 2</td></tr><tr><td align="left">&gt;&gt;&#x3D;</td><td align="left">右移且赋值运算符</td><td align="left">C &gt;&gt;&#x3D; 2 等同于 C &#x3D; C &gt;&gt; 2</td></tr><tr><td align="left">&amp;&#x3D;</td><td align="left">按位与且赋值运算符</td><td align="left">C &amp;&#x3D; 2 等同于 C &#x3D; C &amp; 2</td></tr><tr><td align="left">^&#x3D;</td><td align="left">按位异或且赋值运算符</td><td align="left">C ^&#x3D; 2 等同于 C &#x3D; C ^ 2</td></tr><tr><td align="left">|&#x3D;</td><td align="left">按位或且赋值运算符</td><td align="left">C |&#x3D; 2 等同于 C &#x3D; C | 2</td></tr></tbody></table><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><p>请看下面的实例，了解 C# 中所有可用的赋值运算符：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorsAppl</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">21</span>;</span><br><span class="line">            <span class="built_in">int</span> c;</span><br><span class="line"></span><br><span class="line">            c = a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 1 - =  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c += a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 2 - += c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c -= a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 3 - -=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c *= a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 4 - *=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c /= a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 5 - /=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c = <span class="number">200</span>;</span><br><span class="line">            c %= a;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 6 - %=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c &lt;&lt;= <span class="number">2</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 7 - &lt;&lt;=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c &gt;&gt;= <span class="number">2</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 8 - &gt;&gt;=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c &amp;= <span class="number">2</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 9 - &amp;=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c ^= <span class="number">2</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 10 - ^=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line"></span><br><span class="line">            c |= <span class="number">2</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Line 11 - |=  c 的值 = &#123;0&#125;&quot;</span>, c);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Line 1 - =     c 的值 = 21</span><br><span class="line">Line 2 - +=    c 的值 = 42</span><br><span class="line">Line 3 - -=    c 的值 = 21</span><br><span class="line">Line 4 - *=    c 的值 = 441</span><br><span class="line">Line 5 - /=    c 的值 = 21</span><br><span class="line">Line 6 - %=    c 的值 = 11</span><br><span class="line">Line 7 - &lt;&lt;=    c 的值 = 44</span><br><span class="line">Line 8 - &gt;&gt;=    c 的值 = 11</span><br><span class="line">Line 9 - &amp;=    c 的值 = 2</span><br><span class="line">Line 10 - ^=    c 的值 = 0</span><br><span class="line">Line 11 - |=    c 的值 = 2</span><br></pre></td></tr></table></figure><h1 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h1><p>下表列出了 C# 支持的其他一些重要的运算符，包括 <strong>sizeof</strong>、<strong>typeof</strong> 和 <strong>? :</strong>。</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">sizeof()</td><td align="left">返回数据类型的大小。</td><td align="left">sizeof(int)，将返回 4.</td></tr><tr><td align="left">typeof()</td><td align="left">返回 class 的类型。</td><td align="left">typeof(StreamReader);</td></tr><tr><td align="left">&amp;</td><td align="left">返回变量的地址。</td><td align="left">&a; 将得到变量的实际地址。</td></tr><tr><td align="left">*</td><td align="left">变量的指针。</td><td align="left">*a; 将指向一个变量。</td></tr><tr><td align="left">? :</td><td align="left">条件表达式</td><td align="left">如果条件为真 ? 则为 X : 否则为 Y</td></tr><tr><td align="left">is</td><td align="left">判断对象是否为某一类型。</td><td align="left">If( Ford is Car) &#x2F;&#x2F; 检查 Ford 是否是 Car 类的一个对象。</td></tr><tr><td align="left">as</td><td align="left">强制转换，即使转换失败也不会抛出异常。</td><td align="left">Object obj &#x3D; new StringReader(“Hello”); StringReader r &#x3D; obj as StringReader;</td></tr></tbody></table><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorsAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* sizeof 运算符的实例 */</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;int 的大小是 &#123;0&#125;&quot;</span>, <span class="keyword">sizeof</span>(<span class="built_in">int</span>));</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;short 的大小是 &#123;0&#125;&quot;</span>, <span class="keyword">sizeof</span>(<span class="built_in">short</span>));</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;double 的大小是 &#123;0&#125;&quot;</span>, <span class="keyword">sizeof</span>(<span class="built_in">double</span>));</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 三元运算符的实例 */</span></span><br><span class="line">         <span class="built_in">int</span> a, b;</span><br><span class="line">         a = <span class="number">10</span>;</span><br><span class="line">         b = (a == <span class="number">1</span>) ? <span class="number">20</span> : <span class="number">30</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;b 的值是 &#123;0&#125;&quot;</span>, b);</span><br><span class="line"></span><br><span class="line">         b = (a == <span class="number">10</span>) ? <span class="number">20</span> : <span class="number">30</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">&quot;b 的值是 &#123;0&#125;&quot;</span>, b);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> 的大小是 <span class="number">4</span></span><br><span class="line"><span class="built_in">short</span> 的大小是 <span class="number">2</span></span><br><span class="line"><span class="built_in">double</span> 的大小是 <span class="number">8</span></span><br><span class="line">b 的值是 <span class="number">30</span></span><br><span class="line">b 的值是 <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="可空类型修饰符"><a href="#可空类型修饰符" class="headerlink" title="可空类型修饰符 ?"></a>可空类型修饰符 ?</h2><p>引用类型可以使用空引用表示一个不存在的值，而值类型通常不能表示为空。</p><p>例如：<strong>string str&#x3D;null;</strong> 是正确的，<strong>int i&#x3D;null;</strong> 编译器就会报错。</p><p>为了使值类型也可为空，就可以使用可空类型，即用可空类型修饰符 <strong>?</strong> 来表示，表现形式为 <strong>T?</strong> 。</p><p>例如：<strong>int?</strong> 表示可空的整形，<strong>DateTime?</strong> 表示可为空的时间。</p><p><strong>T?</strong> 其实是 System.Nullable(泛型结构）的缩写形式，也就意味着当你用到 **T？**时编译器编译时会把T？编译成 System.Nullable 的形式。</p><p>例如：<strong>int?</strong>，编译后便是 System.Nullable 的形式。</p><h2 id="空合并运算符"><a href="#空合并运算符" class="headerlink" title="空合并运算符 ??"></a>空合并运算符 <code>??</code></h2><p>用于定义可空类型和引用类型的默认值。</p><p>如果此运算符的左操作数不为 null，则此运算符将返回左操作数，否则返回右操作数。</p><p>例如：<strong>a??b</strong> 当 a 为 null 时则返回 b，a 不为 null 时则返回 a 本身。</p><p>空合并运算符为右结合运算符，即操作时从右向左进行组合的。</p><p>如: <strong>a??b??c</strong> 的形式按 <strong>a??(b??c)</strong> 计算。</p><h2 id="NULL-检查运算符"><a href="#NULL-检查运算符" class="headerlink" title="NULL 检查运算符 ?."></a>NULL 检查运算符 <code>?.</code></h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>? firstX = points?.FirstOrDefault()?.X;</span><br></pre></td></tr></table></figure><p>从这个例子中我们也可以看出它的基本用法：如果对象为 NULL，则不进行后面的获取成员的运算，直接返回 NULL。</p><p>需要注意的是，由于 <strong>?.</strong> 运算符返回的可以是 NULL，当返回的成员类型是 struct 类型的时候， <strong>?.</strong> 和 <strong>.</strong> 运算符的返回值类型是不一样的。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Point p = <span class="keyword">new</span> Point(<span class="number">3</span>, <span class="number">2</span>); </span><br><span class="line">Console.WriteLine(p.X.GetType() == <span class="keyword">typeof</span>(<span class="built_in">int</span>));        <span class="comment">//true</span></span><br><span class="line">Console.WriteLine(p?.X.GetType() == <span class="keyword">typeof</span>(<span class="built_in">int</span>?));      <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h1 id="C-中的运算符优先级"><a href="#C-中的运算符优先级" class="headerlink" title="C# 中的运算符优先级"></a>C# 中的运算符优先级</h1><p>运算符的优先级确定表达式中项的组合。这会影响到一个表达式如何计算。某些运算符比其他运算符有更高的优先级，例如，乘除运算符具有比加减运算符更高的优先级。</p><p>例如 x &#x3D; 7 + 3 * 2，在这里，x 被赋值为 13，而不是 20，因为运算符 * 具有比 + 更高的优先级，所以首先计算乘法 3*2，然后再加上 7。</p><p>下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。在表达式中，较高优先级的运算符会优先被计算。</p><table><thead><tr><th align="left">类别</th><th align="left">运算符</th><th align="left">结合性</th></tr></thead><tbody><tr><td align="left">后缀</td><td align="left">() [] -&gt; . ++ - -</td><td align="left">从左到右</td></tr><tr><td align="left">一元</td><td align="left">+ - ! ~ ++ - - (type)* &amp; sizeof</td><td align="left">从右到左</td></tr><tr><td align="left">乘除</td><td align="left">* &#x2F; %</td><td align="left">从左到右</td></tr><tr><td align="left">加减</td><td align="left">+ -</td><td align="left">从左到右</td></tr><tr><td align="left">移位</td><td align="left">&lt;&lt; &gt;&gt;</td><td align="left">从左到右</td></tr><tr><td align="left">关系</td><td align="left">&lt; &lt;&#x3D; &gt; &gt;&#x3D;</td><td align="left">从左到右</td></tr><tr><td align="left">相等</td><td align="left">&#x3D;&#x3D; !&#x3D;</td><td align="left">从左到右</td></tr><tr><td align="left">位与 AND</td><td align="left">&amp;</td><td align="left">从左到右</td></tr><tr><td align="left">位异或 XOR</td><td align="left">^</td><td align="left">从左到右</td></tr><tr><td align="left">位或 OR</td><td align="left">|</td><td align="left">从左到右</td></tr><tr><td align="left">逻辑与 AND</td><td align="left">&amp;&amp;</td><td align="left">从左到右</td></tr><tr><td align="left">逻辑或 OR</td><td align="left">||</td><td align="left">从左到右</td></tr><tr><td align="left">条件</td><td align="left">?:</td><td align="left">从右到左</td></tr><tr><td align="left">赋值</td><td align="left">&#x3D; +&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; %&#x3D;&gt;&gt;&#x3D; &lt;&lt;&#x3D; &amp;&#x3D; ^&#x3D; |&#x3D;</td><td align="left">从右到左</td></tr><tr><td align="left">逗号</td><td align="left">,</td><td align="left">从左到右</td></tr></tbody></table><h3 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">OperatorsAppl</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="built_in">int</span> a = <span class="number">20</span>;</span><br><span class="line">         <span class="built_in">int</span> b = <span class="number">10</span>;</span><br><span class="line">         <span class="built_in">int</span> c = <span class="number">15</span>;</span><br><span class="line">         <span class="built_in">int</span> d = <span class="number">5</span>;</span><br><span class="line">         <span class="built_in">int</span> e;</span><br><span class="line">         e = (a + b) * c / d;     <span class="comment">// ( 30 * 15 ) / 5</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;(a + b) * c / d 的值是 &#123;0&#125;&quot;</span>, e);</span><br><span class="line"></span><br><span class="line">         e = ((a + b) * c) / d;   <span class="comment">// (30 * 15 ) / 5</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;((a + b) * c) / d 的值是 &#123;0&#125;&quot;</span>, e);</span><br><span class="line"></span><br><span class="line">         e = (a + b) * (c / d);   <span class="comment">// (30) * (15/5)</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;(a + b) * (c / d) 的值是 &#123;0&#125;&quot;</span>, e);</span><br><span class="line"></span><br><span class="line">         e = a + (b * c) / d;    <span class="comment">//  20 + (150/5)</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;a + (b * c) / d 的值是 &#123;0&#125;&quot;</span>, e);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(a + b) * c / d 的值是 <span class="number">90</span></span><br><span class="line">((a + b) * c) / d 的值是 <span class="number">90</span></span><br><span class="line">(a + b) * (c / d) 的值是 <span class="number">90</span></span><br><span class="line">a + (b * c) / d 的值是 <span class="number">50</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（8）常量</title>
      <link href="/2018/01/11/CSharp/08CSharp_Constant/"/>
      <url>/2018/01/11/CSharp/08CSharp_Constant/</url>
      
        <content type="html"><![CDATA[<h1 id="C-常量"><a href="#C-常量" class="headerlink" title="C# 常量"></a>C# 常量</h1><p>常量是固定值，程序执行期间不会改变。常量可以是任何基本数据类型，比如整数常量、浮点常量、字符常量或者字符串常量，还有枚举常量。</p><p>常量可以被当作常规的变量，只是它们的值在定义后不能被修改。</p><h1 id="常量初始化"><a href="#常量初始化" class="headerlink" title="常量初始化"></a>常量初始化</h1><p>常量在声明时必须初始化，一旦定义值就不可以再改变；<br>常量定义时使用 const 关键字修饰；<br>常量定义的基本语法：<br><code>访问修饰符　const  常量类型　常量名 = 具体值</code><br>实例</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Calendar1</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> months = <span class="number">12</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="整数常量"><a href="#整数常量" class="headerlink" title="整数常量"></a>整数常量</h1><p>整数常量可以是十进制、八进制或十六进制的常量。前缀指定基数：0x 或 0X 表示十六进制，0 表示八进制，没有前缀则表示十进制。</p><p>整数常量也可以有后缀，可以是 U 和 L 的组合，其中，U 和 L 分别表示 unsigned 和 long。后缀可以是大写或者小写，多个后缀以任意顺序进行组合。</p><p>这里有一些整数常量的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">212</span>         <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">215u</span>        <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">0xFee</span>L      <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">078</span>         <span class="comment">/* 非法：8 不是一个八进制数字 */</span></span><br><span class="line"><span class="number">032U</span>U       <span class="comment">/* 非法：不能重复后缀 */</span></span><br></pre></td></tr></table></figure><p>以下是各种类型的整数常量的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">85</span>         <span class="comment">/* 十进制 */</span></span><br><span class="line"><span class="number">0213</span>       <span class="comment">/* 八进制 */</span></span><br><span class="line"><span class="number">0x4b</span>       <span class="comment">/* 十六进制 */</span></span><br><span class="line"><span class="number">30</span>         <span class="comment">/* int */</span></span><br><span class="line"><span class="number">30u</span>        <span class="comment">/* 无符号 int */</span></span><br><span class="line"><span class="number">30l</span>        <span class="comment">/* long */</span></span><br><span class="line"><span class="number">30u</span>l       <span class="comment">/* 无符号 long */</span></span><br></pre></td></tr></table></figure><h1 id="浮点常量"><a href="#浮点常量" class="headerlink" title="浮点常量"></a>浮点常量</h1><p>一个浮点常量是由整数部分、小数点、小数部分和指数部分组成。您可以使用小数形式或者指数形式来表示浮点常量。</p><p>这里有一些浮点常量的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3.14159</span>       <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">314159E-5</span>L    <span class="comment">/* 合法 */</span></span><br><span class="line"><span class="number">510</span>E          <span class="comment">/* 非法：不完全指数 */</span></span><br><span class="line"><span class="number">210f</span>          <span class="comment">/* 非法：没有小数或指数 */</span></span><br><span class="line">.e55          <span class="comment">/* 非法：缺少整数或小数 */</span></span><br></pre></td></tr></table></figure><p>使用浮点形式表示时，必须包含小数点、指数或同时包含两者。使用指数形式表示时，必须包含整数部分、小数部分或同时包含两者。有符号的指数是用 e 或 E 表示的。</p><h1 id="字符常量"><a href="#字符常量" class="headerlink" title="字符常量"></a>字符常量</h1><p>字符常量是括在单引号里，例如，’x’，且可存储在一个简单的字符类型变量中。一个字符常量可以是一个普通字符（例如 ‘x’）、一个转义序列（例如 ‘\t’）或者一个通用字符（例如 ‘\u02C0’）。</p><p>在 C# 中有一些特定的字符，当它们的前面带有反斜杠时有特殊的意义，可用于表示换行符（\n）或制表符 tab（\t）。在这里，列出一些转义序列码：</p><table><thead><tr><th align="left">转义序列</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">\ 字符</td></tr><tr><td align="left">&#39;</td><td align="left">‘ 字符</td></tr><tr><td align="left">&quot;</td><td align="left">“ 字符</td></tr><tr><td align="left">?</td><td align="left">? 字符</td></tr><tr><td align="left">\a</td><td align="left">Alert 或 bell</td></tr><tr><td align="left">\b</td><td align="left">退格键（Backspace）</td></tr><tr><td align="left">\f</td><td align="left">换页符（Form feed）</td></tr><tr><td align="left">\n</td><td align="left">换行符（Newline）</td></tr><tr><td align="left">\r</td><td align="left">回车</td></tr><tr><td align="left">\t</td><td align="left">水平制表符 tab</td></tr><tr><td align="left">\v</td><td align="left">垂直制表符 tab</td></tr><tr><td align="left">\ooo</td><td align="left">一到三位的八进制数</td></tr><tr><td align="left">\xhh . . .</td><td align="left">一个或多个数字的十六进制数</td></tr></tbody></table><p>以下是一些转义序列字符的实例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">EscapeChar</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello\tWorld\n\n&quot;</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello   World<span class="comment">//水平制表符 tab  </span></span><br><span class="line"><span class="comment">//换行</span></span><br><span class="line"><span class="comment">//换行</span></span><br></pre></td></tr></table></figure><h1 id="字符串常量"><a href="#字符串常量" class="headerlink" title="字符串常量"></a>字符串常量</h1><p>字符串常量是括在双引号 <strong>“”</strong> 里，或者是括在 <strong>@””</strong> 里。字符串常量包含的字符与字符常量相似，可以是：普通字符、转义序列和通用字符</p><p>使用字符串常量时，可以把一个很长的行拆成多个行，可以使用空格分隔各个部分。</p><p>这里是一些字符串常量的实例。下面所列的各种形式表示相同的字符串。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;hello, world&quot;</span>;                  <span class="comment">// hello, world</span></span><br><span class="line"><span class="built_in">string</span> b = <span class="string">@&quot;hello, world&quot;</span>;               <span class="comment">// hello, world</span></span><br><span class="line"><span class="built_in">string</span> c = <span class="string">&quot;hello \t world&quot;</span>;               <span class="comment">// hello     world</span></span><br><span class="line"><span class="built_in">string</span> d = <span class="string">@&quot;hello \t world&quot;</span>;               <span class="comment">// hello \t world</span></span><br><span class="line"><span class="built_in">string</span> e = <span class="string">&quot;Joe said \&quot;Hello\&quot; to me&quot;</span>;      <span class="comment">// Joe said &quot;Hello&quot; to me</span></span><br><span class="line"><span class="built_in">string</span> f = <span class="string">@&quot;Joe said &quot;&quot;Hello&quot;&quot; to me&quot;</span>;   <span class="comment">// Joe said &quot;Hello&quot; to me</span></span><br><span class="line"><span class="built_in">string</span> g = <span class="string">&quot;\\\\server\\share\\file.txt&quot;</span>;   <span class="comment">// \\server\share\file.txt</span></span><br><span class="line"><span class="built_in">string</span> h = <span class="string">@&quot;\\server\share\file.txt&quot;</span>;      <span class="comment">// \\server\share\file.txt</span></span><br><span class="line"><span class="built_in">string</span> i = <span class="string">&quot;one\r\ntwo\r\nthree&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> j = <span class="string">@&quot;one</span></span><br><span class="line"><span class="string">two</span></span><br><span class="line"><span class="string">three&quot;</span>;</span><br></pre></td></tr></table></figure><h1 id="定义常量"><a href="#定义常量" class="headerlink" title="定义常量"></a>定义常量</h1><p>常量是使用 <strong>const</strong> 关键字来定义的 。定义一个常量的语法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &lt;data_type&gt; &lt;constant_name&gt; = <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><p>下面的代码演示了如何在程序中定义和使用常量：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ConstTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">SampleClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> x;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> y;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> c1 = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> c2 = c1 + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SampleClass</span>(<span class="params"><span class="built_in">int</span> p1, <span class="built_in">int</span> p2</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            x = p1;</span><br><span class="line">            y = p2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SampleClass mC = <span class="keyword">new</span> SampleClass(<span class="number">11</span>, <span class="number">22</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;x = &#123;0&#125;, y = &#123;1&#125;&quot;</span>, mC.x, mC.y);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;c1 = &#123;0&#125;, c2 = &#123;1&#125;&quot;</span>,</span><br><span class="line">                          SampleClass.c1, SampleClass.c2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">11</span>, y = <span class="number">22</span></span><br><span class="line">c1 = <span class="number">5</span>, c2 = <span class="number">10</span></span><br></pre></td></tr></table></figure><h1 id="const与readonly"><a href="#const与readonly" class="headerlink" title="const与readonly"></a>const与readonly</h1><h2 id="静态常量（编译时常量）const"><a href="#静态常量（编译时常量）const" class="headerlink" title="静态常量（编译时常量）const"></a>静态常量（编译时常量）const</h2><p>在编译时就确定了值，必须在声明时就进行初始化且之后不能进行更改，可在类和方法中定义。定义方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const double a=3.14；// 正确声明常量的方法</span><br><span class="line">const int b;         // 错误，没有初始化</span><br></pre></td></tr></table></figure><h2 id="动态常量（运行时常量）readonly"><a href="#动态常量（运行时常量）readonly" class="headerlink" title="动态常量（运行时常量）readonly"></a>动态常量（运行时常量）readonly</h2><p>在运行时确定值，只能在声明时或构造函数中初始化，只能在类中定义。定义方法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">readonly</span> <span class="built_in">int</span> a=<span class="number">1</span>;  <span class="comment">// 声明时初始化</span></span><br><span class="line">    <span class="keyword">readonly</span> <span class="built_in">int</span> b;    <span class="comment">// 构造函数中初始化</span></span><br><span class="line">    Program()</span><br><span class="line">    &#123;</span><br><span class="line">        b=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在下面两种情况下：</p><ul><li>a、取值永久不变(比如圆周率、一天包含的小时数、地球的半径等)。</li><li>b、对程序性能要求非常苛刻。</li></ul><p>可以使用 const 常量，除此之外的其他情况都应该优先采用 readonly 常量。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（7）变量</title>
      <link href="/2018/01/10/CSharp/07CSharp_Variables/"/>
      <url>/2018/01/10/CSharp/07CSharp_Variables/</url>
      
        <content type="html"><![CDATA[<h1 id="C-变量"><a href="#C-变量" class="headerlink" title="C# 变量"></a>C# 变量</h1><ul><li>一个变量只不过是一个供程序操作的存储区的名字。</li><li>在 C# 中，每个变量都有一个特定的类型，类型决定了变量的内存大小和布局。</li><li>范围内的值可以存储在内存中，可以对变量进行一系列操作。</li><li>在内存中开辟的一块存储空间。</li><li>用于存储程序中需要的各种类型的数据。<br>　例如，以下定义了三个变量，变量名为a，b，c。</li><li>对于变量，我们需要关注以下以下几个方面：<ol><li>变量的声明：用特定的语法声明一个变量，让运行环境为其自动分配空间；</li><li>变量的命名：变量需要有个见名知意的名字，而且要符合C#的语言规范；</li><li>变量的初始化：变量声明后，要为其赋一个确定的初值，有了初值后才能使用该方法；</li><li>变量的访问：可以对变量中的数据进行存取作，但是要操作的数据要和变量的类型保持一致；</li></ol></li></ul><p>C# 中提供的基本的值类型大致可以分为以下几类：</p><table><thead><tr><th align="left">类型</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">整数类型</td><td align="left">sbyte、byte、short、ushort、int、uint、long、ulong 和 char</td></tr><tr><td align="left">浮点型</td><td align="left">float 和 double</td></tr><tr><td align="left">十进制类型</td><td align="left">decimal</td></tr><tr><td align="left">布尔类型</td><td align="left">true 或 false 值，指定的值</td></tr><tr><td align="left">空类型</td><td align="left">可为空值的数据类型</td></tr></tbody></table><p>C# 允许定义其他值类型的变量，比如 <strong>enum</strong>，也允许定义引用类型变量，比如 <strong>class</strong>。这些我们将在以后的章节中进行讨论。在本章节中，我们只研究基本变量类型。</p><h1 id="C-中的变量定义"><a href="#C-中的变量定义" class="headerlink" title="C# 中的变量定义"></a>C# 中的变量定义</h1><p>C# 中变量定义的语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;data_type&gt; &lt;variable_list&gt;;</span><br></pre></td></tr></table></figure><p>data_type 必须是一个有效的 C# 数据类型，可以是 char、int、float、double 或其他用户自定义的数据类型。<br>variable_list 可以由一个或多个用逗号分隔的标识符名称组成。</p><p>一些有效的变量定义如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> i, j, k;</span><br><span class="line"><span class="built_in">char</span> c, ch;</span><br><span class="line"><span class="built_in">float</span> f, salary;</span><br><span class="line"><span class="built_in">double</span> d;</span><br></pre></td></tr></table></figure><h1 id="变量的声明"><a href="#变量的声明" class="headerlink" title="变量的声明"></a>变量的声明</h1><p>变量声明的基本语法：<code>访问修饰符　变量类型　变量名</code><br>如果程序中需要多个相同类型的变量时，可以将这多个变量的声明放在一条语句，中间使用逗号分隔。</p><h1 id="C-中的变量初始化"><a href="#C-中的变量初始化" class="headerlink" title="C# 中的变量初始化"></a>C# 中的变量初始化</h1><p>变量通过在等号后跟一个常量表达式进行初始化（赋值）。初始化的一般形式为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable_name = <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><p>变量可以在声明时被初始化（指定一个初始值）。初始化由一个等号后跟一个常量表达式组成，如下所示：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;data_type&gt; &lt;variable_name&gt; = <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><ul><li>变量初始化，即为变量赋值的过程。变量初始化方式有以下两种形式：</li><li>形式一：先定义变量，再为变量赋值（两行代码）。<br>　如： 定义一个表示年龄的变量，变量名为age，然后为年龄赋值，具体年龄为 30 岁；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>    age  ;　<span class="comment">//先定义名为age的变量</span></span><br><span class="line">age  =  <span class="number">30</span> ;  <span class="comment">//为age赋值，30</span></span><br></pre></td></tr></table></figure><ul><li>形式二：定义变量的同时为变量赋初值（一行代码）</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>   age = <span class="number">30</span> ;  <span class="comment">//定义age变量同时为其赋值30 </span></span><br></pre></td></tr></table></figure><p>正确地初始化变量是一个良好的编程习惯，否则有时程序会产生意想不到的结果。</p><p>请看下面的实例，使用了各种类型的变量：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">VariableDefinition</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">short</span> a;</span><br><span class="line">            <span class="built_in">int</span> b ;</span><br><span class="line">            <span class="built_in">double</span> c;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* 实际初始化 */</span></span><br><span class="line">            a = <span class="number">10</span>;</span><br><span class="line">            b = <span class="number">20</span>;</span><br><span class="line">            c = a + b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a = &#123;0&#125;, b = &#123;1&#125;, c = &#123;2&#125;&quot;</span>, a, b, c);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span>, b = <span class="number">20</span>, c = <span class="number">30</span></span><br></pre></td></tr></table></figure><h1 id="变量名的命名-驼峰式"><a href="#变量名的命名-驼峰式" class="headerlink" title="变量名的命名(驼峰式)"></a>变量名的命名(驼峰式)</h1><p>变量名应符合标识符的基本命名规则</p><ol><li>可以由字母（大小写）、数字、下划线、@符等组成</li><li>变量名不能以数字开头</li><li>不能使用 C# 中的关键字或保留字（如：for，if 等）</li><li>变量名字尽量做到“见名知意”，即有实际意义</li></ol><p>变量命名时使用“驼峰式”（Camel）<br>　　即：变量名由多个单词组成时，从第2个单词开始，每个单词首字母大写，其它字母均小写，如: carSpeed<br>C# 严格区分大小写</p><ul><li>注意：随着 C# 及 VS 的不断升级，在 VS 中支持使用汉字作为变量名，类名，项目名等，同时运行也不会报错。但是这种命名方式极不推荐，只需了解即可。</li></ul><h1 id="接受来自用户的值"><a href="#接受来自用户的值" class="headerlink" title="接受来自用户的值"></a>接受来自用户的值</h1><p><strong>System</strong> 命名空间中的 <strong>Console</strong> 类提供了一个函数 <strong>ReadLine()</strong>，用于接收来自用户的输入，并把它存储到一个变量中。<br>例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> num;</span><br><span class="line">num = Convert.ToInt32(Console.ReadLine());</span><br></pre></td></tr></table></figure><p>函数 <strong>Convert.ToInt32()</strong> 把用户输入的数据转换为 int 数据类型，因为 <strong>Console.ReadLine()</strong> 只接受字符串格式的数据。</p><h1 id="变量的访问"><a href="#变量的访问" class="headerlink" title="变量的访问"></a>变量的访问</h1><p>变量是存放数据的空间，可以对其赋值、更改和操作；要把对变量的操作理解为是对其所存储的数据的操作。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> a = <span class="number">100</span>;</span><br><span class="line">    a = a + <span class="number">200</span>;<span class="comment">//将a的值加上200再存入变量aConsole.Writeline( a);// 300&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="变量分类及作用域"><a href="#变量分类及作用域" class="headerlink" title="变量分类及作用域"></a>变量分类及作用域</h1><p>C# 中的变量分为：局部变量、全局变量 </p><ul><li><p>局部变量（在方法等中定义的变量）<br>局部变量的作用范围是在一对大括号里面（从开始大括号和结束大括号之间），一旦出了这个方法，变量即被销毁，不能再被其它代码块再使用。<br>说明：就像分支语句或循环语句中声明的变量，作用范围只能是循环体内或分支语句块内。 </p></li><li><p>全局变量 （指定义在类的里面，方法的外面的变量）<br>全局变量的作用范围是：整个类，即：从类定义时的开始大括号“{”到结束大括号}” 中间的任意位置都可访问到这个变量。     </p></li><li><p>全局变量与局部变量使用时注意事项：<br>由于全局变量可看作是类的成员，所以全局变量在定义完之后，可以不用赋值，会使用对应类型的默认值。如：整数默认值为0，小数默认值为0.0，布尔默认值为false<br>在同一个类中，允许类中的全局变量和局部变量出现重名，操作此变量时，默认操作的是： 局部变量。</p></li></ul><h1 id="C-中的-Lvalues-和-Rvalues"><a href="#C-中的-Lvalues-和-Rvalues" class="headerlink" title="C# 中的 Lvalues 和 Rvalues"></a>C# 中的 Lvalues 和 Rvalues</h1><p>C# 中的两种表达式：</p><ol><li><strong>lvalue</strong>：lvalue 表达式可以出现在赋值语句的左边或右边。</li><li><strong>rvalue</strong>：rvalue 表达式可以出现在赋值语句的右边，不能出现在赋值语句的左边。</li></ol><p>变量是 lvalue 的，所以可以出现在赋值语句的左边。数值是 rvalue 的，因此不能被赋值，不能出现在赋值语句的左边。下面是一个有效的语句：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> g = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>下面是一个无效的语句，会产生编译时错误：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（6）类型转换</title>
      <link href="/2018/01/09/CSharp/06CSharp_Type/"/>
      <url>/2018/01/09/CSharp/06CSharp_Type/</url>
      
        <content type="html"><![CDATA[<h1 id="C-类型转换"><a href="#C-类型转换" class="headerlink" title="C# 类型转换"></a>C# 类型转换</h1><p>类型转换从根本上说是类型铸造，或者说是把数据从一种类型转换为另一种类型。在 C# 中，类型铸造有两种形式：</p><ul><li>隐式类型转换 - 这些转换是 C# 默认的以安全方式进行的转换, 不会导致数据丢失。例如，从小的整数类型转换为大的整数类型，从派生类转换为基类。</li><li>显式类型转换 - 显式类型转换，即强制类型转换。显式转换需要强制转换运算符，而且强制转换会造成数据丢失。</li></ul><h2 id="值类型间的转换"><a href="#值类型间的转换" class="headerlink" title="值类型间的转换"></a>值类型间的转换</h2><p>在C#的运算中，要求各被运算单元的数据类型是一致的，且运算结果将与被运算单元保持一致。<br>例如：<code>10/4 </code>  的运算中，被运算的两个数字10与4都属于int 类型，则运算结果也应该是int类型的，所以运算结果是2，而不是2.5。实际开发过程中，对数据的单纯操作可能无法满足现有的需求，这时就需在不同数据类型之间进行相应的转换。C# 提供了2种转换方式： </p><ol><li>自动类型转换（又叫：隐式类型转换　或　向上转型）</li><li>强制类型转换（又叫：显示类型转换　或　向下转型）</li></ol><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p>自动类型转换，又叫做：隐式转型　或　向上转型。是 C# 默认的以安全方式进行的转换, 不会导致数据丢失。<br>自动转型常见的场景：<br>　当被运算单元的数据类型不同时，程序将尝试可行的自动转换（提升）数据类型。关于自动转型的另外一种说法是：将一个范围小的数据转为较大类型的数据时，系统会自动进行类型转换<br>    例如：15000 * 0.25  的运算实际为 int 与 double 的运算，程序执行时，会将 15000 按照 double 类型处理，以保证运算结果是准确的。</p><h2 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h2><ul><li>很明显，上两页练习中的程序代码是存在错误的。如何解决上面的问题呢？   就需要使用：强制类型转换<br>强制类型转换，又叫向下转型。指的是将一个范围大的数据转为一个范围小的数据类型。</li><li>基本语法：<code>( 要转换成的类型 )  具体要转换的数据或变量 </code></li><li>例如：　( int ) 3.1415926  表示将double 类型的数据3.1415926 强制转换为 int 类型，结果为： 3 。</li><li>强制转型有风险，有可能引起数据溢出或精度丧失，造成最后数据结果不准确的情况。所以：一般情况下，不推荐使用强制类型转换方式。</li><li>例如：</li></ul><p>　</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>  i  =  <span class="number">256</span> ;</span><br><span class="line"><span class="built_in">byte</span>  b  =  ( <span class="built_in">byte</span> ) i  ; </span><br></pre></td></tr></table></figure><p>上面两行代码中，声明 int 型变量 i 值256，然后将 i 的值赋值给 byte 型变量 b，打印b时结果为：0 ，出现这种结果是因为byte（1个字节）在内存中存储4个字节的int型变量时无法容纳，故出现数据溢出情况，导致运算结果不准确。</p><h1 id="隐式转换和显式转换"><a href="#隐式转换和显式转换" class="headerlink" title="隐式转换和显式转换"></a>隐式转换和显式转换</h1><p>隐式转换：C# 默认的以安全方式进行的转换。本质是从小存储容量数据类型自动转换为大存储容量数据类型，从派生类转换为基类。</p><h2 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">TypeConvertion</span></span><br><span class="line">&#123;   <span class="keyword">class</span> <span class="title">Class1</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Class2</span> : <span class="title">Class1</span> <span class="comment">//类Class2是类Class1的子类</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> inum = <span class="number">100</span>;</span><br><span class="line">            <span class="built_in">long</span> lnum = inum; <span class="comment">// 进行了隐式转换，将 int 型（数据范围小）数据转换为了 long 型（数据范围大）的数据</span></span><br><span class="line">            Class1 c1 = <span class="keyword">new</span> Class2(); <span class="comment">// 这里也是隐式转换，将一个新建的 Class2 实例转换为了其基类 Class1 类型的实例 C1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显式转换：通过用户使用预定义的函数显式完成的，显式转换需要强制转换运算符。</p><p>转换类型的范围大小和从属关系和隐式转换相反。显式转换可能会导致数据出错，或者转换失败，甚至无法编译成功。</p><h2 id="实例：-1"><a href="#实例：-1" class="headerlink" title="实例："></a>实例：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span> dnum = <span class="number">100.1</span>;</span><br><span class="line"><span class="built_in">int</span> ifromd = (<span class="built_in">int</span>)dnum; <span class="comment">//double类型显式转换转为int类型</span></span><br><span class="line"></span><br><span class="line">Class1 c11 = <span class="keyword">new</span> Class1();</span><br><span class="line">Class2 c22 = c11 <span class="keyword">as</span> Class2; <span class="comment">//使用as进行显式转换</span></span><br><span class="line">Console.WriteLine(c22 <span class="keyword">is</span> Class1);</span><br><span class="line">Console.WriteLine(c22 <span class="keyword">is</span> Class2);</span><br></pre></td></tr></table></figure><ul><li>运行结果：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FALSE</span><br><span class="line">FALSE</span><br></pre></td></tr></table></figure><h1 id="C-类型转换方法-Convert类"><a href="#C-类型转换方法-Convert类" class="headerlink" title="C# 类型转换方法(Convert类)"></a>C# 类型转换方法(Convert类)</h1><table><thead><tr><th align="center">方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">ToBoolean</td><td align="center">如果可能的话，把类型转换为布尔型。</td></tr><tr><td align="center">ToByte</td><td align="center">把类型转换为字节类型。</td></tr><tr><td align="center">ToChar</td><td align="center">如果可能的话，把类型转换为单个 Unicode 字符类型。</td></tr><tr><td align="center">ToDateTime</td><td align="center">把类型（整数或字符串类型）转换为 日期-时间 结构。</td></tr><tr><td align="center">ToDecimal</td><td align="center">把浮点型或整数类型转换为十进制类型。</td></tr><tr><td align="center">ToDouble</td><td align="center">把类型转换为双精度浮点型。</td></tr><tr><td align="center">ToInt16</td><td align="center">把类型转换为 16 位整数类型。</td></tr><tr><td align="center">ToInt32</td><td align="center">把类型转换为 32 位整数类型。</td></tr><tr><td align="center">ToInt64</td><td align="center">把类型转换为 64 位整数类型。</td></tr><tr><td align="center">ToSbyte</td><td align="center">把类型转换为有符号字节类型。</td></tr><tr><td align="center">ToSingle</td><td align="center">把类型转换为小浮点数类型。</td></tr><tr><td align="center">ToString</td><td align="center">把类型转换为字符串类型。</td></tr><tr><td align="center">ToType</td><td align="center">把类型转换为指定类型。</td></tr><tr><td align="center">ToUInt16</td><td align="center">把类型转换为 16 位无符号整数类型。</td></tr><tr><td align="center">ToUInt32</td><td align="center">把类型转换为 32 位无符号整数类型。</td></tr><tr><td align="center">ToUInt64</td><td align="center">把类型转换为 64 位无符号整数类型。</td></tr></tbody></table><h1 id="xxx-Parse"><a href="#xxx-Parse" class="headerlink" title="xxx.Parse"></a>xxx.Parse</h1><p><code>xxx.Parse</code>就是把<code>String</code>转换成<code>int,char,double....</code>等,也就是<code>xxx.Parse(string)</code> 括号中的一定要是string。</p><h1 id="类型之间的转换-Convert-和-Parse"><a href="#类型之间的转换-Convert-和-Parse" class="headerlink" title="类型之间的转换 - Convert 和 Parse"></a>类型之间的转换 - Convert 和 Parse</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">123</span>;</span><br><span class="line"><span class="built_in">string</span> locstr = a.ToString();</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果要将&quot;locstr&quot;转成整型数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法一: 用 Convert </span></span><br><span class="line"><span class="built_in">int</span> i = Convert.ToInt16(locstr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法二: 用 Parse</span></span><br><span class="line"><span class="built_in">int</span> ii = <span class="built_in">int</span>.Parse(locstr);</span><br></pre></td></tr></table></figure><h1 id="xxx-TryParse-string-s-out-xxx-i"><a href="#xxx-TryParse-string-s-out-xxx-i" class="headerlink" title="xxx.TryParse(string s,out xxx i)"></a>xxx.TryParse(string s,out xxx i)</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>.TryParse(<span class="built_in">string</span> s,<span class="keyword">out</span> <span class="built_in">int</span> i)</span><br></pre></td></tr></table></figure><p>该方式也是将数字内容的字符串转换为int类型，但是该方式比int.Parse(string s) 好一些，它不会出现异常，最后一个参数result是输出值，如果转换成功则输出相应的值，转换失败则输出0。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> s1=<span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> s2=<span class="string">&quot;1234&quot;</span>;</span><br><span class="line">        <span class="built_in">int</span> a,b;</span><br><span class="line">        <span class="built_in">bool</span> bo1=<span class="built_in">int</span>.TryParse(s1,<span class="keyword">out</span> a);</span><br><span class="line">        Console.WriteLine(s1+<span class="string">&quot; &quot;</span>+bo1+<span class="string">&quot; &quot;</span>+a);</span><br><span class="line">        <span class="built_in">bool</span> bo2=<span class="built_in">int</span>.TryParse(s2,<span class="keyword">out</span> b);</span><br><span class="line">        Console.WriteLine(s2+<span class="string">&quot; &quot;</span>+bo2+<span class="string">&quot; &quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果输出：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">abcd False <span class="number">0</span></span><br><span class="line"><span class="number">1234</span> True <span class="number">1234</span></span><br></pre></td></tr></table></figure><h2 id="浅谈-string-转-int-与抛异常"><a href="#浅谈-string-转-int-与抛异常" class="headerlink" title="浅谈 string 转 int 与抛异常"></a>浅谈 string 转 int 与抛异常</h2><p>string 字符串类型和 int 也是可以转换的。下一行的代码给出错误的转换方法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;123&quot;</span>;  <span class="comment">// 将a设置为字符串“123”</span></span><br><span class="line"><span class="built_in">int</span> x = (<span class="built_in">int</span>) a;   <span class="comment">// 转换</span></span><br></pre></td></tr></table></figure><p>上述代码，毋庸置疑，肯定是错误的。VS 在编译时就过不了。那么，string 该怎么转换成 int 呢？</p><p>这里，我们需要用到 int.Parse()，核心代码为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> a = <span class="string">&quot;123&quot;</span>;     <span class="comment">// 将a设置为字符串“123”</span></span><br><span class="line"><span class="built_in">int</span> x = <span class="built_in">int</span>.Parse(a); <span class="comment">// 转换</span></span><br></pre></td></tr></table></figure><p>如果仅仅是这样，是没有问题的，但是，我们下面再来做一个实例。</p><p>用户输入一个数字，而电脑将计算出这个数字加上1以后的答案，并且显示出来。</p><p>用户输入的东西，即 <strong>Console.ReadLine()</strong> ，一定是以字符串形式表现的。</p><p>于是，运用之前的方法，我们可以写出以下的代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> 测试</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;输入数字，将计算出它加一的答案&quot;</span>);</span><br><span class="line">        <span class="built_in">int</span> a = <span class="built_in">int</span>.Parse(Console.ReadLine());  <span class="comment">//转换用户输入的数字</span></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;答案是&#123;0&#125;&quot;</span>,++a);     <span class="comment">//++a 即 a+1 后的那个数，将它输出出来</span></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当程序运行时，会出现：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入数字，将计算出它加一的答案</span><br><span class="line"><span class="number">3</span></span><br><span class="line">答案是<span class="number">4</span></span><br></pre></td></tr></table></figure><p>这样就很完美了吗？不！！</p><p>如果用户输入并非数字的其他字符，如汉字，会发生什么情况？</p><p>此时，用户输入 <strong>王</strong> ，显然，程序将无法继续运行下去，因为int类型只能存整数，不能存字符。</p><p>这时，程序就会抛出异常。</p><p>如果用 VS 编，你还会看到异常类型：FormatException。</p><p>所以，为了保险，可以用try、catch来解决此问题。核心代码为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">               </span><br><span class="line">&#125;</span><br><span class="line">catch (Exception)</span><br><span class="line">&#123;</span><br><span class="line">                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>try 在英语中就是尝试的意思。在这段代码中，try{} 部分，顾名思义，也就是去尝试进行下面的代码。catch{} 部分，则是检测异常。这样，在出现异常时，catch 就能捕获到异常，从而程序并不会停止。</p><p>则这段程序，完整的代码应该为：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">class</span> 测试</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">           Console.WriteLine(<span class="string">&quot;输入数字，将计算出它加一的答案&quot;</span>);</span><br><span class="line">           <span class="built_in">int</span> a = <span class="built_in">int</span>.Parse(Console.ReadLine());   <span class="comment">//有可能会抛出异常</span></span><br><span class="line">           Console.WriteLine(<span class="string">&quot;答案是&#123;0&#125;&quot;</span>,++a);   <span class="comment">//如果没有异常，程序才会进入这一步</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;无法转换&quot;</span>);  <span class="comment">//如果捕获到异常，就说“无法转换”</span></span><br><span class="line">        &#125;</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，如果我输入了 <strong>王</strong> ，程序结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无法转换</span><br></pre></td></tr></table></figure><h1 id="数据精度"><a href="#数据精度" class="headerlink" title="数据精度"></a>数据精度</h1><h2 id="int-xxx"><a href="#int-xxx" class="headerlink" title="(int)xxx"></a>(int)xxx</h2><p>例如：　<code>( int ) 3.1415926 </code> 表示将<code>double</code> 类型的数据<code>3.1415926</code> 强制转换为 int 类型，结果为：<code>3</code>。</p><h2 id="Convert-ToInt32-与-int-Parse-的区别"><a href="#Convert-ToInt32-与-int-Parse-的区别" class="headerlink" title="Convert.ToInt32() 与 int.Parse() 的区别"></a>Convert.ToInt32() 与 int.Parse() 的区别</h2><p>没搞清楚 <strong>Convert.ToInt32</strong> 和 <strong>int.Parse()</strong> 的细细微区别时千万别乱用，否则可能会产生无法预料的结果.<br>举例来说：假如从 url 中取一个参数 page 的值，我们知道这个值是一个 int，所以即可以用 <strong>Convert.ToInt32(Request.QueryString[“page”])</strong>，也可以用 <strong>int.Parse(Request.QueryString[“page”])</strong>，但是如果 page 这个参数在 url 中不存在，那么前者将返回 0，0 可能是一个有效的值，所以你不知道 url 中原来根本就没有这个参数而继续进行下一下的处理，这就可能产生意想不到的效果，而用后一种办法的话没有 page 这个参数会抛出异常，我们可以捕获异常然后再做相应的处理，比如提示用户缺少参数，而不是把参数值当做 0 来处理。</p><ol><li><p>这两个方法的最大不同是它们对 null 值的处理方法： <strong>Convert.ToInt32(null)</strong> 会返回 0 而不会产生任何异常，但 <strong>int.Parse(null)</strong> 则会产生异常。</p></li><li><p>对数据进行四舍五入时候的区别</p><ol><li>Convert.ToInt32(double value) 如果 value 为两个整数中间的数字，则返回二者中的偶数；即 3.5 转换为 4，4.5 转换为 4，而 5.5 转换为 6。不过 4.6 可以转换为 5，4.4 转换为 4 。</li><li>int.Parse(“4.5”) 直接报错:<strong>“输入字符串的格式不正确”</strong>。</li><li>int(4.6) &#x3D; 4 Int 转化其他数值类型为 Int 时没有四舍五入，强制转换。</li></ol></li><li><p>对被转换类型的区别 <strong>int.Parse</strong> 是转换 String 为 int, <strong>Convert.ToInt32</strong> 是转换继承自 Object 的对象为 int 的(可以有很多其它类型的数据)。你得到一个 object 对象, 你想把它转换为 int, 用 <strong>int.Parse</strong> 就不可以, 要用 <strong>Convert.ToInt32</strong>。</p></li></ol><h2 id="Convert-ToInt32-、int-TryParse-和-int-Parse"><a href="#Convert-ToInt32-、int-TryParse-和-int-Parse" class="headerlink" title="Convert.ToInt32() 、int.TryParse() 和 int.Parse()"></a>Convert.ToInt32() 、int.TryParse() 和 int.Parse()</h2><ol><li><p>对于转换对象，Convert.ToInt32() 可以为多种类型（例出数字类型外 bool，DateTime 等），int.TryParse() 和 int.Parse() 只能是整型字符串类型（即各种整型 ToString() 之后的形式，不能为浮点型，否则 int.Parse() 就会出现输入的字符串格式不正确的错误，int.TryParse() 也会返回 false，输出参数为 0 ，(int)只能是数字类型（例 float,int,uint等）；</p></li><li><p>对于空值 NULL，从运行报错的角度讲，(int) 强制转换和 int.Parse() 都不能接受 NULL；Convert.ToInt32() 其实是在转换前先做了一个判断，参数如果为 NULL，则直接返回 0，否则就调用 int.Parse() 进行转换，int.TryParse() 其实是对 int.Parse() 做了一个异常处理，如果出现异常则返回 false，并且将输出参数返回 0；</p></li><li><p>针对于浮点型的取舍问题，浮点型只有 Convert.ToInt32() 和 (int) 能进行转换，但是也是进行取舍了的，Convert.ToInt32() 采取的取舍是进行四舍五入，而 (int) 则是截取浮点型的整数部分，忽略小数部分，例如 Convert.ToInt32(1.499d) 和 (int)1.499d 都返回 1，Convert.ToInt32(1.5d) 返回 2，而 (int)1.5d 还是返回 1；</p></li><li><p>关于溢出，将大的数据类型转换为小的数据类型时 Convert.ToInt32() 和 int.Parse() 都会报溢出错误，值对于 Int32 太大或太小，而 (int) 不报错，但是返回值为 -1。</p></li></ol><p>如此可见，我们在进行数据转换前选择转换方法要谨慎，如果是数字类型可以考虑直接用(int)强制转换，如果是整型字符串类型的，考虑用 int.Parse() 进行转换，如果不是这两种类型，再考虑用 Convert.ToInt32() 进行转换。</p><h1 id="Convert-ToDouble与Double-Parse的区别。"><a href="#Convert-ToDouble与Double-Parse的区别。" class="headerlink" title="Convert.ToDouble与Double.Parse的区别。"></a>Convert.ToDouble与Double.Parse的区别。</h1><p>实际上 Convert.ToDouble 与 Double.Parse 较为类似，实际上 Convert.ToDouble内部调用了 Double.Parse：**</p><h2 id="对于参数为null的时候："><a href="#对于参数为null的时候：" class="headerlink" title="对于参数为null的时候："></a>对于参数为null的时候：</h2><ul><li>Convert.ToDouble参数为 null 时，返回 0.0；</li><li>Double.Parse 参数为 null 时，抛出异常。</li></ul><h2 id="对于参数为””的时候："><a href="#对于参数为””的时候：" class="headerlink" title="对于参数为””的时候："></a>对于参数为””的时候：</h2><ul><li>Convert.ToDouble参数为 “” 时，抛出异常；</li><li>Double.Parse 参数为 “” 时，抛出异常。</li></ul><h2 id="其它区别："><a href="#其它区别：" class="headerlink" title="其它区别："></a>其它区别：</h2><ul><li>Convert.ToDouble可以转换的类型较多；</li><li>Double.Parse 只能转换数字类型的字符串。</li><li>Double.TryParse 与 Double.Parse 又较为类似，但它不会产生异常，转换成功返回 true，转换失败返回 false。最后一个参数为输出值，如果转换失败，输出值为 0.0。</li></ul><p>附测试代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConsoleApplication1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//string a = &quot;0.2&quot;;</span></span><br><span class="line">                <span class="comment">//string a = null;</span></span><br><span class="line">                <span class="built_in">string</span> a = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">double</span> d1 = Double.Parse(a);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception err)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;d1转换出错:&quot;</span> + err.Message);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">double</span> d2 = Convert.ToDouble(a);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception err)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;d2转换出错:&quot;</span> + err.Message);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">double</span> d3;</span><br><span class="line">                    Double.TryParse(a,<span class="keyword">out</span> d3);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception err)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;d3转换出错:&quot;</span> + err.Message);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.ReadKey();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h1><ul><li>装箱：值类型转换为对象类型, 实例：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> val = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">object</span> obj = val;<span class="comment">//整型数据转换为了对象类型（装箱）</span></span><br></pre></td></tr></table></figure><ul><li>拆箱：之前由值类型转换而来的对象类型再转回值类型, 实例：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> val = <span class="number">8</span>;</span><br><span class="line"><span class="built_in">object</span> obj = val;<span class="comment">//先装箱</span></span><br><span class="line"><span class="built_in">int</span> nval = （<span class="built_in">int</span>）obj;<span class="comment">//再拆箱</span></span><br></pre></td></tr></table></figure><p>只有装过箱的数据才能拆箱</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（5）数据类型</title>
      <link href="/2018/01/08/CSharp/05CSharp_DateType/"/>
      <url>/2018/01/08/CSharp/05CSharp_DateType/</url>
      
        <content type="html"><![CDATA[<h1 id="C-数据类型"><a href="#C-数据类型" class="headerlink" title="C# 数据类型"></a>C# 数据类型</h1><p>在 C# 中，变量分为以下几种类型：</p><ul><li>值类型（Value types）</li><li>引用类型（Reference types）</li><li>指针类型（Pointer types）<br>注：后面我们看到的这些数据类型，实际上是简化符号，真正意义上这些数据类型在.NET Framework 中有具体的对应类，如：int 对应的是System.Int32</li></ul><hr><h1 id="值类型（Value-types）"><a href="#值类型（Value-types）" class="headerlink" title="值类型（Value types）"></a>值类型（Value types）</h1><p>值类型变量可以直接分配给一个值。<br>它们是从类 System.ValueType 中派生的。<br>值类型直接包含数据。比如 int、char、float，它们分别存储数字、字符、浮点数。当您声明一个 int 类型时，系统分配内存来存储值。<br>直接存储值，在栈上存储其值。值类型变量声明后，不管是否已经赋值，编译器为其分配内存。<br>如需得到一个类型或一个变量在特定平台上的准确尺寸，可以使用 <code>sizeof </code>方法。表达式 <code>sizeof(type) </code>产生以字节为单位存储对象或类型的存储尺寸。</p><h2 id="整数-8种-："><a href="#整数-8种-：" class="headerlink" title="整数(8种)："></a>整数(8种)：</h2><table><thead><tr><th align="center">类型</th><th align="center">CTS</th><th align="center">占据空间</th><th align="center">说明</th><th align="center">数据范围</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">sbyte</td><td align="center">System.Sbyte</td><td align="center">1 Byte</td><td align="center">8位有符号的整数</td><td align="center">-128~127(-2<sup>7</sup>——2<sup>7</sup>-1)</td><td align="center">0</td></tr><tr><td align="center">short</td><td align="center">System.Int16</td><td align="center">2 Byte</td><td align="center">16位有符号的整数</td><td align="center">-128~127(-2<sup>16</sup>&gt;——2<sup>16</sup>-1)</td><td align="center">0</td></tr><tr><td align="center">int</td><td align="center">System.Int32</td><td align="center">4 Byte</td><td align="center">32位有符号的整数</td><td align="center">-2147483648~2147483647(-2<sup>31</sup>&gt;——2<sup>31</sup>-1)</td><td align="center">0</td></tr><tr><td align="center">long</td><td align="center">System.Int64</td><td align="center">8 Byte</td><td align="center">64位有符号的整数</td><td align="center">-2<sup>63</sup>&gt;——2<sup>63</sup>-1</td><td align="center">0L</td></tr><tr><td align="center">byte</td><td align="center">System. Byte</td><td align="center">1 Byte</td><td align="center">8位无符号的整数</td><td align="center">0——255(0~2<sup>8</sup>-1)</td><td align="center">0</td></tr><tr><td align="center">ushort</td><td align="center">System. UInt16</td><td align="center">2 Byte</td><td align="center">16位无符号的整数</td><td align="center">0——2<sup>16</sup>-1</td><td align="center">0</td></tr><tr><td align="center">uint</td><td align="center">System. UInt32</td><td align="center">4 Byte</td><td align="center">32位无符号的整数</td><td align="center">0——2<sup>32</sup>-1</td><td align="center">0</td></tr><tr><td align="center">ulong</td><td align="center">System. UInt64</td><td align="center">8 Byte</td><td align="center">64位无符号的整数</td><td align="center">0——2<sup>64</sup>-1</td><td align="center">0</td></tr></tbody></table><p>存储范围（二进制 字节 和 位 ）<br>数据范围不一样<br>有符号<br>无符号<br>C#整数的默认类型：int  </p><h2 id="浮点类型-3种-："><a href="#浮点类型-3种-：" class="headerlink" title="浮点类型(3种)："></a>浮点类型(3种)：</h2><table><thead><tr><th align="center">类型</th><th align="center">CTS</th><th align="center">占据空间</th><th align="center">说明</th><th align="center">数据范围</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">float</td><td align="center">System.Single</td><td align="center">4 Byte</td><td align="center">32位单精度</td><td align="center">-3.4 x 10<sup>38</sup>  到 + 3.4 x 10<sup>38</sup></td><td align="center">0.0F</td></tr><tr><td align="center">double</td><td align="center">System.Double</td><td align="center">8 Byte</td><td align="center">64位双精度</td><td align="center">(+&#x2F;-)5.0 x 10<sup>-324</sup> 到 (+&#x2F;-)1.7 x 10<sup>308</sup></td><td align="center">0.0D</td></tr><tr><td align="center">decimal</td><td align="center">System.Decimal</td><td align="center">16 Byte</td><td align="center">128位高精度<br> 十进制数表示法</td><td align="center">±1.0x10e-28至±7.9x10e-28</td><td align="center">0.0M</td></tr></tbody></table><p>单精度和双精度的区别：小数点后小数位的处理上<br>小数类型常用:float double<br>小数默认类型：double<br>如果要强调float，要数字的后面加大写或小写F</p><h2 id="bool-布尔-类型"><a href="#bool-布尔-类型" class="headerlink" title="bool(布尔)类型"></a>bool(布尔)类型</h2><table><thead><tr><th align="center">类型</th><th align="center">CTS</th><th align="center">占据空间</th><th align="center">说明</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">bool</td><td align="center">System. Boolean</td><td align="center">1 Byte</td><td align="center">表示true或false</td><td align="center">false</td></tr></tbody></table><p>布尔类型值只有两种：true  false<br>                  真     假<br>场景：作为判断条件</p><h2 id="char字符类型"><a href="#char字符类型" class="headerlink" title="char字符类型"></a>char字符类型</h2><table><thead><tr><th align="center">类型</th><th align="center">CTS</th><th align="center">占据空间</th><th align="center">说明</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">System.Char</td><td align="center">2 Byte</td><td align="center">表示一个16位的(Unicode)字符</td><td align="center">‘\0’</td></tr></tbody></table><p>字符型只能表示任意的单个字符<br>这单个字符：汉字，字母，数字，符号，空格<br>将具体的单个字符放在一对单引号中。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">char</span>  c1  =  <span class="string">&#x27;a&#x27;</span> ; </span><br></pre></td></tr></table></figure><p> ‘我’    ‘!’    ‘(‘<br>注意和字符串区分<br>“ “ :双引号，放到双引号中的内容都原样打印字符串</p><hr><h1 id="引用类型（Reference-types）"><a href="#引用类型（Reference-types）" class="headerlink" title="引用类型（Reference types）"></a>引用类型（Reference types）</h1><p>存储对其值的引用，在栈上存储地址，在堆上存储值。<br>当声明一个类时，只在栈中分配一小片内存用于容纳一个地址，而此时并没有为其分配堆上的内存空间。<br>当使用 new 创建一个类的实例时，分配堆上的空间，并把堆上空间的地址保存到栈上分配的小片空间中。<br>引用类型不包含存储在变量中的实际数据，但它们包含对变量的引用。<br>换句话说，它们指的是一个内存位置。使用多个变量时，引用类型可以指向一个内存位置。如果内存位置的数据是由一个变量改变的，其他变量会自动反映这种值的变化。<br>内置的引用类型有：object、dynamic 和 string。</p><table><thead><tr><th align="center">类型</th><th align="center">CTS</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">object</td><td align="center">System.0bject</td><td align="center">所有类型都是从它派生而来的</td></tr><tr><td align="center">dynamic</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">string</td><td align="center">System.String</td><td align="center">字符串</td></tr></tbody></table><h2 id="对象（Object）类型"><a href="#对象（Object）类型" class="headerlink" title="对象（Object）类型"></a>对象（Object）类型</h2><p>对象（Object）类型 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。</p><p>当一个值类型转换为对象类型时，则被称为 装箱；另一方面，当一个对象类型转换为值类型时，则被称为 拆箱。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span> obj;</span><br><span class="line">obj = <span class="number">100</span>; <span class="comment">// 这是装箱</span></span><br></pre></td></tr></table></figure><h2 id="动态（Dynamic）类型"><a href="#动态（Dynamic）类型" class="headerlink" title="动态（Dynamic）类型"></a>动态（Dynamic）类型</h2><p>您可以存储任何类型的值在动态数据类型变量中。这些变量的类型检查是在运行时发生的。<br>声明动态类型的语法：<br><code>dynamic &lt;variable_name&gt; = value;</code><br>例如：<code>dynamic d = 20;</code><br>动态类型与对象类型相似，但是对象类型变量的类型检查是在编译时发生的，而动态类型变量的类型检查是在运行时发生的。</p><h2 id="字符串（String）类型"><a href="#字符串（String）类型" class="headerlink" title="字符串（String）类型"></a>字符串（String）类型</h2><p>字符串（String）类型 允许您给变量分配任何字符串值。字符串（String）类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串（String）类型的值可以通过两种形式进行分配：引号和 @引号。</p><p>例如：</p><p>String str &#x3D; “runoob.com”;<br>一个 @引号字符串：</p><p>@”runoob.com”;<br>C# string 字符串的前面可以加 @（称作”逐字字符串”）将转义字符（\）当作普通字符对待，比如：</p><p>string str &#x3D; @”C:\Windows”;<br>等价于：</p><p>string str &#x3D; “C:\Windows”;<br>@ 字符串中可以任意换行，换行符及缩进空格都计算在字符串长度之内。</p><p>string str &#x3D; @”&lt;script type&#x3D;””text&#x2F;javascript””&gt;<br>    <!--    --><br></script>“;<br>用户自定义引用类型有：class、interface 或 delegate。我们将在以后的章节中讨论这些类型。</p><hr><h1 id="指针类型（Reference-types）（不安全）"><a href="#指针类型（Reference-types）（不安全）" class="headerlink" title="指针类型（Reference types）（不安全）"></a>指针类型（Reference types）（不安全）</h1><p>C#为了类型安全，默认并不支持指针。</p><table><thead><tr><th align="center">定义指针</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">int* p</td><td align="center">整形指针</td></tr><tr><td align="center">int** p</td><td align="center">指向整形指针的指针</td></tr><tr><td align="center">char* c</td><td align="center">指向字符的指针</td></tr><tr><td align="center">int*[] arr</td><td align="center">整形一维数组指针</td></tr></tbody></table><p>使用指针的方法要加上unsafe<br>而且项目也要加上unsafe修饰才能编译</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>值类型：所谓值类型，是以<mark class="hl-label blue">“栈”</mark>的形式存储的，它将数据的地址，也可以认为是数据和命名放在一起的；<br>引用类型：所谓引用类型，是以<mark class="hl-label red">“堆”</mark>，它将数据的地址存储在<mark class="hl-label blue">“栈”</mark>中，而数据具体内容存储在<mark class="hl-label red">“堆”</mark>中，然后将<mark class="hl-label blue">“栈”</mark>中的数据名用一个指针指向<mark class="hl-label red">“堆”</mark>中它相应的内容，如此一来，它就将数据和内容分开存储了。<br>指针类型:指针类型变量存储另一种类型的内存地址。</p><h2 id="值类型"><a href="#值类型" class="headerlink" title="值类型"></a>值类型</h2><table><thead><tr><th align="center">值类型</th></tr></thead><tbody><tr><td align="center">struct 结构</td></tr><tr><td align="center">enum 枚举</td></tr><tr><td align="center">整数、浮点数、字符型、布尔型</td></tr></tbody></table><ol><li>值类型分为以下两种： 结构和 枚举<br>值类型中的”结构”又包括了13种基本数据类型：整数、浮点数、字符型、布尔类型四种数据      </li><li>这13种基本的数据类型，存储在栈内存中，且存储的是具体的数据值   </li><li>不同数据类型占据的内存大小各不相同，合理的确定数据的类型可避内存资源被无谓浪费。</li></ol><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><table><thead><tr><th align="center">引用类型</th></tr></thead><tbody><tr><td align="center">object</td></tr><tr><td align="center">string</td></tr><tr><td align="center">class 类</td></tr></tbody></table><ol><li>引用类型可以处理以下两种类型的数据，分别是：<br> object、string</li><li>这2种引用类型，存储在堆栈中，且存储的是在堆内存<br> 中的引用（地址）</li></ol><h2 id="int-类型"><a href="#int-类型" class="headerlink" title="int 类型"></a>int 类型</h2><p>int 是C#中最常用的整数类型。<br>声明一个 int 类型的变量后，在内存会开辟 4 个字节的空间来存储变量中的数据；<br>int 能够表示的数据范围：-2^31 —— 2^31-1 ,即：-2147483648 ~ 2147483648</p><p>整数直接量就是能直接写出的整数，又称为整数字面量；<br>    如下： int    age  &#x3D;  20 ，20 就是直接量</p><p>关于整数的直接量，需要注意如下要点：<br>整数的直接量的类型默认为int类型，如果直接写出的整 数超过了int所能表示的数据范围，则会出现错误；<br>如果一个整数是int、uint、long或是ulong没有任何显式的声明，则该变量默认为int类型。若要指定其他整数 类型，可在数字后面加类型的缩略表示<br>除将一整数赋值给int外，还可将二进制（以0B或0b开头）八进制（以0开头）、十六进制（以0X或0x）数据赋值。</p><h2 id="int-运算"><a href="#int-运算" class="headerlink" title="int 运算"></a>int 运算</h2><p>两个整数相除，如果结果是小数，会自动舍弃小数，只取整数部分（直接舍弃小数，不四舍五入）。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> divRes1 = <span class="number">6</span>/<span class="number">3</span>;</span><br><span class="line">Console.WriteLine( divRes1);<span class="comment">//divRes1值2</span></span><br><span class="line"><span class="built_in">int</span> divRes2 = <span class="number">5</span>/<span class="number">3</span> ;</span><br><span class="line">Console.WriteLine( divRes2);<span class="comment">//divRes2值1</span></span><br><span class="line"><span class="built_in">int</span> num1 = <span class="number">87</span> ， num2 = <span class="number">23</span>;</span><br><span class="line"><span class="built_in">int</span> per1 = num1 / num2 *<span class="number">100</span> ;</span><br><span class="line">Console.WriteLine( per1 ); <span class="comment">//per1值300</span></span><br><span class="line">per1 = num2 / num1 *<span class="number">100</span>;</span><br><span class="line">Console.WriteLine( per1 ); <span class="comment">//per1值0</span></span><br></pre></td></tr></table></figure><p>两个整数进行算术运算的溢出：<br>    两个整数进行运算时，结果可能会超过整数范围，造成数据溢出的情况。例如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> oneNum = <span class="number">2147483647</span>;</span><br><span class="line"><span class="built_in">int</span> twoNum = <span class="number">-2147483648</span>;</span><br><span class="line">oneNum = oneNum + <span class="number">1</span>;</span><br><span class="line">twoNum = twoNum - <span class="number">1</span>;</span><br><span class="line">Console.WriteLine( <span class="string">&quot;oneNum &#123;0&#125;&quot;</span>,oneNum );</span><br><span class="line">Console.WriteLine( <span class="string">&quot;twoNum &#123;0&#125;&quot;</span>,twoNum );</span><br></pre></td></tr></table></figure><h2 id="float-类型"><a href="#float-类型" class="headerlink" title="float 类型"></a>float 类型</h2><p>float 是C#中用于表示浮点型数的一种类型，”单精度”；<br>float 一般用于表示较小的浮点数，且精度较低；<br>一个float类型的数据，在内存占用 4 个字节；<br>浮点数默认的直接量（字节量）是 double 双精度类型，所以使用float 定义一个浮点数时，需要在具体数字后面加上float的表示符f，（大小写均可）<br>float 类型的数据的赋值方法：</p><ol><li>常用写法，如：   float  height  &#x3D;  1.75f ；</li><li>科学计数法，使用 E 或 e，如：<br><code>float   f  =  1.25E02 ;  // 表示1.25乘以10的2次方 </code></li></ol><p>定义两个float类型的变量 n1和n2，用于存储两个操作数，然后计算这两个数字的和与差（n1的值1.1，n2的值2.2）。　</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">float</span> n1 = <span class="number">2.0F</span>;</span><br><span class="line"><span class="built_in">float</span> n2 = <span class="number">0.9f</span> ;</span><br><span class="line"><span class="built_in">float</span> addResult = n1 + n2 ;</span><br><span class="line"><span class="built_in">float</span> subResult = n1 - n2;</span><br><span class="line">Console.WriteLine( addResult );</span><br><span class="line">Console.WriteLine( subResult );</span><br></pre></td></tr></table></figure><h2 id="double-类型"><a href="#double-类型" class="headerlink" title="double 类型"></a>double 类型</h2><p>double类型，是C#中默认的小数类型<br>double类型，称为双精度小数<br>使用double类型描述小数时，小数后面省略了大写或小写的字母D　<br>C#中的double类型，运算时数据不准确</p><p>程序在操作数据时，底层处理的都是二进制数据。在二进制系统中，只能使用0和1，故二进制中是无法精确的表示1&#x2F;10(十分之一),就好像十进制无法精确的表示1&#x2F;3一样。所以在二进制中表示10进制的小数时，会存在一些舍入误差。所以一般不建议使用 double 或 float　来进行一些精确数据运算的场合或行业，如：银行系统，工程图纸等方面。</p><h2 id="bool-类型"><a href="#bool-类型" class="headerlink" title="bool 类型"></a>bool 类型</h2><p>使用 bool 类型进行逻辑运算，表示给定的某条件是否成立。<br>bool 类型的运算结果只有两种类型：　true 或 false ; true表示条件成立，false 表示条件不成立；<br>bool 类型的默认值为：false<br>bool 值不能和整数值进行相互转换；</p><p>bool 在程序中和生活中具体使用场景有以下两种：</p><ul><li>场景一： 用于程序的流程控制中的条件（if|while等）;<br>  请看以下一个生活情景：<br>  如果明天下雨，我们就在室内玩，不下雨，我们在室外玩。上面这个生活场景中，”明天是否下雨“成为问题的关键</li><li>场景二： bool 型变量经常用于存储关系表达式的运算结果；关系表达式，实质就是两个变量的值比较大小等。</li></ul><h2 id="string-类型"><a href="#string-类型" class="headerlink" title="string 类型"></a>string 类型</h2><p>字符串（string）类型 允许您给变量分配任何字符串值。字符串（string）类型是 System.String 类的别名。它是从对象（Object）类型派生的。<br>初期阶段，对字符串的掌握只要明白字符串定义时使用双引号括起来，即“”，双引号中可以写任意长度的内容，当然也可以不写。例如：定义一个表示学生姓名的变量，变量名name,值为Lucy</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>    name  =  “Lucy”; </span><br></pre></td></tr></table></figure><h1 id="数据类型其它操作"><a href="#数据类型其它操作" class="headerlink" title="数据类型其它操作"></a>数据类型其它操作</h1><h2 id="值类型求最大值-最小值"><a href="#值类型求最大值-最小值" class="headerlink" title="值类型求最大值|最小值"></a>值类型求最大值|最小值</h2><p>上面学的13种值类型中大多都支持<code>MaxValue</code>和<code>MinValue</code> 字段，表示给定的类型的存储范围。如下</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"> stringlargs </span>)</span>&#123;</span><br><span class="line"><span class="built_in">int</span> intMax = <span class="built_in">int</span>.MaxValue ;<span class="comment">//获取int型最大值</span></span><br><span class="line"><span class="built_in">int</span> intMin = <span class="built_in">int</span>.MinValue ;<span class="comment">//获取int型最小值</span></span><br><span class="line"><span class="built_in">double</span> doubleMax = <span class="built_in">double</span>.MaxValue ;</span><br><span class="line"><span class="built_in">double</span> doubleMin = <span class="built_in">double</span>.MinValue ;</span><br><span class="line"><span class="built_in">double</span> positive = <span class="built_in">double</span>.PositiveInfinity ;</span><br><span class="line"><span class="built_in">double</span> negative = <span class="built_in">double</span>.NegativeInfinity ;</span><br></pre></td></tr></table></figure><h2 id="值类型占用字节数"><a href="#值类型占用字节数" class="headerlink" title="值类型占用字节数"></a>值类型占用字节数</h2><p>基本语法如下：<code>sizeof</code> ( 类型说明符 )<br>　用于返回一个对象或者类型在内存中所占的字节数。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"> stringlargs </span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//获取int类型在内存中占用的字节数</span></span><br><span class="line">Console.WriteLine( <span class="keyword">sizeof</span> ( <span class="built_in">int</span> ) ); <span class="comment">// 4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="栈和堆"><a href="#栈和堆" class="headerlink" title="栈和堆"></a>栈和堆</h1><p>程序运行时，它的数据必须存储在内存中，一个数据项需要多大的内存、存储在什么地方、以及如何存储都依赖于数据项的类型。<br>运行中的程序使用两个内存区域来存储数据：栈和堆。</p><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><p>　　栈是一个内存数组，是一个LIFO（last-in、first-out，后进先出）的数据结构，栈存储3种类型的数据：分别是值类型变量的值；程序当前的执行环境；传递给方法的参数。<br>    栈有如下几个普遍特征，分别是：数据只能从栈的顶端插入与删除；把数据放到栈顶称为入栈；从栈顶删除数据称为出栈。</p><h2 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h2><p>　　堆是一块内存区域，在堆里可以分配大块的内存用于存储引用类型对象，与栈不同，堆里的内存能够以任意顺序存入和移除。虽然程序可以在堆里保存数据，但并不能显式的删除它们，CLR的自动GC（Garbage Collector，垃圾收集器）在判断出程序的代码将不会再访问某数据项时，自动清除无主的堆对象。</p><h1 id="C-中值类型和引用类型表格（含自定义）"><a href="#C-中值类型和引用类型表格（含自定义）" class="headerlink" title="C#中值类型和引用类型表格（含自定义）"></a>C#中值类型和引用类型表格（含自定义）</h1><table><thead><tr><th align="center"></th><th align="center">值类型</th><th align="center">引用类型</th></tr></thead><tbody><tr><td align="center">预定义类型</td><td align="center">Sbyte、byte、float、short、ushort、double、int、uint、char、long、ulong、decimal、bool</td><td align="center">Object、string、dynamic</td></tr><tr><td align="center">用户定义类型</td><td align="center">Struct、enum</td><td align="center">Class、interface、delegate、array</td></tr></tbody></table><h1 id="值类型和引用类型的区别（C-验证）"><a href="#值类型和引用类型的区别（C-验证）" class="headerlink" title="值类型和引用类型的区别（C#验证）"></a>值类型和引用类型的区别（C#验证）</h1><ol><li>它们存储的位置不一样</li><li>如果是引用类型，当两个对象指向同一个地方，修改某一个的时候，其它对象的值会发生改变</li><li>如果是值类型，将互不干扰</li></ol><p>我们来看下面一段代码：</p><ul><li>首先在类中声明一个class类，和一个struct结构：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">refTypeAndvalueType</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span>定义一个结构,结构名为SomeValue</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">struct</span> SomeValue</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个整数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> NurmberA;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">refTypeAndvalueType</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span>定义一个类,类名为SomeClass</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SomeClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//定义一个整数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> NurmberA;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 并使用在程序入口调用它们</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">namespace</span> <span class="title">refTypeAndvalueType</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">program</span>&#123;</span><br><span class="line">         <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">           <span class="comment">// 第一步:使用SomeClass类，创建一个名为s1的对象，并为对象中的变量赋值</span></span><br><span class="line">            SomeClass s1 = <span class="keyword">new</span> SomeClass();</span><br><span class="line">            s1.NumberA = <span class="number">12</span>;</span><br><span class="line">            <span class="comment">//第二步:使用SomeValue结构，创建一个名为r1的对象，并为对象中的变量赋值</span></span><br><span class="line">            SomeValue r1 = <span class="keyword">new</span> SomeValue();</span><br><span class="line">            r1.NumberA = <span class="number">16</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们来看一看，它们在内存当中是如何存储的？<br><img src="/images/CSharp/02CSharp01.png"><br>从这张图可以看出，class(类）实例化出来的对象，指向了内存堆中分配的空间<br>struct(结构) 实例化出来的对象，是在内存栈中分配<br>接下来，我们再来在上面的程序做如下修改：<br> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">namespace</span> <span class="title">refTypeAndvalueType</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">program</span>&#123;</span><br><span class="line">         <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">             <span class="comment">// 第一步:使用SomeClass类，创建一个名为s1的对象，并为对象中的变量赋值</span></span><br><span class="line">            SomeClass s1 = <span class="keyword">new</span> SomeClass();</span><br><span class="line">            s1.NumberA = <span class="number">12</span>;</span><br><span class="line">            <span class="comment">//声明一个类对象，名为s2，把s1中的对象赋值给s1</span></span><br><span class="line">            SomeClass s2 = s1;</span><br><span class="line">            s2.NumberA = <span class="number">222</span>;            <span class="comment">// 更改s2中的变量值为222</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;s1的值为:&#123;0&#125; \t s2的值为:&#123;1&#125;&quot;</span>,s1.NumberA,s2.NumberA);</span><br><span class="line">            <span class="comment">//第二步:使用SomeVvalue结构，创建一个名为r1的对象，并为对象中的变量赋值</span></span><br><span class="line">            SomeValue r1 = <span class="keyword">new</span> SomeValue();</span><br><span class="line">            r1.NumberA = <span class="number">16</span>;</span><br><span class="line">            SomeValue r2 = r1; </span><br><span class="line">            r2.NumberA = <span class="number">666</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;r1的值为:&#123;0&#125; \t r2的值为:&#123;1&#125;&quot;</span>, r1.NumberA, r2.NumberA);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>那它们输出的结果是多少呢？请选择(   )</p><p>A、  s1的值为：12　　　s2的值为222　　r1的值为：16　　　r2的值为666<br>B、  s1的值为：12　　　s2的值为222　　r1的值为：666　　r2的值为666<br>C、  s1的值为：222　　s2的值为222　　　r1的值为：16　　r2的值为666<br>D、  s1的值为：222　　s2的值为222　　　r1的值为：666　　r2的值为666</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案</button><div class="hide-content"><p><mark class="hl-label red">Ｃ</mark></p></div></div><details class="toggle" ><summary class="toggle-button" style="">查看解析</summary><div class="toggle-content"><p>为什么会这样呢？所以我们来看一看，多个值类型和引用类型在内存里面是如何存储的，如图：<br><img src="/images/CSharp/02CSharp02.png"><br>从图中，可以看出，两个引用类型 s1,s2都指向了同一个拖管堆上的空间，<br>当某一个发生改变的时候，其于的会发生变化<br>而结构是值类型，虽然使用r2&#x3D;r1，把r1对象赋值给r2，<br>但是它会在线程栈中分配一个独立的空间，<br>当修改某一个对象的值的时候，不会影响到另一个对象</p></div></details><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#练习（1）</title>
      <link href="/2018/01/05/CSharp/04CSharp_Z01/"/>
      <url>/2018/01/05/CSharp/04CSharp_Z01/</url>
      
        <content type="html"><![CDATA[<h1 id="使用命令行的方式-打印出“大家好”"><a href="#使用命令行的方式-打印出“大家好”" class="headerlink" title="使用命令行的方式 打印出“大家好”"></a>使用命令行的方式 打印出“大家好”</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Day01_Homework1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;大家好&quot;</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="在D盘根目录下创建一个-CS文件，文件名为DemoTest1-cs"><a href="#在D盘根目录下创建一个-CS文件，文件名为DemoTest1-cs" class="headerlink" title="在D盘根目录下创建一个.CS文件，文件名为DemoTest1.cs"></a>在D盘根目录下创建一个.CS文件，文件名为DemoTest1.cs</h1><ul><li>打印数字1000</li><li>打印小数 1.1</li><li>打印“今天是2018年第一个工作日</li><li>然后编译并运行，查看结果</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Day01_Homework1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">DemoTest1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="number">1000</span>);</span><br><span class="line">            Console.WriteLine(<span class="number">1.1</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;“今天是2018年第一个工作日&quot;</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建C-控制台应用程序，项目名字：DAY01-HomeWork1"><a href="#创建C-控制台应用程序，项目名字：DAY01-HomeWork1" class="headerlink" title="创建C#控制台应用程序，项目名字：DAY01_HomeWork1"></a>创建C#控制台应用程序，项目名字：DAY01_HomeWork1</h1><h2 id="打印语句"><a href="#打印语句" class="headerlink" title="打印语句"></a>打印语句</h2><ol><li>创建 HomeWork1.cs 类，使用打印语句<br>   打印以下内容，并观察结果。<br>   10<br>   “10”<br>   10 + 10<br>   “10” + “10”</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Day01_Homework1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HomeWork1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] vs</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="number">10</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;“10”&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="number">10</span> + <span class="number">10</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;10&quot;</span> + <span class="string">&quot;10&quot;</span>);  </span><br><span class="line">            Console.ReadLine();       </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Math类提供的一些常用方法"><a href="#Math类提供的一些常用方法" class="headerlink" title="Math类提供的一些常用方法"></a>Math类提供的一些常用方法</h2><ol start="2"><li>创建 HomeWork2.cs，尝试测试：Math类提供的一些常用方法<br>  Math.Max()<br>  Math.Min()<br>  Math.Floor( -10.9 )<br>  Math.Round( )<br>  Math.Ceiling( )<br>  Sqrt(), Abs()…..</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Day01_Homework1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HomeWork2</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] arg</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(Math.Max(<span class="number">10</span>,<span class="number">2000</span>));</span><br><span class="line">            Console.WriteLine(Math.Min(<span class="number">10</span>, <span class="number">2000</span>));</span><br><span class="line">            Console.WriteLine(Math.Floor(<span class="number">-10.9</span>));</span><br><span class="line">            Console.WriteLine(Math.Round(<span class="number">10.89459</span>, <span class="number">2</span>));</span><br><span class="line">            Console.WriteLine(Math.Ceiling(<span class="number">2000.00</span>));</span><br><span class="line">            Console.WriteLine(Math.Sqrt(<span class="number">100</span>));</span><br><span class="line">            Console.WriteLine(Math.Abs(<span class="number">10</span>));</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（4）基本语法</title>
      <link href="/2018/01/05/CSharp/04CSharp_Grammar/"/>
      <url>/2018/01/05/CSharp/04CSharp_Grammar/</url>
      
        <content type="html"><![CDATA[<h1 id="C-基本语法"><a href="#C-基本语法" class="headerlink" title="C# 基本语法"></a>C# 基本语法</h1><p>C# 是一种面向对象的编程语言。在面向对象的程序设计方法中，程序由各种相互交互的对象组成。相同种类的对象通常具有相同的类型，或者说，是在相同的 class 中。</p><p>例如，以 Rectangle（矩形）对象为例。它具有 length 和 width 属性。根据设计，它可能需要接受这些属性值、计算面积和显示细节。</p><p>让我们来看看一个 Rectangle（矩形）类的实现，并借此讨论 C# 的基本语法：</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">RectangleApplication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 成员变量</span></span><br><span class="line">        <span class="built_in">double</span> length;</span><br><span class="line">        <span class="built_in">double</span> width;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Acceptdetails</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            length = <span class="number">4.5</span>;    </span><br><span class="line">            width = <span class="number">3.5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Length: &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Width: &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Area: &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">class</span> <span class="title">ExecuteRectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Rectangle r = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            r.Acceptdetails();</span><br><span class="line">            r.Display();</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尝试一下 »<br>当上面的代码被编译和执行时，它会产生下列结果：</p><p><code>Length: 4.5</code><br><code>Width: 3.5</code><br><code>Area: 15.75</code></p><h2 id="using-关键字"><a href="#using-关键字" class="headerlink" title="using 关键字"></a>using 关键字</h2><p>在任何 C# 程序中的第一条语句都是：<br><code>using System;</code><br>using 关键字用于在程序中包含命名空间。一个程序可以包含多个 using 语句。</p><h2 id="class-关键字"><a href="#class-关键字" class="headerlink" title="class 关键字"></a>class 关键字</h2><p>class 关键字用于声明一个类。</p><ul><li>基本语法：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> 类名</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//类中的内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类名的命名规范？"><a href="#类名的命名规范？" class="headerlink" title="类名的命名规范？"></a>类名的命名规范？</h2><ul><li>类名和创建的.cs文件尽量保持一致：</li><li>类应该以<code> &#123;</code> 开头，以 <code>&#125; </code>结尾，类中的内容应该写在开始大括号和结束大括号中间的任意区域。</li></ul><h2 id="类中添加主入口-Main"><a href="#类中添加主入口-Main" class="headerlink" title="类中添加主入口 Main()"></a>类中添加主入口 Main()</h2><ul><li>Main 方法的基本形式：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">   &#125;   </span><br></pre></td></tr></table></figure><ul><li><p>注：单独写一个Main单词，是没有任何实质含义的。</p></li><li><p>运行程序时，编译器首先会试图去找Main()方法，然后按照代码的编写顺序执行；当Main()执行结束时，程序就结束了，如果当前类中除了Main()中还有其它内容，其它内容是不会被执行的。</p></li></ul><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><ul><li>语句写在方法中,一条语句默认以分号结尾语句中涉及的所有标点符号，全部应该使用英文状态下符号。</li><li>一个方法中写多条语句，也可以0条语句。</li></ul><h1 id="C-中的注释"><a href="#C-中的注释" class="headerlink" title="C# 中的注释"></a>C# 中的注释</h1><h2 id="注释的分类"><a href="#注释的分类" class="headerlink" title="注释的分类"></a>注释的分类</h2><h3 id="单行注释：-注释内容"><a href="#单行注释：-注释内容" class="headerlink" title="单行注释： // 注释内容"></a>单行注释： <code>// 注释内容</code></h3><ol><li>一般是为一些语句添加单行注释；</li><li>解释作用</li></ol><h3 id="多行注释："><a href="#多行注释：" class="headerlink" title="多行注释："></a>多行注释：</h3><pre><code>    /*     * 注释内容     * 注释内容     * 注释内容     .....     */</code></pre><ol><li>程序中有多行不参与程序运行时可以为其添加多行注释      </li><li><code>/*</code>和<code>*/</code>中间没有任何空格</li></ol><h3 id="文档注释："><a href="#文档注释：" class="headerlink" title="文档注释："></a>文档注释：</h3><ul><li><p>一般类，方法或属性添加文档注释</p></li><li><p>基本语法：<br><code>/// 后面的内容自动补全</code></p></li><li><p>说明：</p></li><li><p>常用的注释：文档注释 和 单行注释</p></li></ul><h2 id="C-中-注释和-注释的区别"><a href="#C-中-注释和-注释的区别" class="headerlink" title="C# 中 &#x2F;&#x2F; 注释和 &#x2F;&#x2F;&#x2F; 注释的区别"></a>C# 中 &#x2F;&#x2F; 注释和 &#x2F;&#x2F;&#x2F; 注释的区别</h2><p><strong>&#x2F;&#x2F;&#x2F;</strong> 会被编译， <strong>&#x2F;&#x2F;</strong> 不会</p><p>所以使用 &#x2F;&#x2F;&#x2F; 会减慢编译的速度（但不会影响执行速度）</p><p>&#x2F;&#x2F;&#x2F; 会在其它的人调用你的代码时提供智能感知</p><p>&#x2F;&#x2F;&#x2F; 也是一种注释，但是这种注释主要有两种作用：</p><ul><li>1.这些注释能够生成一个XML文件。这样呢,看起来会对程序的内容一目了然。</li><li>2.以这种方式对你的类，属性，方法等等加上注释之后，当你在其他地方使用以这种方式加上的类，属性，方法等等地时候，黄色的提示框里面会把你写的注释显示出来，是你更加明白你要使用的功能的作用。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">///定义用户姓名属性，该属性为可读可写属性</span><br><span class="line">/// &lt;/summary&gt;</span><br></pre></td></tr></table></figure><p>C# 编码的时候，常常涉及代码注释，常见的注释包括两类：</p><ul><li>1）单行注释。格式：&#x2F;&#x2F; Comments</li><li>2）多行注释。格式：&#x2F;* Comments… *&#x2F;</li></ul><p>C# 引入了新的 XML 注释，即我们在某个函数前新起一行，输入 &#x2F;&#x2F;&#x2F;，VS.Net 会自动增加XML格式的注释，这里整理一下可用的XML注释。 XML 注释分为一级注释（Primary Tags）和二级注释（Secondary Tags），前者可以单独存在，后者必须包含在一级注释内部。</p><h2 id="注释的-3W-1H法则"><a href="#注释的-3W-1H法则" class="headerlink" title="注释的 3W 1H法则"></a>注释的 3W 1H法则</h2><ul><li>what: 什么是注释？<br> 代码编写过程中，为程序添加一些解释说明性的文字。这些文字性内容不会参与程序的运行，方便开发者或内部开发更好的使用代码。</li><li>why:  为什么要使用注释 ？<ol><li>良好的编程规范</li><li>帮助开发者更好的理解程序</li><li>编码过程中，某一条语句或多条语句不想参与程序运行，怎么办？注释</li></ol></li><li>when: 什么时候使用注释 ？<br> 编码过程中<br> 学习过程中</li><li>how : 注释如何使用？</li><li></li></ul><h2 id="I-一级注释"><a href="#I-一级注释" class="headerlink" title="I 一级注释"></a><strong>I 一级注释</strong></h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;remarks&gt;对类型进行描述，功能类似&lt;summary&gt;，据说建议使用&lt;remarks&gt;;</span><br><span class="line">&lt;summary&gt;对共有类型的类、方法、属性或字段进行注释；</span><br><span class="line">&lt;<span class="keyword">value</span>&gt;主要用于属性的注释，表示属性的制的含义，可以配合&lt;summary&gt;使用；</span><br><span class="line">&lt;param&gt;用于对方法的参数进行说明，格式：&lt;param name=<span class="string">&quot;param_name&quot;</span>&gt;<span class="keyword">value</span>&lt;/param&gt;；</span><br><span class="line">&lt;returns&gt;用于定义方法的返回值，对于一个方法，输入<span class="comment"><span class="doctag">///</span>后，会自动添加<span class="doctag">&lt;summary&gt;</span>、<span class="doctag">&lt;param&gt;</span>列表和<span class="doctag">&lt;returns&gt;</span>；</span></span><br><span class="line">&lt;exception&gt;定义可能抛出的异常，格式：&lt;exception cref=<span class="string">&quot;IDNotFoundException&quot;</span>&gt;；</span><br><span class="line">&lt;example&gt;用于给出如何使用某个方法、属性或者字段的使用方法；</span><br><span class="line">&lt;permission&gt;涉及方法的访问许可；</span><br><span class="line">&lt;seealso&gt;用于参考某个其它的东东:)，也可以通过cref设置属性；</span><br><span class="line">&lt;include&gt;用于指示外部的XML注释；</span><br></pre></td></tr></table></figure><h2 id="II-二级注释"><a href="#II-二级注释" class="headerlink" title="II 二级注释"></a><strong>II 二级注释</strong></h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;c&gt; <span class="keyword">or</span> &lt;code&gt;主要用于加入代码段；</span><br><span class="line">&lt;para&gt;的作用类似HTML中的&lt;p&gt;标记符，就是分段；</span><br><span class="line">&lt;pararef&gt;用于引用某个参数；</span><br><span class="line">&lt;see&gt;的作用类似&lt;seealso&gt;，可以指示其它的方法；</span><br><span class="line">&lt;list&gt;用于生成一个列表；</span><br></pre></td></tr></table></figure><p>另外，还可以自定义XML标签 </p><h2 id="让C-智能注释时显示为换行"><a href="#让C-智能注释时显示为换行" class="headerlink" title="让C#智能注释时显示为换行"></a>让C#智能注释时显示为换行</h2><p>在C#智能注释时，常常希望它能在开发时显示为换行，使得提示更加友好！原来一直想怎么实现，今天偶然发现原来如此简单，只需将<para> 标记用于诸如 <summary>、<remarks> 或 <returns> 等标记内即可。</p><p>注释在开发时换行显示的办法</p><p><para> 标记用于诸如 <summary>、<remarks> 或 <returns> 等标记内，使您得以将结构添加到文本中。 </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 基类（第1行） </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;para&gt;</span>说明：（第2行）<span class="doctag">&lt;/para&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;para&gt;</span>　　封装一些常用的成员（第3行）<span class="doctag">&lt;/para&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span><span class="doctag">&lt;para&gt;</span>　　前面要用全角空格才能显示出空格来（第4行）<span class="doctag">&lt;/para&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyBase</span> </span><br><span class="line">&#123; </span><br><span class="line">      <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span> </span></span><br><span class="line">      <span class="comment"><span class="doctag">///</span> 构造函数（第1行） </span></span><br><span class="line">      <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;para&gt;</span>说明：（第2行）<span class="doctag">&lt;/para&gt;</span> </span></span><br><span class="line">      <span class="comment"><span class="doctag">///</span><span class="doctag">&lt;para&gt;</span>　　初始化一些数据（第3行）<span class="doctag">&lt;/para&gt;</span> </span></span><br><span class="line">      <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="title">MyBase</span>()</span> </span><br><span class="line">      &#123; </span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">//<span class="doctag">TODO:</span> 在此处添加构造函数逻辑 </span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">       &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://www.runoob.com/wp-content/uploads/2018/01/1514873272-9784-20170401105511617-1669324425.png" alt="img"></p><h1 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h1><p>变量是类的属性或数据成员，用于存储数据。在上面的程序中，Rectangle 类有两个成员变量，名为 length 和 width。</p><h1 id="成员函数"><a href="#成员函数" class="headerlink" title="成员函数"></a>成员函数</h1><p>函数是一系列执行指定任务的语句。类的成员函数是在类内声明的。我们举例的类 Rectangle 包含了三个成员函数： AcceptDetails、GetArea 和 Display。</p><h1 id="实例化一个类"><a href="#实例化一个类" class="headerlink" title="实例化一个类"></a>实例化一个类</h1><p>在上面的程序中，类 ExecuteRectangle 是一个包含 Main() 方法和实例化 Rectangle 类的类。</p><h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>标识符是用来识别类、变量、函数或任何其它用户定义的项目。在 C# 中，类的命名必须遵循如下基本规则：</p><ul><li>标识符必须以字母、下划线或 @ 开头，后面可以跟一系列的字母、数字（ 0 - 9 ）、下划线（ _ ）、@。</li><li>标识符中的第一个字符不能是数字。</li><li>标识符必须不包含任何嵌入的空格或符号，比如 ? - +! # % ^ &amp; * ( ) [ ] { } . ; : “ ‘ &#x2F; \。</li><li>标识符不能是 C# 关键字。除非它们有一个 @ 前缀。 例如，@if 是有效的标识符，但 if 不是，因为 if 是关键字。</li><li>标识符必须区分大小写。大写字母和小写字母被认为是不同的字母。</li><li>不能与C#的类库名称相同。</li></ul><h1 id="C-关键字"><a href="#C-关键字" class="headerlink" title="C# 关键字"></a>C# 关键字</h1><p>关键字是 C# 编译器预定义的保留字。这些关键字不能用作标识符，但是，如果您想使用这些关键字作为标识符，可以在关键字前面加上 @ 字符作为前缀。</p><p>在 C# 中，有些关键字在代码的上下文中有特殊的意义，如 get 和 set，这些被称为上下文关键字（contextual keywords）。</p><p>下表列出了 C# 中的保留关键字（Reserved Keywords）和上下文关键字（Contextual Keywords）：</p><h2 id="C-中的保留关键字（Reserved-Keywords）"><a href="#C-中的保留关键字（Reserved-Keywords）" class="headerlink" title="C# 中的保留关键字（Reserved Keywords）"></a>C# 中的保留关键字（Reserved Keywords）</h2><table><thead><tr><th align="center">abstract</th><th align="center">as</th><th align="center">base</th><th align="center">bool</th><th align="center">break</th><th align="center">byte</th><th align="center">case</th></tr></thead><tbody><tr><td align="center">catch</td><td align="center">char</td><td align="center">checked</td><td align="center">class</td><td align="center">const</td><td align="center">continue</td><td align="center">decimal</td></tr><tr><td align="center">default</td><td align="center">delegate</td><td align="center">do</td><td align="center">double</td><td align="center">else</td><td align="center">enum</td><td align="center">event</td></tr><tr><td align="center">explicit</td><td align="center">extern</td><td align="center">false</td><td align="center">finally</td><td align="center">fixed</td><td align="center">float</td><td align="center">for</td></tr><tr><td align="center">foreach</td><td align="center">goto</td><td align="center">if</td><td align="center">implicit</td><td align="center">in</td><td align="center">in (generic modifier)</td><td align="center">int</td></tr><tr><td align="center">interface</td><td align="center">internal</td><td align="center">is</td><td align="center">lock</td><td align="center">long</td><td align="center">namespace</td><td align="center">new</td></tr><tr><td align="center">null</td><td align="center">object</td><td align="center">operator</td><td align="center">out</td><td align="center">out(generic modifier)</td><td align="center">override</td><td align="center">params</td></tr><tr><td align="center">private</td><td align="center">protected</td><td align="center">public</td><td align="center">readonly</td><td align="center">ref</td><td align="center">return</td><td align="center">sbyte</td></tr><tr><td align="center">sealed</td><td align="center">short</td><td align="center">sizeof</td><td align="center">stackalloc</td><td align="center">static</td><td align="center">string</td><td align="center">struct</td></tr><tr><td align="center">switch</td><td align="center">this</td><td align="center">throw</td><td align="center">true</td><td align="center">try</td><td align="center">typeof</td><td align="center">uint</td></tr><tr><td align="center">ulong</td><td align="center">unchecked</td><td align="center">unsafe</td><td align="center">ushort</td><td align="center">using</td><td align="center">virtual</td><td align="center">void</td></tr><tr><td align="center">volatile</td><td align="center">while</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="上下文关键字（Contextual-Keywords）"><a href="#上下文关键字（Contextual-Keywords）" class="headerlink" title="上下文关键字（Contextual Keywords）"></a>上下文关键字（Contextual Keywords）</h2><table><thead><tr><th align="center">add</th><th align="center">alias</th><th align="center">ascending</th><th align="center">descending</th><th align="center">dynamic</th><th align="center">from</th><th align="center">get</th></tr></thead><tbody><tr><td align="center">global</td><td align="center">group</td><td align="center">into</td><td align="center">join</td><td align="center">let</td><td align="center">orderby</td><td align="center">partial(type)</td></tr><tr><td align="center">partial(method)</td><td align="center">remove</td><td align="center">select</td><td align="center">set</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（3）C#程序结构基础</title>
      <link href="/2018/01/04/CSharp/03CSharp_Hello/"/>
      <url>/2018/01/04/CSharp/03CSharp_Hello/</url>
      
        <content type="html"><![CDATA[<h1 id="C-程序结构基础"><a href="#C-程序结构基础" class="headerlink" title="C# 程序结构基础"></a>C# 程序结构基础</h1><p>C# 的最小的程序结构（以C# Hello World 实例为）</p><h1 id="C-Hello-World-实例"><a href="#C-Hello-World-实例" class="headerlink" title="C# Hello World 实例"></a>C# Hello World 实例</h1><p>一个 C# 程序主要包括以下部分：</p><ul><li>命名空间声明（Namespace declaration）</li><li>一个 class</li><li>Class 方法</li><li>Class 属性</li><li>一个 Main 方法</li><li>语句（Statements）&amp; 表达式（Expressions）</li><li>注释</li><li>C# 文件的后缀为 .cs。</li></ul><p>以下创建一个 test.cs 文件，文件包含了可以打印出 “Hello World” 的简单代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldApplication</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">class</span> <span class="title">HelloWorld</span></span><br><span class="line">   &#123;</span><br><span class="line">      <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">         <span class="comment">/* 我的第一个 C# 程序*/</span></span><br><span class="line">         Console.WriteLine(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">         Console.ReadKey();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当上面的代码被编译和执行时，它会产生下列结果：<br><code>Hello World</code><br>让我们看一下上面程序的各个部分：</p><ul><li>程序的第一行 using System; - using 关键字用于在程序中包含 System 命名空间。 一个程序一般有多个 using 语句。</li><li>下一行是 namespace 声明。一个 namespace 里包含了一系列的类。HelloWorldApplication 命名空间包含了类 HelloWorld。</li><li>下一行是 class 声明。类 HelloWorld 包含了程序使用的数据和方法声明。类一般包含多个方法。方法定义了类的行为。在这里，HelloWorld 类只有一个 Main 方法。</li><li>下一行定义了 Main 方法，是所有 C# 程序的 入口点。Main 方法说明当执行时 类将做什么动作。</li><li>下一行 &#x2F;<em>…</em>&#x2F; 将会被编译器忽略，且它会在程序中添加额外的 注释。</li><li>Main 方法通过语句 Console.WriteLine(“Hello World”); 指定了它的行为。</li><li>WriteLine 是一个定义在 System 命名空间中的 Console 类的一个方法。该语句会在屏幕上显示消息 “Hello World”。</li><li>最后一行 Console.ReadKey(); 是针对 VS.NET 用户的。这使得程序会等待一个按键的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。</li></ul><p>以下几点值得注意：</p><ul><li>C# 是大小写敏感的。</li><li>所有的语句和表达式必须以分号（;）结尾。</li><li>程序的执行从 Main 方法开始。</li><li>与 Java 不同的是，文件名可以不同于类的名称。</li></ul><hr><h1 id="C-语言控制台打印语句"><a href="#C-语言控制台打印语句" class="headerlink" title="C# 语言控制台打印语句:"></a>C# 语言控制台打印语句:</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine( **** );</span><br></pre></td></tr></table></figure><ol><li>使用这条语句之前,要导入Console类所在的包: using System ;</li><li>这条打印语句表示的含义是:<br> 使用系统提供好的 Console类中的WriteLine()方法,实现打印,具体打印什么内容,放在小括号中.当然,可以打印数字\汉字\字母等.</li></ol><h1 id="导入包（程序集）-使用-using"><a href="#导入包（程序集）-使用-using" class="headerlink" title="导入包（程序集）,使用 using"></a>导入包（程序集）,使用 using</h1><ul><li>如：<code>using  System ;</code>   </li><li>using 语句可以有多条；一定要放在程序的最上面；一条using语句后面加分号表示结束。</li></ul><h1 id="编译-执行-C-程序-以VS为例"><a href="#编译-执行-C-程序-以VS为例" class="headerlink" title="编译 &amp; 执行 C# 程序(以VS为例)"></a>编译 &amp; 执行 C# 程序(以VS为例)</h1><p>用 Visual Studio.Net 编译和执行 C# 程序，请按下面的步骤进行：</p><ul><li>启动 Visual Studio。</li><li>在菜单栏上，选择 File -&gt; New -&gt; Project。</li><li>从模板中选择 Visual C#，然后选择 Windows。</li><li>选择 Console Application。</li><li>为您的项目制定一个名称，然后点击 OK 按钮。</li><li>新项目会出现在解决方案资源管理器（Solution Explorer）中。</li><li>在代码编辑器（Code Editor）中编写代码。</li><li>点击 Run 按钮或者按下 F5 键来运行程序。会出现一个命令提示符窗口（Command Prompt window），显示 Hello World。</li></ul><p>您也可以使用命令行代替 Visual Studio IDE 来编译 C# 程序：</p><ul><li>打开一个文本编辑器，添加上面提到的代码。</li><li>保存文件为 helloworld.cs。</li><li>打开命令提示符工具，定位到文件所保存的目录。</li><li>键入 csc helloworld.cs 并按下 enter 键来编译代码。</li><li>如果代码没有错误，命令提示符会进入下一行，并生成 helloworld.exe 可执行文件。</li><li>接下来，键入 helloworld 来执行程序。</li><li>您将看到 “Hello World” 打印在屏幕上。</li></ul><h1 id="输入与输出基本方法"><a href="#输入与输出基本方法" class="headerlink" title="输入与输出基本方法"></a>输入与输出基本方法</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Console.Write();      <span class="comment">//输出不换行</span></span><br><span class="line">Console.WriteLine();  <span class="comment">//输出并换行</span></span><br><span class="line">Console.ReadLine();   <span class="comment">//读取键盘输入的所有字符，返回字符串。按下回车键退出 </span></span><br><span class="line">Console.Read();       <span class="comment">//读取键盘输入的第一个字符，返回其对应的ASCII值。按下回车键退出</span></span><br><span class="line">Console.ReadKey();    <span class="comment">//等待用户按下任意键并执行退出，(此函数的作用是为了在控制台窗口停留一下，直到用户敲击键盘为止。不然运行时，&quot;Hello World!&quot; 这句话会在控制台窗口一闪而过，没法查看。)</span></span><br></pre></td></tr></table></figure><h1 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h1><p>若提示无法识别 <strong>csc</strong> 命令，需配置环境变量（Window10)</p><p>找到桌面上的“计算机”图标，右键单击，并在弹出的菜单中点击 “属性” –”高级系统设置”–”环境变量”–”系统变量”，找到变量 <strong>Path</strong>， 添加一个路径 **;C:\Windows\Microsoft.NET\Framework\v2.0.50727**（注意，多个路径使用分号(;)隔开，Windows其他版本追加在后面即可）。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/04/789192-20161022215745717-1249827908.png" alt="img"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（2）C#环境</title>
      <link href="/2018/01/03/CSharp/02CSharp_Net/"/>
      <url>/2018/01/03/CSharp/02CSharp_Net/</url>
      
        <content type="html"><![CDATA[<h1 id="C-环境"><a href="#C-环境" class="headerlink" title="C# 环境"></a>C# 环境</h1><ul><li>C# 的集成开发环境（Integrated Development Environment - IDE）</li><li>C# 是 .Net 框架的一部分，且用于编写 .Net 应用程序。</li></ul><hr><h1 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h1><h2 id="NET-简介"><a href="#NET-简介" class="headerlink" title=".NET 简介"></a>.NET 简介</h2><ul><li>.NET，是美国微软公司（Microsoft）推出的一个用于软件开发和运行平台。</li><li>.Net 框架应用程序是多平台的应用程序。框架的设计方式使它适用于下列各种语言：C#、C++、Visual Basic、Jscript、COBOL 等等。所有这些语言可以访问框架，彼此之间也可以互相交互。</li><li>.Net 框架由一个巨大的代码库组成，用于 C# 等客户端语言。</li><li>能编写出Windows 应用程序、Web 应用程序、Web 服务应用程序。</li></ul><h2 id="Net-框架的一些组件"><a href="#Net-框架的一些组件" class="headerlink" title=".Net 框架的一些组件"></a>.Net 框架的一些组件</h2><ul><li>公共语言运行库（Common Language Runtime - CLR）</li><li>.Net 框架类库（.Net Framework Class Library）</li><li>公共语言规范（Common Language Specification）</li><li>通用类型系统（Common Type System）</li><li>元数据（Metadata）和组件（Assemblies）</li><li>Windows 窗体（Windows Forms）</li><li>ASP.Net 和 ASP.Net AJAX</li><li>ADO.Net</li><li>Windows 工作流基础（Windows Workflow Foundation - WF）</li><li>Windows 显示基础（Windows Presentation Foundation）</li><li>Windows 通信基础（Windows Communication Foundation - WCF）</li><li>LINQ</li></ul><h2 id="NET-特点"><a href="#NET-特点" class="headerlink" title=".NET 特点"></a>.NET 特点</h2><ul><li>这个平台允许应用程序通过Internet进行通讯和共享数据。而不管所操作的是哪种操作系统、设备或编程语言。</li><li>从用户角度来看，不管我们使用的是电脑、手机等，都能愉快的使用同样的应用程序；</li><li>从软件开发的角度来看，由于.NET与平台无关，我们可以使用任何熟悉的编程语言进行软件开发。</li></ul><hr><h1 id="NET-Framework"><a href="#NET-Framework" class="headerlink" title=".NET Framework"></a>.NET Framework</h1><ul><li>.NET 平台的核心框架是： .NET　Framework</li><li>是 .NET　Framework 赋予了.NET丰富而又强大的功能。</li></ul><h2 id="NET-Framework-组成"><a href="#NET-Framework-组成" class="headerlink" title=".NET Framework 组成"></a>.NET Framework 组成</h2><ul><li>.NET 平台主要有几三个构造块组成：CLR、CTS、CLS</li></ul><h2 id="CLR"><a href="#CLR" class="headerlink" title="CLR"></a>CLR</h2><ol><li>从开发人员的角度来看，.NET 可以理解为一个运行库和一个全面的基础类库。</li><li>C#中，运行层的正式名称是：CLR，即：Common Language Runtime，表示的是公共语言运行库。</li><li>CLR 的主要作用是为我们定位、加载和管理.NET 类型，同时也负责一些低层细节的工作，如内存管理、应用托管、处理线程、案例检查等。</li></ol><h2 id="CTS"><a href="#CTS" class="headerlink" title="CTS"></a>CTS</h2><ol><li>.NET 平台的另一个构造块是：CTS，即：Common Type System，表示公共类型系统。</li><li>CTS 完整描述了运行库所支持的所有可能的数据类型和编程结构，指定了这些实体间如何交互、也规定了它们在 .NET 元数据格式中的表示（关于元数据，可以从网上获取参考资料）。</li></ol><h2 id="CLS"><a href="#CLS" class="headerlink" title="CLS"></a>CLS</h2><ol><li>要注意的是，一种特定的支持 .NET 的语言可能不支持 CTS 所定义的所有特性。</li><li>而 CLS 是一样相关的规范，即：Common  Language  Specification，它表示的是公共语言规范。</li><li>CLS 定义了一个让所有 .NET 语言都支持的公共类型和编程结构的子集。这样，如果构造的 .NET 类型仅公开与CLS兼容的类型，那么可以肯定其他所有支持 .NET 的语言都能使用他们。反之，如果使用了不兼容的，就不能交互。</li></ol><hr><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#笔记（1）C#简介</title>
      <link href="/2018/01/02/CSharp/01CSharp_Profile/"/>
      <url>/2018/01/02/CSharp/01CSharp_Profile/</url>
      
        <content type="html"><![CDATA[<h1 id="C-简介"><a href="#C-简介" class="headerlink" title="C# 简介"></a>C# 简介</h1><ul><li>C#，即：CSharp。Microsoft 专为 .NET 推出的高级编程语言。</li><li>微软将这门语言开发成全部面向对象，取消了面向过程，再起名字的时候，因为C&#x2F;C++在先，就起名字为“C++++”，即4个加号，为了简单，就写成了“C#”，而#就是4个加号。</li><li>“#”也读作了“sharp”，即锐利、强大的意思。</li><li>C# 是一个现代的、通用的、面向对象的编程语言，它是由微软（Microsoft）开发的，由 Ecma 和 ISO 核准认可的。</li><li>C# 是由 Anders Hejlsberg 和他的团队在 .Net 框架开发期间开发的。</li><li>C# 是专为公共语言基础结构（CLI）设计的。CLI 由可执行代码和运行时环境组成，允许在不同的计算机平台和体系结构上使用各种高级语言。</li></ul><hr><h1 id="C-成为一种广泛应用的专业语言的原因："><a href="#C-成为一种广泛应用的专业语言的原因：" class="headerlink" title="C# 成为一种广泛应用的专业语言的原因："></a>C# 成为一种广泛应用的专业语言的原因：</h1><ul><li>现代的、通用的编程语言。</li><li>面向对象。</li><li>面向组件。</li><li>容易学习。</li><li>结构化语言。</li><li>它产生高效率的程序。</li><li>它可以在多种计算机平台上编译。</li><li>.Net 框架的一部分。</li></ul><hr><h1 id="C-特点"><a href="#C-特点" class="headerlink" title="C# 特点"></a>C# 特点</h1><p>以下是C#核心特征的一部分，其中大部分特点也是其他支持 .NET 的程序语言所共有的特征。比如：</p><ul><li>不需要指针</li><li>垃圾回收器能够自动回收内存</li><li>支持基于特性的编程</li><li>构建泛型类型和泛型成员的能力</li><li>支持可选的方法参数和命名的方法参数</li><li>……</li></ul><hr><h1 id="C-强大的编程功能"><a href="#C-强大的编程功能" class="headerlink" title="C# 强大的编程功能"></a>C# 强大的编程功能</h1><ul><li>C# 是多种语言的混合体，因此它像 Java 一样语法简洁，像VB一样使用简单，像C++一样功能强大和灵活。</li></ul><h1 id="C-一些重要的功能："><a href="#C-一些重要的功能：" class="headerlink" title="C# 一些重要的功能："></a>C# 一些重要的功能：</h1><ul><li>布尔条件（Boolean Conditions）</li><li>自动垃圾回收（Automatic Garbage Collection）</li><li>标准库（Standard Library）</li><li>组件版本（Assembly Versioning）</li><li>属性（Properties）和事件（Events）</li><li>委托（Delegates）和事件管理（Events Management）</li><li>易于使用的泛型（Generics）</li><li>索引器（Indexers）</li><li>条件编译（Conditional Compilation）</li><li>简单的多线程（Multithreading）</li><li>LINQ 和 Lambda 表达式</li><li>集成 Windows</li></ul><hr><h1 id="C-有用的网站"><a href="#C-有用的网站" class="headerlink" title="C# 有用的网站"></a>C# 有用的网站</h1><ul><li><a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/">C# Programming Guide</a> - 介绍了有关关键的 C# 语言特征以及如何通过 .NET 框架访问 C# 的详细信息。</li><li><a href="https://visualstudio.microsoft.com/zh-hans/?rr=https://www.microsoft.com/zh-cn">Visual Studio </a> - 下载作为 C# 集成开发环境的 Visual Studio 的最新版本。</li><li><a href="https://www.mono-project.com/">Go Mono</a> - Mono 是一个允许开发人员简单地创建跨平台应用程序的软件平台。</li><li><a href="http://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C Sharp (programming language)</a>  - 维基百科解释 C#（编程语言）。</li><li><a href="https://www.microsoft.com/net">.NET Framework</a> - .NET Framework 下载</li></ul><hr><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS2017常用设置及快捷键</title>
      <link href="/2017/10/19/VStudio/04VStudioKey/"/>
      <url>/2017/10/19/VStudio/04VStudioKey/</url>
      
        <content type="html"><![CDATA[<h1 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h1><ul><li>如何更改字体大小?</li><li>如何更改皮肤颜色?</li><li>如何显示|隐藏行号?</li><li>如何设置编码习惯?</li><li>解决方式: 工具—选项—选项对话框</li></ul><h1 id="常用基础快捷键"><a href="#常用基础快捷键" class="headerlink" title="常用基础快捷键:"></a>常用基础快捷键:</h1><p>  Alt + Shift + Enter: 最大化<br>  Ctrl + C: 复制<br>  Ctrl + X: 剪切<br>  Ctrl + V: 粘贴<br>  Ctrl + Z: 撤销<br>  Ctrl + Y：恢复<br>  Ctrl + s: 保存<br>  Ctrl + F5 : 运行程序<br>（Ctrl+Z 撤销 Ctrl+Y 返回上一次撤销）</p><h1 id="控制台输出问题："><a href="#控制台输出问题：" class="headerlink" title="控制台输出问题："></a>控制台输出问题：</h1><ul><li>用 Ctrl+F5 将程序运行起来。<br>注意：必须使用 Ctrl+F5 （而不是 F5 ）启动项目</li><li>F5：启动调试，启动目标文件并将调试器附加到目标进程中，一般用于通过加断点调试用；<br>　Ctrl+F5：开始执行（不调试），启动目标文件，但不附加调试器。一般会单独出现一个运行结果界面</li></ul><p>说明：组合键是同时按，非组合键是按住Ctrl依次按后面的键</p><h1 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h1><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><p>  格式化全部代码       Ctrl+A+K+F<br>  格式化选中的代码     Ctrl+K+F</p><h2 id="代码自动对齐快捷键"><a href="#代码自动对齐快捷键" class="headerlink" title="代码自动对齐快捷键"></a>代码自动对齐快捷键</h2><p>  代码自动对齐快捷键<br>  C#:Ctrl + K + D<br>  C++:Ctrl+K+F(松开K后再按F)</p><h2 id="注释代码"><a href="#注释代码" class="headerlink" title="注释代码"></a>注释代码</h2><p>  注释代码             Ctrl+K+C（comment）<br>  反注释代码           Ctrl+K+U</p><h2 id="代码录入智能提示"><a href="#代码录入智能提示" class="headerlink" title="代码录入智能提示"></a>代码录入智能提示</h2><p>  组合键  Ctrl+J<br>  组合键  Alt+→</p><h2 id="移动调整代码"><a href="#移动调整代码" class="headerlink" title="移动调整代码"></a>移动调整代码</h2><p>  1）调整一行：按住Alt键同时，按方向键上或下可以调整代码的顺序<br>  2）同时移动多行：<br>a）先按住Shift+Alt 然后按上或下选中多行，有条竖线产生；<br>b）然后只松开Shift键，按上下方向键移动多行。</p><h2 id="快速隐藏或显示当前代码段"><a href="#快速隐藏或显示当前代码段" class="headerlink" title="快速隐藏或显示当前代码段"></a>快速隐藏或显示当前代码段</h2><p>  组合键：Ctrl+M,M 按两次M</p><h2 id="全屏显示-退出全屏显示"><a href="#全屏显示-退出全屏显示" class="headerlink" title="全屏显示&#x2F;退出全屏显示"></a>全屏显示&#x2F;退出全屏显示</h2><p>  组合键 SHIFT + ALT + ENTER</p><h2 id="剪切复制粘贴删除"><a href="#剪切复制粘贴删除" class="headerlink" title="剪切复制粘贴删除"></a>剪切复制粘贴删除</h2><p>  删除，复制，剪切一行代码不需要选中，只需要光标在这一行就是了</p><p>  复制 Ctrl+C<br>  剪切 Ctrl+X<br>  粘贴 Ctrl+V<br>  删除 Ctrl+L</p><h2 id="在光标所在行的上面或下面插入一行"><a href="#在光标所在行的上面或下面插入一行" class="headerlink" title="在光标所在行的上面或下面插入一行"></a>在光标所在行的上面或下面插入一行</h2><p>  配合5使用，效果更佳<br>  在当前行的上面插入一个空行 组合键：Ctrl+Enter<br>  在当前行的下面插入一个空行 组合键：Ctrl+Shift+Enter</p><h2 id="查找和替换"><a href="#查找和替换" class="headerlink" title="查找和替换"></a>查找和替换</h2><p>  查找  组合键：Ctrl+F<br>  替换  组合键：Ctrl+H</p><h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h2><p>  转小写  组合键：Ctrl+ U<br>  转大写  组合键：CTRL + SHIFT + U </p><h2 id="快速切换窗口"><a href="#快速切换窗口" class="headerlink" title="快速切换窗口"></a>快速切换窗口</h2><p>  组合键：Ctrl+Tab</p><h2 id="跳转到指定的某一行"><a href="#跳转到指定的某一行" class="headerlink" title="跳转到指定的某一行"></a>跳转到指定的某一行</h2><p>  组合键：Ctrl+G</p><h2 id="矩形区域选择"><a href="#矩形区域选择" class="headerlink" title="矩形区域选择"></a>矩形区域选择</h2><p>  组合键：Shift+Alt+鼠标拖动  （很适合区域代码块选择）</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> VStudio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vs2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS2017基础操作(以C#为例)</title>
      <link href="/2017/10/18/VStudio/03VStudioUse/"/>
      <url>/2017/10/18/VStudio/03VStudioUse/</url>
      
        <content type="html"><![CDATA[<h1 id="如何创建项目？"><a href="#如何创建项目？" class="headerlink" title="如何创建项目？"></a>如何创建项目？</h1><ol><li>起始页</li><li>文件–新建–项目</li><li>Ctrl + Shift + N</li><li>打开“新建项目”对话框，然后选择Visual C#,右侧“控制台应用”</li></ol><h1 id="如何运行类？"><a href="#如何运行类？" class="headerlink" title="如何运行类？"></a>如何运行类？</h1><ol><li>调试  — 开始执行</li><li>Ctrl + F5</li></ol><h1 id="如何添加多个类？"><a href="#如何添加多个类？" class="headerlink" title="如何添加多个类？"></a>如何添加多个类？</h1><ul><li>在资源管理器中右击项目名—添加—类</li><li>注：输入类名不用写扩展名</li></ul><h1 id="当一个项目中有多个类时，类中都有主方法时，如何选择一个主类运行？"><a href="#当一个项目中有多个类时，类中都有主方法时，如何选择一个主类运行？" class="headerlink" title="当一个项目中有多个类时，类中都有主方法时，如何选择一个主类运行？"></a>当一个项目中有多个类时，类中都有主方法时，如何选择一个主类运行？</h1><ul><li>右击当前项目—属性—应用程序—启动对象</li></ul><p><img src="/images/VStudio/%E5%90%AF%E5%8A%A8%E5%AF%B9%E8%B1%A1.png" alt="启动对象" title="启动对象">   </p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> VStudio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> vs2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS2017安装与版本对比</title>
      <link href="/2017/10/17/VStudio/02VStudioInstall/"/>
      <url>/2017/10/17/VStudio/02VStudioInstall/</url>
      
        <content type="html"><![CDATA[<h1 id="VS2017下载"><a href="#VS2017下载" class="headerlink" title="VS2017下载"></a>VS2017下载</h1><ul><li>.NET  Framework 下载：<br><a href="https://www.microsoft.com/net">https://www.microsoft.com/net</a></li><li>Visual  Studio 下载<br><a href="https://www.visualstudio.com/zh-hans/?rr=https://www.microsoft.com/zh-cn">https://www.visualstudio.com/zh-hans/?rr=https%3A%2F%2Fwww.microsoft.com%2Fzh-cn</a></li></ul><h1 id="VS2017版本功能对比"><a href="#VS2017版本功能对比" class="headerlink" title="VS2017版本功能对比"></a>VS2017版本功能对比</h1><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> VStudio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vs2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode常用设置及快捷键</title>
      <link href="/2017/10/16/VSCode/01VSCodeKey/"/>
      <url>/2017/10/16/VSCode/01VSCodeKey/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode常用快捷键"><a href="#VSCode常用快捷键" class="headerlink" title="VSCode常用快捷键"></a>VSCode常用快捷键</h1><h2 id="多行代码同时左移一个tab键"><a href="#多行代码同时左移一个tab键" class="headerlink" title="多行代码同时左移一个tab键"></a>多行代码同时左移一个tab键</h2><p>ctrl+[</p><h2 id="多行代码同时缩进一个tab键"><a href="#多行代码同时缩进一个tab键" class="headerlink" title="多行代码同时缩进一个tab键"></a>多行代码同时缩进一个tab键</h2><p>ctrl+]</p><h2 id="添加块注释"><a href="#添加块注释" class="headerlink" title="添加块注释"></a>添加块注释</h2><p>shift+alt+a</p><h2 id="添加行注释"><a href="#添加行注释" class="headerlink" title="添加行注释"></a>添加行注释</h2><p>ctrl+&#x2F;</p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>ctrl+f</p><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h2><p>ctrl+h</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> VSCode </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VS2017激活码</title>
      <link href="/2017/10/16/VStudio/01VStudioActive/"/>
      <url>/2017/10/16/VStudio/01VStudioActive/</url>
      
        <content type="html"><![CDATA[<h1 id="激活码"><a href="#激活码" class="headerlink" title="激活码"></a>激活码</h1><ul><li>Visual Studio Enterprise 2017</li><li>企业版：</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NJVYC-BMHX2-G77MM-<span class="number">4</span>XJMR-<span class="number">6</span>Q8QF </span><br></pre></td></tr></table></figure><ul><li>Visual Studio Professional 2017</li><li>专业版：</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KBJFW-NXHK6-W4WJM-CRMQB-G3CDH</span><br></pre></td></tr></table></figure><ul><li>Visual Studio Community 2017</li><li>社区版：</li><li>免费，记得登录微软账号，否则30天后会失效</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> VStudio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> solution </tag>
            
            <tag> vs2017 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git配置与使用</title>
      <link href="/2017/10/05/Git/01GitStartTop02/"/>
      <url>/2017/10/05/Git/01GitStartTop02/</url>
      
        <content type="html"><![CDATA[<h1 id="在GitHub上创建仓库"><a href="#在GitHub上创建仓库" class="headerlink" title="在GitHub上创建仓库"></a>在GitHub上创建仓库</h1><h2 id="进入官网："><a href="#进入官网：" class="headerlink" title="进入官网："></a>进入官网：</h2><ul><li>首先需要进入GitHub官网，登陆自己的账号（如果没有账号，就先注册一个，这里不再细说）。</li></ul><h2 id="创建仓库："><a href="#创建仓库：" class="headerlink" title="创建仓库："></a>创建仓库：</h2><ul><li>你可以点击右上角的<code>十</code>号，然后点击New repository即可进入创建仓库界面：</li></ul><p><img src="/images/Git/BuildRepository.png" alt="创建仓库1" title="创建仓库1"></p><ul><li>创建一个仓库，如下图所示：</li></ul><p><img src="/images/Git/CreateRepository.png" alt="创建仓库2" title="创建仓库2"></p><h2 id="记录SSH-key："><a href="#记录SSH-key：" class="headerlink" title="记录SSH key："></a>记录SSH key：</h2><ul><li>创建好的仓库如图所示：</li><li>点击绿色“Clone or download”按钮，然后会出现下面的小弹窗：</li></ul><p><img src="/images/Git/CopySSH.png" alt="记录SSH key" title="记录SSH key"></p><ul><li>记下这个地址，后面有用。</li></ul><h1 id="Git-Bash上配置SSH-key"><a href="#Git-Bash上配置SSH-key" class="headerlink" title="Git Bash上配置SSH key"></a>Git Bash上配置SSH key</h1><h2 id="安装Git客户端"><a href="#安装Git客户端" class="headerlink" title="安装Git客户端"></a>安装Git客户端</h2><ul><li>从官网下载并安装Git客户端：<br> <a href="https://git-scm.com/">https://git-scm.com/</a></li><li>整个安装过程一直点击下一步就行，还要注意不要有中文路径。</li></ul><h2 id="绑定账号："><a href="#绑定账号：" class="headerlink" title="绑定账号："></a>绑定账号：</h2><ul><li>安装完成后，打开安装好的Git Bash程序：</li><li>填写用户名</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;用户名&quot;</span></span><br></pre></td></tr></table></figure><ul><li>填写用户邮箱</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h2><ul><li>判断有无SSH key：</li></ul><p>如果你是第一次操作，是没有这个key的，你可以输入下面的命令来检查是否已经有了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br></pre></td></tr></table></figure><p>如果已经生成过了，就什么都不会显示，如果没有生成过，则会出现下面的提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">bash: <span class="built_in">cd</span>: /c/Users/XXXX/.ssh: No such file or directory</span><br></pre></td></tr></table></figure><ul><li>生成SSH密钥</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>以上代码执行之后，会让你设置密码，推荐全都不要设置，直接连按三次回车键。</p><ul><li>一般默认生成路径为 &#x2F;C&#x2F;Users&#x2F;XXXX&#x2F;.ssh</li><li>记得选择显示隐藏项目(有时会不显示)</li></ul><p><img src="/images/Git/RightHideFiles.png" alt="显示隐藏项目" title="显示隐藏项目"></p><ul><li>SSH key生成之后，按照上图所标识的路径找到这个文件：</li></ul><p><img src="/images/Git/id_ssh.png" alt="SSH" title="记录SSH"></p><ul><li>将这个文件，以文本方式打开，你会发现一个以ssh-rsa开头的字符串，如图所示</li></ul><p><img src="/images/Git/ssh-rsa.png" alt="ssh-rsa文件" title="ssh-rsa文件"><br>将这个字符串全部复制下来（注意：别忘了开头的“ssh-rsa”）</p><h1 id="本机与GitHub连接"><a href="#本机与GitHub连接" class="headerlink" title="本机与GitHub连接"></a>本机与GitHub连接</h1><h2 id="创建本地Git仓库："><a href="#创建本地Git仓库：" class="headerlink" title="创建本地Git仓库："></a>创建本地Git仓库：</h2><ul><li>在项目根目录内，点击鼠标右键</li><li>点击“Git Bash Here”，打开Git Bash 命令行界面；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><ul><li><p>你会发现你的项目文件夹内多了一个“.git”的文件夹，同时你的命令行界面后面会多一个“(master)”或“（main）”标识，表明你已经把这个文件夹设置为了Git本地仓库；</p></li><li><p>还记得最开始记下的那个GitHub上的仓库SSH地址吗？现在终于派上用场了，在命令行中键入如下命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin “你的仓库SSH地址”</span><br></pre></td></tr></table></figure><h2 id="配置GitHub上的SSH-key："><a href="#配置GitHub上的SSH-key：" class="headerlink" title="配置GitHub上的SSH key："></a>配置GitHub上的SSH key：</h2><ul><li>进入GitHub官网，登录你的账号，点击头像，在下拉框内选择“Setting”选项，如下图：</li></ul><p><img src="/images/Git/GitSetting.png" alt="Setting" title="Setting"></p><ul><li>然后在左侧菜单找到“SSH and GPG keys”选项，在右侧界面点击绿色的“New SSH Key”按钮，如下图：</li></ul><p><img src="/images/Git/addSSH.png" alt="New SSH Key" title="New SSH Key"></p><ul><li>打开的SSH key配置界面如下：</li></ul><p><img src="/images/Git/NewSSH.png" alt="添加SSH" title="添加SSH"><br>1 &#x3D; SSH key 的名字，随便填一个，你自己知道就可以了；<br>2 &#x3D; SSK key 将刚才我们复制的那个“ssh-rsa”开头的字符串粘贴进去；</p><ul><li>然后点击下方的绿色“Add SSH key”按钮，即可配置完成。</li></ul><p>到此，我们完成了GitHub配置SSH key的整个过程，下面开始操作本机与GitHub的连接。</p><h1 id="项目上传至GitHub"><a href="#项目上传至GitHub" class="headerlink" title="项目上传至GitHub"></a>项目上传至GitHub</h1><h2 id="拉取GitHub："><a href="#拉取GitHub：" class="headerlink" title="拉取GitHub："></a>拉取GitHub：</h2><ul><li>上面我们已经完成了本机与GitHub的连接，我们先在GitHub上拉取一下，键入以下命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure><h2 id="配置-gitignore文件："><a href="#配置-gitignore文件：" class="headerlink" title="配置.gitignore文件："></a>配置.gitignore文件：</h2><ul><li>不同类型的项目，配置.gitignore文件也不一样，以后写篇博客将我常用的说一下</li></ul><h2 id="提交项目到GitHub："><a href="#提交项目到GitHub：" class="headerlink" title="提交项目到GitHub："></a>提交项目到GitHub：</h2><ul><li>注意代码：<code>git add .</code> <code>add</code>与<code>.</code>中间是有一个空格的</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;你的备注信息&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><ul><li>然后你就可以去你的GitHub上仓库内刷新一下界面，就会看到你刚刚上传的工程啦</li></ul><h2 id="至此，将项目上传至GitHub的全部流程已经结束。"><a href="#至此，将项目上传至GitHub的全部流程已经结束。" class="headerlink" title="至此，将项目上传至GitHub的全部流程已经结束。"></a>至此，将项目上传至GitHub的全部流程已经结束。</h2><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub搜索关键字</title>
      <link href="/2017/10/04/Git/01GitSearch/"/>
      <url>/2017/10/04/Git/01GitSearch/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub高级搜索"><a href="#GitHub高级搜索" class="headerlink" title="GitHub高级搜索"></a>GitHub高级搜索</h1><p><a href="https://github.com/search/advanced">https://github.com/search/advanced</a></p><h1 id="通过关键字搜索"><a href="#通过关键字搜索" class="headerlink" title="通过关键字搜索"></a>通过关键字搜索</h1><ol><li>在名字里面搜索</li></ol><p>（1）搜索名字包含web的项目，<code>in:name web</code></p><p>（2）名字包含web的项目且下载数（stars数）大于3000的项目，<code>in:name web stars:&gt;3000</code></p><p>（3）名字包含web的项目且下载数（stars数）大于3000且fork数大于1000的项目，<code>in:name web stars:&gt;3000 forks:&gt;1000</code></p><ol start="2"><li>在项目**详情（readme）**里面搜索</li></ol><p>（1）<code>in:readme web</code></p><p>（2）<code>in:readme web starts:&gt;1000</code></p><ol start="3"><li>在描述里面搜索</li></ol><p>（1）<code>in:description web</code></p><p>（2）限定语言：<code>in:description web language：java</code></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令行详解</title>
      <link href="/2017/10/04/Git/01GitUseCommand/"/>
      <url>/2017/10/04/Git/01GitUseCommand/</url>
      
        <content type="html"><![CDATA[<h1 id="Git初始化"><a href="#Git初始化" class="headerlink" title="Git初始化"></a>Git初始化</h1><p>Git 全局设置:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;xxxxxx&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;xxxxxxx@xxx.com&quot;</span></span><br></pre></td></tr></table></figure><p>创建 git 仓库:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir 仓库名</span><br><span class="line">cd 仓库名</span><br><span class="line">git init </span><br><span class="line">touch README.md</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;你的备注&quot;</span><br><span class="line">git remote add origin 远程仓库地址</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>在命令行上创建新的存储库(远端新建仓库，本地初始化)<br>create a new repository on the command line</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;# 仓库名&quot; &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git branch -M master</span><br><span class="line">git remote add origin 远程仓库地址(HTTPS/SSH)</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>从命令行推送现有存储库(远端已经有仓库)<br>push an existing repository from the command line</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 远程仓库地址(HTTPS/SSH)</span><br><span class="line">git branch -M master</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>github下载的zip与远程仓库建立关联<br>How to clone git repository from its zip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">unzip &lt;repo&gt;.zip</span><br><span class="line">cd &lt;repo&gt;</span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git remote add origin https://github.com/&lt;user&gt;/&lt;repo&gt;.git</span><br><span class="line">git remote update</span><br><span class="line">git checkout master</span><br></pre></td></tr></table></figure><p>上传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;你的备注信息&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h1 id="Git常用命令行"><a href="#Git常用命令行" class="headerlink" title="Git常用命令行"></a>Git常用命令行</h1><p><img src="/images/Git/GitUseCommand.jpg" alt="Git常用命令行" title="Git常用命令行"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">git init                                                  # 初始化本地git仓库（创建新仓库）</span><br><span class="line">git config --global user.name &quot;xxx&quot;                       # 配置用户名</span><br><span class="line">git config --global user.email &quot;xxx@xxx.com&quot;              # 配置邮件</span><br><span class="line">git config --global color.ui true                         # git status等命令自动着色</span><br><span class="line">git config --global color.status auto</span><br><span class="line">git config --global color.diff auto</span><br><span class="line">git config --global color.branch auto</span><br><span class="line">git config --global color.interactive auto</span><br><span class="line">git config --global --unset http.proxy                    # remove  proxy configuration on git</span><br><span class="line">git clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库</span><br><span class="line">git status                                                # 查看当前版本状态（是否修改）</span><br><span class="line">git add xyz                                               # 添加xyz文件至index</span><br><span class="line">git add .                                                 # 增加当前子目录下所有更改过的文件至index</span><br><span class="line">git commit -m &#x27;xxx&#x27;                                       # 提交</span><br><span class="line">git commit --amend -m &#x27;xxx&#x27;                               # 合并上一次提交（用于反复修改）</span><br><span class="line">git commit -am &#x27;xxx&#x27;                                      # 将add和commit合为一步</span><br><span class="line">git rm xxx                                                # 删除index中的文件</span><br><span class="line">git rm -r *                                               # 递归删除</span><br><span class="line">git log                                                   # 显示提交日志</span><br><span class="line">git log -1                                                # 显示1行日志 -n为n行</span><br><span class="line">git log -5</span><br><span class="line">git log --stat                                            # 显示提交日志及相关变动文件</span><br><span class="line">git log -p -m</span><br><span class="line">git show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容</span><br><span class="line">git show dfb02                                            # 可只用commitid的前几位</span><br><span class="line">git show HEAD                                             # 显示HEAD提交日志</span><br><span class="line">git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本</span><br><span class="line">git tag                                                   # 显示已存在的tag</span><br><span class="line">git tag -a v2.0 -m &#x27;xxx&#x27;                                  # 增加v2.0的tag</span><br><span class="line">git show v2.0                                             # 显示v2.0的日志及详细内容</span><br><span class="line">git log v2.0                                              # 显示v2.0的日志</span><br><span class="line">git diff                                                  # 显示所有未添加至index的变更</span><br><span class="line">git diff --cached                                         # 显示所有已添加index但还未commit的变更</span><br><span class="line">git diff HEAD^                                            # 比较与上一个版本的差异</span><br><span class="line">git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异</span><br><span class="line">git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的</span><br><span class="line">git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容</span><br><span class="line">git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）</span><br><span class="line">git branch                                                # 显示本地分支</span><br><span class="line">git branch --contains 50089                               # 显示包含提交50089的分支</span><br><span class="line">git branch -a                                             # 显示所有分支</span><br><span class="line">git branch -r                                             # 显示所有原创分支</span><br><span class="line">git branch --merged                                       # 显示所有已合并到当前分支的分支</span><br><span class="line">git branch --no-merged                                    # 显示所有未合并到当前分支的分支</span><br><span class="line">git branch -m master master_copy                          # 本地分支改名</span><br><span class="line">git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出</span><br><span class="line">git checkout -b master master_copy                        # 上面的完整版</span><br><span class="line">git checkout features/performance                         # 检出已存在的features/performance分支</span><br><span class="line">git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支</span><br><span class="line">git checkout v2.0                                         # 检出版本v2.0</span><br><span class="line">git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出</span><br><span class="line">git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）</span><br><span class="line">git merge origin/master                                   # 合并远程master分支至当前分支</span><br><span class="line">git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改</span><br><span class="line">git push origin master                                    # 将当前分支push到远程master分支</span><br><span class="line">git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支</span><br><span class="line">git push --tags                                           # 把所有tag推送到远程仓库</span><br><span class="line">git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）</span><br><span class="line">git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支</span><br><span class="line">git pull origin master                                    # 获取远程分支master并merge到当前分支</span><br><span class="line">git mv README README2                                     # 重命名文件README为README2</span><br><span class="line">git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）</span><br><span class="line">git rebase</span><br><span class="line">git branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）</span><br><span class="line">git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933</span><br><span class="line">git ls-files                                              # 列出git index包含的文件</span><br><span class="line">git show-branch                                           # 图示当前分支历史</span><br><span class="line">git show-branch --all                                     # 图示所有分支历史</span><br><span class="line">git whatchanged                                           # 显示提交历史对应的文件修改</span><br><span class="line">git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818</span><br><span class="line">git ls-tree HEAD                                          # 内部命令：显示某个git对象</span><br><span class="line">git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASH</span><br><span class="line">git reflog                                                # 显示所有提交，包括孤立节点</span><br><span class="line">git show HEAD@&#123;5&#125;</span><br><span class="line">git show master@&#123;yesterday&#125;                               # 显示master分支昨天的状态</span><br><span class="line">git log --pretty=format:&#x27;%h %s&#x27; --graph                   # 图示提交日志</span><br><span class="line">git show HEAD~3</span><br><span class="line">git show -s --pretty=raw 2be7fcb476</span><br><span class="line">git stash                                                 # 暂存当前修改，将所有至为HEAD状态</span><br><span class="line">git stash list                                            # 查看所有暂存</span><br><span class="line">git stash show -p stash@&#123;0&#125;                               # 参考第一次暂存</span><br><span class="line">git stash apply stash@&#123;0&#125;                                 # 应用第一次暂存</span><br><span class="line">git grep &quot;delete from&quot;                                    # 文件中搜索文本“delete from”</span><br><span class="line">git grep -e &#x27;#define&#x27; --and -e SORT_DIRENT</span><br><span class="line">git gc</span><br><span class="line">git fsck</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
